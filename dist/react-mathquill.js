/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define("MathquillComponent", ["react"], factory);
	else if(typeof exports === 'object')
		exports["MathquillComponent"] = factory(require("react"));
	else
		root["MathquillComponent"] = factory(root["react"]);
})(global, (__WEBPACK_EXTERNAL_MODULE_react__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/EditableMathField.js":
/*!**********************************!*\
  !*** ./src/EditableMathField.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mathquill_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mathquill-loader */ \"./src/mathquill-loader.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _excluded = [\"latex\", \"onChange\", \"config\", \"mathquillDidMount\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar EditableMathField = function EditableMathField(_ref) {\n  var latex = _ref.latex,\n    onChange = _ref.onChange,\n    config = _ref.config,\n    mathquillDidMount = _ref.mathquillDidMount,\n    otherProps = _objectWithoutProperties(_ref, _excluded);\n  // MathQuill fire 2 edit events on startup.\n  var ignoreEditEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(2);\n  var mathField = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var wrapperElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n\n  // This is required to prevent state closure over the onChange function\n  var onChangeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(onChange);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  // Setup MathQuill on the wrapperElement\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!wrapperElement.current) return;\n    var combinedConfig = {\n      restrictMismatchedBrackets: true,\n      handlers: {}\n    };\n    if (config) {\n      combinedConfig = _objectSpread(_objectSpread({}, combinedConfig), config);\n    }\n    var configEditHandler = combinedConfig.handlers.edit;\n    combinedConfig.handlers.edit = function (mathField) {\n      if (configEditHandler) configEditHandler();\n      if (ignoreEditEvents.current > 0) {\n        ignoreEditEvents.current -= 1;\n      } else {\n        if (onChangeRef.current) onChangeRef.current(mathField);\n      }\n    };\n    mathField.current = _mathquill_loader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].MathField(wrapperElement.current, combinedConfig);\n    mathField.current.latex(latex || '');\n    if (mathquillDidMount) mathquillDidMount(mathField.current);\n  }, [wrapperElement]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (mathField.current && mathField.current.latex() !== latex) {\n      mathField.current.latex(latex);\n    }\n  }, [latex]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", _extends({}, otherProps, {\n    ref: wrapperElement\n  }));\n};\nEditableMathField.propTypes = {\n  latex: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),\n  config: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object),\n  mathquillDidMount: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EditableMathField);\n\n//# sourceURL=webpack://MathquillComponent/./src/EditableMathField.js?");

/***/ }),

/***/ "./src/StaticMathField.js":
/*!********************************!*\
  !*** ./src/StaticMathField.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mathquill_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mathquill-loader */ \"./src/mathquill-loader.js\");\nvar _excluded = [\"mathquillDidMount\", \"children\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar StaticMathField = function StaticMathField(_ref) {\n  var mathquillDidMount = _ref.mathquillDidMount,\n    children = _ref.children,\n    otherProps = _objectWithoutProperties(_ref, _excluded);\n  var wrapperElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var mathField = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function () {\n    if (!wrapperElement) return;\n    mathField.current = _mathquill_loader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].StaticMath(wrapperElement.current);\n    if (mathquillDidMount) mathquillDidMount(mathField.current);\n  }, [wrapperElement, children]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", _extends({}, otherProps, {\n    ref: wrapperElement\n  }), children);\n};\nStaticMathField.propTypes = {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  mathquillDidMount: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StaticMathField);\n\n//# sourceURL=webpack://MathquillComponent/./src/StaticMathField.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EditableMathField\": () => (/* binding */ EditableMathField),\n/* harmony export */   \"StaticMathField\": () => (/* binding */ StaticMathField),\n/* harmony export */   \"addStyles\": () => (/* binding */ addStyles),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mathquill_build_mathquill_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathquill/build/mathquill.css */ \"./node_modules/mathquill/build/mathquill.css\");\n\nfunction addStyles() {\n  if (document.getElementById('react-mathquill-styles') == null) {\n    var styleTag = document.createElement('style');\n    styleTag.setAttribute('id', 'react-mathquill-styles');\n    styleTag.innerHTML = mathquill_build_mathquill_css__WEBPACK_IMPORTED_MODULE_0__[\"default\"][0][1];\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(styleTag);\n  }\n}\nvar EditableMathField = (__webpack_require__(/*! ./EditableMathField */ \"./src/EditableMathField.js\")[\"default\"]);\nvar StaticMathField = (__webpack_require__(/*! ./StaticMathField */ \"./src/StaticMathField.js\")[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EditableMathField);\n\n//# sourceURL=webpack://MathquillComponent/./src/index.js?");

/***/ }),

/***/ "./src/mathquill-loader.js":
/*!*********************************!*\
  !*** ./src/mathquill-loader.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// webpack loaders are used to configure mathquill as a commonjs module, see webpack.config.js\nvar MathQuill = __webpack_require__(/*! mathquill/build/mathquill.js */ \"./node_modules/mathquill/build/mathquill.js\");\nvar MQ = MathQuill.getInterface(2);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MQ);\n\n//# sourceURL=webpack://MathquillComponent/./src/mathquill-loader.js?");

/***/ }),

/***/ "./node_modules/mathquill/build/mathquill.css":
/*!****************************************************!*\
  !*** ./node_modules/mathquill/build/mathquill.css ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n * MathQuill v0.10.1, by Han, Jeanine, and Mary\\n * http://mathquill.com | maintainers@mathquill.com\\n *\\n * This Source Code Form is subject to the terms of the\\n * Mozilla Public License, v. 2.0. If a copy of the MPL\\n * was not distributed with this file, You can obtain\\n * one at http://mozilla.org/MPL/2.0/.\\n */\\n.mq-aria-alert {\\n  position: absolute;\\n  left: -1000px;\\n  top: -1000px;\\n  width: 0px;\\n  height: 0px;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n.mq-mathspeak {\\n  position: absolute;\\n  left: -1000px;\\n  top: -1000px;\\n  width: 0px;\\n  height: 0px;\\n  text-align: left;\\n  overflow: hidden;\\n}\\n@font-face {\\n  /* Heavy fonts have been removed */\\n  font-family: Symbola;\\n}\\n.mq-editable-field {\\n  display: -moz-inline-box;\\n  display: inline-block;\\n}\\n.mq-editable-field .mq-cursor {\\n  border-left: 1px solid currentColor;\\n  margin-left: -1px;\\n  position: relative;\\n  z-index: 1;\\n  padding: 0;\\n  display: -moz-inline-box;\\n  display: inline-block;\\n}\\n.mq-editable-field .mq-cursor.mq-blink {\\n  visibility: hidden;\\n}\\n.mq-editable-field,\\n.mq-math-mode .mq-editable-field {\\n  border: 1px solid gray;\\n}\\n.mq-editable-field.mq-focused,\\n.mq-math-mode .mq-editable-field.mq-focused {\\n  -webkit-box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\\n  -moz-box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\\n  box-shadow: #8bd 0 0 1px 2px, inset #6ae 0 0 2px 0;\\n  border-color: #709AC0;\\n}\\n.mq-math-mode .mq-editable-field {\\n  margin: 1px;\\n}\\n.mq-editable-field .mq-latex-command-input {\\n  color: inherit;\\n  font-family: \\\"Courier New\\\", monospace;\\n  border: 1px solid gray;\\n  padding-right: 1px;\\n  margin-right: 1px;\\n  margin-left: 2px;\\n}\\n.mq-editable-field .mq-latex-command-input.mq-empty {\\n  background: transparent;\\n}\\n.mq-editable-field .mq-latex-command-input.mq-hasCursor {\\n  border-color: ActiveBorder;\\n}\\n.mq-editable-field.mq-empty:after,\\n.mq-editable-field.mq-text-mode:after,\\n.mq-math-mode .mq-empty:after {\\n  visibility: hidden;\\n  content: 'c';\\n}\\n.mq-editable-field .mq-cursor:only-child:after,\\n.mq-editable-field .mq-textarea + .mq-cursor:last-child:after {\\n  visibility: hidden;\\n  content: 'c';\\n}\\n.mq-editable-field .mq-text-mode .mq-cursor:only-child:after {\\n  content: '';\\n}\\n.mq-editable-field.mq-text-mode {\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n}\\n.mq-root-block,\\n.mq-math-mode .mq-root-block {\\n  display: -moz-inline-box;\\n  display: inline-block;\\n  width: 100%;\\n  padding: 2px;\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  vertical-align: middle;\\n}\\n.mq-root-block .mq-digit,\\n.mq-math-mode .mq-root-block .mq-digit {\\n  margin-left: 0.009em;\\n  margin-right: 0.009em;\\n}\\n.mq-root-block .mq-group-start,\\n.mq-math-mode .mq-root-block .mq-group-start {\\n  margin-left: 0.11em;\\n  margin-right: -0.01em;\\n}\\n.mq-root-block .mq-group-other,\\n.mq-math-mode .mq-root-block .mq-group-other {\\n  margin-left: -0.01em;\\n  margin-right: -0.01em;\\n}\\n.mq-root-block .mq-group-leading-1,\\n.mq-math-mode .mq-root-block .mq-group-leading-1,\\n.mq-root-block .mq-group-leading-2,\\n.mq-math-mode .mq-root-block .mq-group-leading-2 {\\n  margin-left: 0;\\n  margin-right: -0.01em;\\n}\\n.mq-root-block .mq-group-leading-3,\\n.mq-math-mode .mq-root-block .mq-group-leading-3 {\\n  margin-left: 0.036em;\\n  margin-right: -0.01em;\\n}\\n.mq-root-block.mq-suppress-grouping .mq-group-start,\\n.mq-math-mode .mq-root-block.mq-suppress-grouping .mq-group-start,\\n.mq-root-block.mq-suppress-grouping .mq-group-other,\\n.mq-math-mode .mq-root-block.mq-suppress-grouping .mq-group-other,\\n.mq-root-block.mq-suppress-grouping .mq-group-leading-1,\\n.mq-math-mode .mq-root-block.mq-suppress-grouping .mq-group-leading-1,\\n.mq-root-block.mq-suppress-grouping .mq-group-leading-2,\\n.mq-math-mode .mq-root-block.mq-suppress-grouping .mq-group-leading-2,\\n.mq-root-block.mq-suppress-grouping .mq-group-leading-3,\\n.mq-math-mode .mq-root-block.mq-suppress-grouping .mq-group-leading-3 {\\n  margin-left: 0.009em;\\n  margin-right: 0.009em;\\n}\\n.mq-math-mode {\\n  font-variant: normal;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-size: 115%;\\n  line-height: 1;\\n  display: -moz-inline-box;\\n  display: inline-block;\\n}\\n.mq-math-mode .mq-non-leaf,\\n.mq-math-mode .mq-scaled {\\n  display: -moz-inline-box;\\n  display: inline-block;\\n}\\n.mq-math-mode var,\\n.mq-math-mode .mq-text-mode,\\n.mq-math-mode .mq-nonSymbola {\\n  font-family: \\\"Times New Roman\\\", Symbola, serif;\\n  line-height: .9;\\n}\\n.mq-math-mode svg {\\n  fill: currentColor;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n.mq-math-mode * {\\n  font-size: inherit;\\n  line-height: inherit;\\n  margin: 0;\\n  padding: 0;\\n  border-color: black;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  box-sizing: border-box;\\n}\\n.mq-math-mode .mq-empty {\\n  background: rgba(0, 0, 0, 0.2);\\n}\\n.mq-math-mode .mq-empty.mq-root-block {\\n  background: transparent;\\n}\\n.mq-math-mode .mq-empty.mq-quiet-delimiter {\\n  background: transparent;\\n}\\n.mq-math-mode.mq-empty {\\n  background: transparent;\\n}\\n.mq-math-mode .mq-text-mode {\\n  display: inline-block;\\n  white-space: pre;\\n}\\n.mq-math-mode .mq-text-mode.mq-hasCursor {\\n  box-shadow: inset darkgray 0 .1em .2em;\\n  padding: 0 .1em;\\n  margin: 0 -0.1em;\\n  min-width: 1ex;\\n}\\n.mq-math-mode .mq-font {\\n  font: 1em \\\"Times New Roman\\\", Symbola, serif;\\n}\\n.mq-math-mode .mq-font * {\\n  font-family: inherit;\\n  font-style: inherit;\\n}\\n.mq-math-mode b,\\n.mq-math-mode b.mq-font {\\n  font-weight: bolder;\\n}\\n.mq-math-mode var,\\n.mq-math-mode i,\\n.mq-math-mode i.mq-font {\\n  font-style: italic;\\n}\\n.mq-math-mode var.mq-f {\\n  margin-right: 0.2em;\\n  margin-left: 0.1em;\\n}\\n.mq-math-mode .mq-roman var.mq-f {\\n  margin: 0;\\n}\\n.mq-math-mode big {\\n  font-size: 200%;\\n}\\n.mq-math-mode .mq-int > big {\\n  display: inline-block;\\n  -webkit-transform: scaleX(0.7);\\n  -moz-transform: scaleX(0.7);\\n  -ms-transform: scaleX(0.7);\\n  -o-transform: scaleX(0.7);\\n  transform: scaleX(0.7);\\n  vertical-align: -0.16em;\\n}\\n.mq-math-mode .mq-int > .mq-supsub {\\n  font-size: 80%;\\n  vertical-align: -1.1em;\\n  padding-right: .2em;\\n}\\n.mq-math-mode .mq-int > .mq-supsub > .mq-sup > .mq-sup-inner {\\n  vertical-align: 1.3em;\\n}\\n.mq-math-mode .mq-int > .mq-supsub > .mq-sub {\\n  margin-left: -0.35em;\\n}\\n.mq-math-mode .mq-roman {\\n  font-style: normal;\\n}\\n.mq-math-mode .mq-sans-serif {\\n  font-family: sans-serif, Symbola, serif;\\n}\\n.mq-math-mode .mq-monospace {\\n  font-family: monospace, Symbola, serif;\\n}\\n.mq-math-mode .mq-overline {\\n  border-top: 1px solid;\\n  margin-top: 1px;\\n}\\n.mq-math-mode .mq-underline {\\n  border-bottom: 1px solid;\\n  margin-bottom: 1px;\\n}\\n.mq-math-mode .mq-binary-operator {\\n  padding: 0 0.2em;\\n  display: -moz-inline-box;\\n  display: inline-block;\\n}\\n.mq-math-mode .mq-supsub {\\n  text-align: left;\\n  font-size: 90%;\\n  vertical-align: -0.5em;\\n}\\n.mq-math-mode .mq-supsub.mq-sup-only {\\n  vertical-align: .5em;\\n}\\n.mq-math-mode .mq-supsub.mq-sup-only > .mq-sup {\\n  display: inline-block;\\n  vertical-align: text-bottom;\\n}\\n.mq-math-mode .mq-supsub .mq-sup {\\n  display: block;\\n}\\n.mq-math-mode .mq-supsub .mq-sub {\\n  display: block;\\n  float: left;\\n}\\n.mq-math-mode .mq-supsub .mq-binary-operator {\\n  padding: 0 .1em;\\n}\\n.mq-math-mode .mq-supsub .mq-fraction {\\n  font-size: 70%;\\n}\\n.mq-math-mode sup.mq-nthroot {\\n  font-size: 80%;\\n  vertical-align: 0.8em;\\n  margin-right: -0.6em;\\n  margin-left: .2em;\\n  min-width: .5em;\\n}\\n.mq-math-mode .mq-ghost svg {\\n  opacity: 0.2;\\n}\\n.mq-math-mode .mq-bracket-middle {\\n  margin-top: .1em;\\n  margin-bottom: .1em;\\n}\\n.mq-math-mode .mq-bracket-l,\\n.mq-math-mode .mq-bracket-r {\\n  position: absolute;\\n  top: 0;\\n  bottom: 2px;\\n}\\n.mq-math-mode .mq-bracket-l {\\n  left: 0;\\n}\\n.mq-math-mode .mq-bracket-r {\\n  right: 0;\\n}\\n.mq-math-mode .mq-bracket-container {\\n  position: relative;\\n}\\n.mq-math-mode .mq-array {\\n  vertical-align: middle;\\n  text-align: center;\\n}\\n.mq-math-mode .mq-array > span {\\n  display: block;\\n}\\n.mq-math-mode .mq-operator-name {\\n  font-family: Symbola, \\\"Times New Roman\\\", serif;\\n  line-height: .9;\\n  font-style: normal;\\n}\\n.mq-math-mode var.mq-operator-name.mq-first {\\n  padding-left: .2em;\\n}\\n.mq-math-mode var.mq-operator-name.mq-last,\\n.mq-math-mode .mq-supsub.mq-after-operator-name {\\n  padding-right: .2em;\\n}\\n.mq-math-mode .mq-fraction {\\n  font-size: 90%;\\n  text-align: center;\\n  vertical-align: -0.4em;\\n  padding: 0 .2em;\\n}\\n.mq-math-mode .mq-fraction,\\n.mq-math-mode .mq-large-operator,\\n.mq-math-mode x:-moz-any-link {\\n  display: -moz-groupbox;\\n}\\n.mq-math-mode .mq-fraction,\\n.mq-math-mode .mq-large-operator,\\n.mq-math-mode x:-moz-any-link,\\n.mq-math-mode x:default {\\n  display: inline-block;\\n}\\n.mq-math-mode .mq-numerator,\\n.mq-math-mode .mq-denominator,\\n.mq-math-mode .mq-dot-recurring {\\n  display: block;\\n}\\n.mq-math-mode .mq-numerator {\\n  padding: 0 0.1em;\\n}\\n.mq-math-mode .mq-denominator {\\n  border-top: 1px solid;\\n  float: right;\\n  width: 100%;\\n  padding: 0.1em;\\n}\\n.mq-math-mode .mq-dot-recurring {\\n  text-align: center;\\n  height: 0.3em;\\n}\\n.mq-math-mode .mq-sqrt-prefix {\\n  position: absolute;\\n  top: 1px;\\n  bottom: 0.15em;\\n  width: 0.95em;\\n}\\n.mq-math-mode .mq-sqrt-container {\\n  position: relative;\\n}\\n.mq-math-mode .mq-sqrt-stem {\\n  border-top: 1px solid;\\n  margin-top: 1px;\\n  margin-left: 0.9em;\\n  padding-left: .15em;\\n  padding-right: .2em;\\n  margin-right: .1em;\\n  padding-top: 1px;\\n}\\n.mq-math-mode .mq-diacritic-above {\\n  display: block;\\n  text-align: center;\\n  line-height: .4em;\\n}\\n.mq-math-mode .mq-diacritic-stem {\\n  display: block;\\n  text-align: center;\\n}\\n.mq-math-mode .mq-hat-prefix {\\n  display: block;\\n  text-align: center;\\n  line-height: .95em;\\n  margin-bottom: -0.7em;\\n  transform: scaleX(1.5);\\n  -moz-transform: scaleX(1.5);\\n  -o-transform: scaleX(1.5);\\n  -webkit-transform: scaleX(1.5);\\n}\\n.mq-math-mode .mq-hat-stem {\\n  display: block;\\n}\\n.mq-math-mode .mq-large-operator {\\n  vertical-align: -0.2em;\\n  padding: .2em;\\n  text-align: center;\\n}\\n.mq-math-mode .mq-large-operator .mq-from,\\n.mq-math-mode .mq-large-operator big,\\n.mq-math-mode .mq-large-operator .mq-to {\\n  display: block;\\n}\\n.mq-math-mode .mq-large-operator .mq-from,\\n.mq-math-mode .mq-large-operator .mq-to {\\n  font-size: 80%;\\n}\\n.mq-math-mode .mq-large-operator .mq-from {\\n  float: right;\\n  /* take out of normal flow to manipulate baseline */\\n  width: 100%;\\n}\\n.mq-math-mode,\\n.mq-math-mode .mq-editable-field {\\n  cursor: text;\\n  font-family: Symbola, \\\"Times New Roman\\\", serif;\\n}\\n.mq-math-mode .mq-overarc {\\n  border-top: 1px solid black;\\n  -webkit-border-top-right-radius: 50% .3em;\\n  -moz-border-radius-topright: 50% .3em;\\n  border-top-right-radius: 50% .3em;\\n  -webkit-border-top-left-radius: 50% .3em;\\n  -moz-border-radius-topleft: 50% .3em;\\n  border-top-left-radius: 50% .3em;\\n  margin-top: 1px;\\n  padding-top: 0.15em;\\n}\\n.mq-math-mode .mq-overarrow {\\n  min-width: .5em;\\n  border-top: 1px solid black;\\n  margin-top: 1px;\\n  padding-top: 0.2em;\\n  text-align: center;\\n  position: relative;\\n}\\n.mq-math-mode .mq-overarrow:after {\\n  position: absolute;\\n  right: -0.1em;\\n  top: -0.48em;\\n  font-size: 0.5em;\\n  content: '\\\\27A4';\\n}\\n.mq-math-mode .mq-overarrow.mq-arrow-left:after {\\n  content: '';\\n  display: none;\\n}\\n.mq-math-mode .mq-overarrow.mq-arrow-left:before,\\n.mq-math-mode .mq-overarrow.mq-arrow-leftright:before {\\n  position: absolute;\\n  top: -0.48em;\\n  left: -0.1em;\\n  font-size: 0.5em;\\n  content: '\\\\27A4';\\n  -moz-transform: scaleX(-1);\\n  -o-transform: scaleX(-1);\\n  -webkit-transform: scaleX(-1);\\n  transform: scaleX(-1);\\n  filter: FlipH;\\n  -ms-filter: \\\"FlipH\\\";\\n}\\n.mq-math-mode .mq-selection,\\n.mq-editable-field .mq-selection,\\n.mq-math-mode .mq-selection .mq-non-leaf,\\n.mq-editable-field .mq-selection .mq-non-leaf,\\n.mq-math-mode .mq-selection .mq-scaled,\\n.mq-editable-field .mq-selection .mq-scaled {\\n  background: #B4D5FE !important;\\n}\\n.mq-math-mode .mq-selection.mq-blur,\\n.mq-editable-field .mq-selection.mq-blur,\\n.mq-math-mode .mq-selection.mq-blur .mq-non-leaf,\\n.mq-editable-field .mq-selection.mq-blur .mq-non-leaf,\\n.mq-math-mode .mq-selection.mq-blur .mq-scaled,\\n.mq-editable-field .mq-selection.mq-blur .mq-scaled {\\n  background: #D4D4D4 !important;\\n  color: black;\\n  border-color: black;\\n}\\nhtml body .mq-math-mode .mq-selection .mq-nthroot-container *,\\nhtml body .mq-editable-field .mq-selection .mq-nthroot-container * {\\n  background: transparent !important;\\n}\\n.mq-editable-field .mq-textarea,\\n.mq-math-mode .mq-textarea {\\n  position: relative;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n.mq-editable-field .mq-textarea *,\\n.mq-math-mode .mq-textarea * {\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n  position: absolute;\\n  clip: rect(1em 1em 1em 1em);\\n  -webkit-transform: scale(0);\\n  -moz-transform: scale(0);\\n  -ms-transform: scale(0);\\n  -o-transform: scale(0);\\n  transform: scale(0);\\n  resize: none;\\n  width: 1px;\\n  height: 1px;\\n  box-sizing: content-box;\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/mathquill/build/mathquill.css?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/mathquill/build/mathquill.js":
/*!***************************************************!*\
  !*** ./node_modules/mathquill/build/mathquill.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar __webpack_jquery = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\nwindow.jQuery=__webpack_jquery;\n\n/**\n * MathQuill v0.10.1, by Han, Jeanine, and Mary\n * http://mathquill.com | maintainers@mathquill.com\n *\n * This Source Code Form is subject to the terms of the\n * Mozilla Public License, v. 2.0. If a copy of the MPL\n * was not distributed with this file, You can obtain\n * one at http://mozilla.org/MPL/2.0/.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n(function () {\n    var L = -1;\n    var R = 1;\n    var min = Math.min;\n    var max = Math.max;\n    function noop() { }\n    /**\n     * a development-only debug method.  This definition and all\n     * calls to `pray` will be stripped from the minified\n     * build of mathquill.\n     *\n     * This function must be called by name to be removed\n     * at compile time.  Do not define another function\n     * with the same name, and only call this function by\n     * name.\n     */\n    function pray(message, cond) {\n        if (!cond)\n            throw new Error('prayer failed: ' + message);\n    }\n    function prayDirection(dir) {\n        pray('a direction was passed', dir === L || dir === R);\n    }\n    var urlParams = new URLSearchParams(window.location.search);\n    function parseHTML(s) {\n        // https://youmightnotneedjquery.com/#parse_html\n        var tmp = document.implementation.createHTMLDocument('');\n        tmp.body.innerHTML = s;\n        if (tmp.body.children.length === 1)\n            return tmp.body.children[0];\n        var frag = document.createDocumentFragment();\n        while (tmp.body.firstChild) {\n            frag.appendChild(tmp.body.firstChild);\n        }\n        return frag;\n    }\n    var h = function h(type, attributes, children) {\n        var el;\n        switch (type) {\n            case 'svg':\n            case 'path':\n                el = document.createElementNS('http://www.w3.org/2000/svg', type);\n                break;\n            default:\n                el = document.createElement(type);\n        }\n        for (var key_1 in attributes) {\n            var value = attributes[key_1];\n            if (value === undefined)\n                continue;\n            el.setAttribute(key_1, typeof value === 'string' ? value : String(value));\n        }\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                el.appendChild(children[i]);\n            }\n        }\n        return el;\n    };\n    h.text = function (s) { return document.createTextNode(s); };\n    h.block = function (type, attributes, block) {\n        var out = h(type, attributes, [block.html()]);\n        block.setDOM(out);\n        NodeBase.linkElementByBlockNode(out, block);\n        return out;\n    };\n    h.entityText = function (s) {\n        // TODO: replace with h.text(U_BLAHBLAH) or maybe a named entity->unicode lookup\n        var val = parseHTML(s);\n        pray('entity parses to a single text node', val instanceof DocumentFragment &&\n            val.childNodes.length === 1 &&\n            val.childNodes[0] instanceof Text);\n        return val.childNodes[0];\n    };\n    function closest(el, s) {\n        var _a, _b, _c;\n        if (typeof ((_a = el) === null || _a === void 0 ? void 0 : _a.closest) === 'function') {\n            return el.closest(s);\n        }\n        if (!(el instanceof HTMLElement))\n            return null;\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#polyfill\n        var matches = Element.prototype.matches ||\n            Element.prototype.msMatchesSelector ||\n            Element.prototype.webkitMatchesSelector;\n        var match = el;\n        do {\n            if (matches.call(match, s))\n                return match;\n            match = (_c = (_b = match === null || match === void 0 ? void 0 : match.parentElement) !== null && _b !== void 0 ? _b : match === null || match === void 0 ? void 0 : match.parentNode) !== null && _c !== void 0 ? _c : null;\n        } while (match !== null && match.nodeType === 1);\n        return null;\n    }\n    var U_NO_BREAK_SPACE = '\\u00A0';\n    var U_ZERO_WIDTH_SPACE = '\\u200B';\n    var U_DOT_ABOVE = '\\u02D9';\n    var U_NARY_SUMMATION = '\\u2211';\n    var U_NARY_PRODUCT = '\\u220F';\n    var U_NARY_COPRODUCT = '\\u2210';\n    var U_INTEGRAL = '\\u222B';\n    /**\n     * Like `el.getBoundingClientRect()` but avoids throwing for\n     * disconnected and hidden elements in IE <= 11.\n     * */\n    function getBoundingClientRect(el) {\n        // Return zeros for disconnected and hidden (display: none) elements\n        // Running getBoundingClientRect on a disconnected node in IE <=11 throws an error\n        // https://github.com/jquery/jquery/blob/a684e6ba836f7c553968d7d026ed7941e1a612d8/src/offset.js#L83-L86\n        if (!el.getClientRects().length) {\n            return {\n                top: 0,\n                left: 0,\n                height: 0,\n                width: 0,\n                x: 0,\n                y: 0,\n                bottom: 0,\n                right: 0,\n            };\n        }\n        return el.getBoundingClientRect();\n    }\n    /**\n     * Returns the number of pixels that the document is currently scrolled\n     * horizontally -- `window.scrollX` in modern browsers.\n     * */\n    function getScrollX() {\n        // In IE9, scrollX was called pageXOffset\n        // Previous versions of IE had neither property and use scrollLeft instead\n        //\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollX#notes\n        return window.pageXOffset !== undefined\n            ? window.pageXOffset\n            : (document.documentElement || document.body.parentNode || document.body)\n                .scrollLeft;\n    }\n    /**\n     * Returns the number of pixels that the document is currently scrolled\n     * vertically -- `window.scrollY` in modern browsers.\n     * */\n    function getScrollY() {\n        // In IE9, scrollY was called pageYOffset\n        // Previous versions of IE had neither property and use scrollTop instead\n        //\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollX#notes\n        return window.pageYOffset !== undefined\n            ? window.pageYOffset\n            : (document.documentElement || document.body.parentNode || document.body)\n                .scrollTop;\n    }\n    /**\n     * Given `duration` in ms and callback `cb`, immediately calls `cb(progress, scheduleNext, cancel)` with:\n     * - `progress` set to `0` if duration > 0, or 1 if duration <= 0\n     * - `scheduleNext` a function that schedules a future call to `cb`\n     * - `cancel` a function that cancels any pending `scheduleNext` call.\n     *\n     * `scheduleNext` schedules a call to `cb` with `progress` set to the\n     * ratio of currently elapsed time and `duration`.\n     *\n     * To continue running the animation, `cb` should call `scheduleNext`.\n     *\n     * To stop the animation, it is the responsibility of `cb` to check\n     * whether progress is greater than or equal to 1, in which case `cb`\n     * should not call `scheduleNext`.\n     *\n     * `scheduleNext` uses `requestAnimationFrame` if available and falls\n     * back to `setTimeout(..., 13)` otherwise. Times are always based on\n     * `Date.now()` for compatibility between `requestAnimationFrame` and\n     * the `setTimeout` fallback. `cb` will only be called with strictly\n     * monotonic `progress` values.\n     *\n     * Note: `animate` purposely puts a lot of responsibility on the caller\n     * to keep its implementation simple because it isn't used very widely\n     * in the project.\n     */\n    var animate = (function () {\n        // IIFE exists just to hang on to configured rafShim and cancelShim\n        // functions\n        var rafShim, cancelShim;\n        if (typeof requestAnimationFrame === 'function' &&\n            typeof cancelAnimationFrame === 'function') {\n            rafShim = requestAnimationFrame;\n            cancelShim = cancelAnimationFrame;\n        }\n        else {\n            rafShim = function (cb) { return setTimeout(cb, 13); };\n            cancelShim = clearTimeout;\n        }\n        return function (duration, cb) {\n            var start = Date.now();\n            var cancelToken;\n            var progress = 0;\n            function step() {\n                var proposedProgress = (Date.now() - start) / duration;\n                // Enforce that progress is strictly monotonic\n                if (proposedProgress <= progress) {\n                    scheduleNext();\n                }\n                else {\n                    progress = proposedProgress;\n                }\n                cb(progress, scheduleNext, cancel);\n            }\n            function cancel() {\n                if (cancelToken !== undefined)\n                    cancelShim(cancelToken);\n                cancelToken = undefined;\n            }\n            function scheduleNext() {\n                // Calling cancel here ensures that there are never multiple\n                // concurrent callbacks scheduled for a single animation, even if\n                // the caller calls `scheduleNext` multiple times in a single\n                // event loop (which is always a mistake)\n                cancel();\n                cancelToken = rafShim(step);\n            }\n            cb(duration <= 0 ? 1 : 0, scheduleNext, cancel);\n        };\n    })();\n    var Aria = /** @class */ (function () {\n        function Aria(controller) {\n            this.span = h('span', {\n                class: 'mq-aria-alert',\n                'aria-live': 'assertive',\n                'aria-atomic': 'true',\n            });\n            this.msg = '';\n            this.items = [];\n            this.controller = controller;\n        }\n        Aria.prototype.attach = function () {\n            var container = this.controller.container;\n            if (this.span.parentNode !== container) {\n                domFrag(container).prepend(domFrag(this.span));\n            }\n        };\n        Aria.prototype.queue = function (item, shouldDescribe) {\n            if (shouldDescribe === void 0) { shouldDescribe = false; }\n            var output = '';\n            if (item instanceof MQNode) {\n                // Some constructs include verbal shorthand (such as simple fractions and exponents).\n                // Since ARIA alerts relate to moving through interactive content, we don't want to use that shorthand if it exists\n                // since doing so may be ambiguous or confusing.\n                var itemMathspeak = item.mathspeak({ ignoreShorthand: true });\n                if (shouldDescribe) {\n                    // used to ensure item is described when cursor reaches block boundaries\n                    if (item.parent &&\n                        item.parent.ariaLabel &&\n                        item.ariaLabel === 'block') {\n                        output = item.parent.ariaLabel + ' ' + itemMathspeak;\n                    }\n                    else if (item.ariaLabel) {\n                        output = item.ariaLabel + ' ' + itemMathspeak;\n                    }\n                }\n                if (output === '') {\n                    output = itemMathspeak;\n                }\n            }\n            else {\n                output = item || '';\n            }\n            this.items.push(output);\n            return this;\n        };\n        Aria.prototype.queueDirOf = function (dir) {\n            prayDirection(dir);\n            return this.queue(dir === L ? 'before' : 'after');\n        };\n        Aria.prototype.queueDirEndOf = function (dir) {\n            prayDirection(dir);\n            return this.queue(dir === L ? 'beginning of' : 'end of');\n        };\n        Aria.prototype.alert = function (t) {\n            this.attach();\n            if (t)\n                this.queue(t);\n            if (this.items.length) {\n                // To cut down on potential verbiage from multiple Mathquills firing near-simultaneous ARIA alerts,\n                // update the text of this instance if its container also has keyboard focus.\n                // If it does not, leave the DOM unchanged but flush the queue regardless.\n                // Note: updating the msg variable regardless of focus for unit tests.\n                this.msg = this.items\n                    .join(' ')\n                    .replace(/ +(?= )/g, '')\n                    .trim();\n                if (this.controller.containerHasFocus()) {\n                    this.span.textContent = this.msg;\n                }\n            }\n            return this.clear();\n        };\n        Aria.prototype.clear = function () {\n            this.items.length = 0;\n            return this;\n        };\n        return Aria;\n    }());\n    /**\n     * A `DOMFragment` represents a contiguous span of sibling DOM Nodes,\n     * which may include both Element nodes and other nodes like Text and\n     * Comment nodes. A `DOMFragment` may represent zero or more nodes.\n     *\n     * `DOMFragments` are created using the `DOMFragment.create` factory\n     * function, which is also aliased as `domFrag` for convenience.\n     *\n     * A `DOMFragment` simply holds references to nodes. It doesn't move or\n     * mutate them in the way that the native `DocumentFragment` does.\n     *\n     * `DOMFragment` implements many of the same methods for manipulating a\n     * collection of DOM elements that jQuery does, but it has some notable\n     * differences:\n     *\n     * 1.  A jQuery collection can hold an arbitrary ordered set of DOM\n     *     elements, but a `DOMFragment` can only hold a contiguous span of\n     *     sibling nodes.\n     * 2.  Some jQuery DOM manipulation methods like `insert{Before,After}`,\n     *     `append`, `prepend`, `appendTo`, `prependTo`, etc. may insert\n     *     several clones of a collection into different places in the DOM.\n     *     `DOMFragment` never makes clones of DOM nodes--instead, when\n     *     targeting multi-element fragments, it moves source nodes before\n     *     or after the targeted fragment as appropriate without ever making\n     *     more copies.\n     * 3.  For methods like `.children()`, where it's likely to be a mistake\n     *     to call the method on a fragment that doesn't contain exactly one\n     *     node or element, `DOMFragment` will throw whereas jQuery will\n     *     silently do something possibly unintended. Methods that assert\n     *     are commented with the properties that they assert.\n     *\n     * Internally, `DOMFragment` holds immutable references to the left and\n     * right end nodes (if the fragment is not empty). The other nodes are\n     * represented implicitly through the sibling pointers of the DOM nodes\n     * themselves. This means that it is possible to invalidate a\n     * `DOMFragment` by moving one of its ends without moving the other in\n     * such a way that they are no longer siblings. It is also possible to\n     * change the contents of a `DOMFragment` by adding or removing DOM\n     * nodes between its ends.\n     */\n    var DOMFragment = /** @class */ (function () {\n        /**\n         * Constructor is private to enforce that the invariant checks in\n         * `create` are applied to outside callers. Internal methods are\n         * allowed to use this constructor when they can guarantee they're\n         * passing sibling nodes (such as children of a parent node).\n         */\n        function DOMFragment(first, last) {\n            var _a;\n            if (arguments.length === 1)\n                last = first;\n            if (!first || !last)\n                return;\n            this.ends = (_a = {}, _a[L] = first, _a[R] = last, _a);\n        }\n        /**\n         * Returns a `DOMFragment` representing the contiguous span of sibling\n         * DOM nodes betewen `first` and `last`. If only one element is\n         * passed, creates a `DOMFragment` representing that single element.\n         * If no elements are passed, creates and empty `DOMFragment`.\n         *\n         * If two elements are passed, asserts that the second element is a\n         * forward sibling of the first element. Checking this invariant is\n         * O(n) in the total number of nodes in the fragment\n         */\n        DOMFragment.create = function (first, last) {\n            if (arguments.length === 1)\n                last = first;\n            pray('No half-empty DOMFragments', !!first === !!last);\n            var out = new DOMFragment(first, last);\n            pray('last is a forward sibling of first', out.isValid());\n            return out;\n        };\n        DOMFragment.prototype.isEmpty = function () {\n            return this.ends === undefined;\n        };\n        DOMFragment.prototype.isOneNode = function () {\n            return !!(this.ends && this.ends[L] === this.ends[R]);\n        };\n        /**\n         * Returns true if the fragment is empty or if its last node is equal\n         * to its first node or is a forward sibling of its first node.\n         *\n         * DOMFragments may be invalidated if any of the nodes they contain\n         * are moved or removed independently of the other nodes they contain.\n         *\n         * Note that this check visits each node in the fragment, so it is\n         * O(n).\n         */\n        DOMFragment.prototype.isValid = function () {\n            if (!this.ends)\n                return true;\n            if (this.ends[L] === this.ends[R])\n                return true;\n            var maybeLast;\n            this.eachNode(function (el) { return (maybeLast = el); });\n            return maybeLast === this.ends[R];\n        };\n        /**\n         * Return the first Node of this fragment. May be a a Node that is not\n         * an Element such as a Text or Comment node.\n         *\n         * Asserts fragment is not empty.\n         */\n        DOMFragment.prototype.firstNode = function () {\n            pray('Fragment is not empty', this.ends);\n            return this.ends[L];\n        };\n        /**\n         * Return the last Node of this fragment. May be a a Node that is not\n         * an Element such as a Text or Comment node.\n         *\n         * Asserts fragment is not empty.\n         */\n        DOMFragment.prototype.lastNode = function () {\n            pray('Fragment is not empty', this.ends);\n            return this.ends[R];\n        };\n        /**\n         * Return a fragment representing the children (including Text and\n         * Comment nodes) of the node represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Node.\n         *\n         * Note, because this includes text and comment nodes, this is more\n         * like jQuery's .contents() than jQuery's .children()\n         */\n        DOMFragment.prototype.children = function () {\n            var el = this.oneNode();\n            var first = el.firstChild;\n            var last = el.lastChild;\n            return first && last ? new DOMFragment(first, last) : new DOMFragment();\n        };\n        /**\n         * Return a new `DOMFragment` spanning this fragment and `sibling`\n         * fragment. Does not perform any DOM operations.\n         *\n         * Asserts that `sibling` is either empty or a forward sibling of\n         * this fragment that may share its first node with the last node of\n         * this fragment\n         */\n        DOMFragment.prototype.join = function (sibling) {\n            if (!this.ends)\n                return sibling;\n            if (!sibling.ends)\n                return this;\n            // Check if sibling is actually a sibling of this span\n            var found = false;\n            var current = this.ends[R].nextSibling;\n            while (current) {\n                if (current === sibling.ends[L]) {\n                    found = true;\n                    break;\n                }\n                current = current.nextSibling;\n            }\n            pray('sibling must be a forward DOM sibling of this fragment', found);\n            return new DOMFragment(this.ends[L], sibling.ends[R]);\n        };\n        /**\n         * Return the single DOM Node represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Node.\n         */\n        DOMFragment.prototype.oneNode = function () {\n            pray('Fragment has a single node', this.ends && this.ends[L] === this.ends[R]);\n            return this.ends[L];\n        };\n        /**\n         * Return the single DOM Element represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Node, and that node\n         * is an Element node.\n         */\n        DOMFragment.prototype.oneElement = function () {\n            var el = this.oneNode();\n            pray('Node is an Element', el.nodeType === Node.ELEMENT_NODE);\n            return el;\n        };\n        /**\n         * Return the single DOM Text node represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Node, and that node\n         * is a Text node.\n         */\n        DOMFragment.prototype.oneText = function () {\n            var el = this.oneNode();\n            pray('Node is Text', el.nodeType === Node.TEXT_NODE);\n            return el;\n        };\n        /**\n         * Calls callback sequentially with each node in this fragment.\n         * Includes nodes that are not Elements, such as Text and Comment\n         * nodes.\n         */\n        DOMFragment.prototype.eachNode = function (cb) {\n            if (!this.ends)\n                return this;\n            var stop = this.ends[R];\n            for (var node = this.ends[L], next = void 0; node; node = next) {\n                // Note, this loop is organized in a slightly tricky way in order\n                // cache \"next\" before calling the callback. This is done because\n                // the callback could mutate node.nextSibling (e.g. by moving the\n                // node to a documentFragment, like toDocumentFragment does).\n                //\n                // It's still possible to break this iteration by messing with\n                // forward siblings of node in the callback, although it's\n                // probably rare to want to do that. Perhaps this means \"each\" is\n                // too dangerous to have as a public method.\n                next = node.nextSibling;\n                cb(node);\n                if (node === stop)\n                    break;\n            }\n            return this;\n        };\n        /**\n         * Calls callback sequentially with each Element node in this\n         * fragment. Skips nodes that are not Elements, such as Text and\n         * Comment nodes.\n         */\n        DOMFragment.prototype.eachElement = function (cb) {\n            this.eachNode(function (el) {\n                if (el.nodeType === Node.ELEMENT_NODE)\n                    cb(el);\n            });\n            return this;\n        };\n        /**\n         * Returns the concatenated text content of all of the nodes in the\n         * fragment.\n         */\n        DOMFragment.prototype.text = function () {\n            var accum = '';\n            this.eachNode(function (node) {\n                accum += node.textContent || '';\n            });\n            return accum;\n        };\n        /**\n         * Returns an array of all the Nodes in this fragment, including nodes\n         * that are not Element nodes such as Text and Comment nodes;\n         */\n        DOMFragment.prototype.toNodeArray = function () {\n            var accum = [];\n            this.eachNode(function (el) { return accum.push(el); });\n            return accum;\n        };\n        /**\n         * Returns an array of all the Element nodes in this fragment. The\n         * result does not include nodes that are not Elements, such as Text\n         * and Comment nodes.\n         */\n        DOMFragment.prototype.toElementArray = function () {\n            var accum = [];\n            this.eachElement(function (el) { return accum.push(el); });\n            return accum;\n        };\n        /**\n         * Moves all of the nodes in this fragment into a new DocumentFragment\n         * and returns it. This includes Nodes that are not Elements such as\n         * Text and Comment nodes.\n         */\n        DOMFragment.prototype.toDocumentFragment = function () {\n            var frag = document.createDocumentFragment();\n            this.eachNode(function (el) { return frag.appendChild(el); });\n            return frag;\n        };\n        /**\n         * Insert all the nodes in this fragment into the DOM directly before\n         * the first node of `sibling` fragment. If `sibling` is empty or does\n         * not have a parent node, detaches this fragment from the document.\n         *\n         * Note that this behavior differs from jQuery if `sibling` is a\n         * collection with multiple nodes. In that case, jQuery inserts this\n         * collection before the first node in `sibling`, and then inserts a\n         * clone of this collection before each additional node in the\n         * `sibling` collection. DOMFragment only ever inserts this collection\n         * before the first node of the sibling fragment, and never inserts\n         * additional clones.\n         */\n        DOMFragment.prototype.insertBefore = function (sibling) {\n            return this.insDirOf(L, sibling);\n        };\n        /**\n         * Insert all the nodes in this fragment into the DOM directly after\n         * the last node of `sibling` fragment. If `sibling` is empty or does\n         * not have a parent node, detaches this fragment from the document.\n         *\n         * Note that this behavior differs from jQuery if `sibling` is a\n         * collection with multiple nodes. In that case, jQuery inserts this\n         * collection before the first node in `sibling`, and then inserts a\n         * clone of this collection before each additional node in the\n         * `sibling` collection. DOMFragment only ever inserts this collection\n         * before the first node of the sibling fragment, and never inserts\n         * additional clones.\n         */\n        DOMFragment.prototype.insertAfter = function (sibling) {\n            return this.insDirOf(R, sibling);\n        };\n        /**\n         * Append children to the node represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Element.\n         */\n        DOMFragment.prototype.append = function (children) {\n            children.appendTo(this.oneElement());\n            return this;\n        };\n        /**\n         * Prepend children to the node represented by this fragment.\n         *\n         * Asserts that this fragment contains exactly one Element.\n         */\n        DOMFragment.prototype.prepend = function (children) {\n            children.prependTo(this.oneElement());\n            return this;\n        };\n        /**\n         * Append all the nodes in this fragment to the children of `el`.\n         */\n        DOMFragment.prototype.appendTo = function (el) {\n            return this.insAtDirEnd(R, el);\n        };\n        /**\n         * Prepend all the nodes in this fragment to the children of `el`.\n         */\n        DOMFragment.prototype.prependTo = function (el) {\n            return this.insAtDirEnd(L, el);\n        };\n        /**\n         * Return a fragment containing the parent node of the nodes in this\n         * fragment. Returns an empty fragment if this fragment is empty or\n         * does not have a parent node.\n         */\n        DOMFragment.prototype.parent = function () {\n            if (!this.ends)\n                return this;\n            var parent = this.ends[L].parentNode;\n            if (!parent)\n                return new DOMFragment();\n            return new DOMFragment(parent);\n        };\n        /**\n         * Replace the children of `el` with the contents of this fragment,\n         * and place `el` into the DOM at the previous location of this\n         * fragment.\n         */\n        DOMFragment.prototype.wrapAll = function (el) {\n            el.textContent = ''; // First empty the wrapping element\n            if (!this.ends)\n                return this;\n            var parent = this.ends[L].parentNode;\n            var next = this.ends[R].nextSibling;\n            this.appendTo(el);\n            if (parent) {\n                parent.insertBefore(el, next);\n            }\n            return this;\n        };\n        /**\n         * Replace this fragment with the fragment given by `children`. If\n         * this fragment is empty or does not have a parent node, detaches\n         * `children` from the document.\n         *\n         * Note that this behavior differs from jQuery if this is a collection\n         * with multiple nodes. In that case, jQuery replaces the first\n         * element of this collection with `children`, and then replaces each\n         * additional element in this collection with a clone of `children`.\n         * DOMFragment replaces this entire fragment with `children` and never\n         * makes additional clones of `children`.\n         */\n        DOMFragment.prototype.replaceWith = function (children) {\n            var _a;\n            var rightEnd = (_a = this.ends) === null || _a === void 0 ? void 0 : _a[R];\n            // Note: important to cache parent and nextSibling (if they exist)\n            // before detaching this fragment from the document (which will\n            // mutate its parent and sibling references)\n            var parent = rightEnd === null || rightEnd === void 0 ? void 0 : rightEnd.parentNode;\n            var nextSibling = rightEnd === null || rightEnd === void 0 ? void 0 : rightEnd.nextSibling;\n            this.detach();\n            // Note, this purposely detaches children from the document, even if\n            // they can't be reinserted because this fragment is empty or has no\n            // parent\n            var childDocumentFragment = children.toDocumentFragment();\n            if (!rightEnd || !parent)\n                return this;\n            parent.insertBefore(childDocumentFragment, nextSibling || null);\n            return this;\n        };\n        /**\n         * Return the nth Element node of this collection, or undefined if\n         * there is no nth Element. Skips Nodes that are not Elements (e.g.\n         * Text and Comment nodes).\n         *\n         * Analogous to jQuery's array indexing syntax, or jQuery's .get()\n         * with positive arguments.\n         */\n        DOMFragment.prototype.nthElement = function (n) {\n            if (!this.ends)\n                return undefined;\n            if (n < 0 || n !== Math.floor(n))\n                return undefined;\n            var current = this.ends[L];\n            while (current) {\n                // Only count element nodes\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    if (n <= 0)\n                        return current;\n                    n -= 1;\n                }\n                if (current === this.ends[R])\n                    return undefined;\n                current = current.nextSibling;\n            }\n            return undefined;\n        };\n        /**\n         * Return the first Element node of this fragment, or undefined if\n         * the fragment is empty. Skips Nodes that are not Elements (e.g.\n         * Text and Comment nodes).\n         */\n        DOMFragment.prototype.firstElement = function () {\n            return this.nthElement(0);\n        };\n        /**\n         * Return the first Element node of this fragment, or undefined if\n         * the fragment is empty. Skips Nodes that are not Elements (e.g.\n         * Text and Comment nodes).\n         */\n        DOMFragment.prototype.lastElement = function () {\n            if (!this.ends)\n                return undefined;\n            var current = this.ends[R];\n            while (current) {\n                // Only count element nodes\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    return current;\n                }\n                if (current === this.ends[L])\n                    return undefined;\n                current = current.previousSibling;\n            }\n            return undefined;\n        };\n        /**\n         * Return a new fragment holding the first Element node of this\n         * fragment, or an empty fragment if this fragment is empty. Skips\n         * Nodes that are not Elements (e.g. Text and Comment nodes).\n         */\n        DOMFragment.prototype.first = function () {\n            return new DOMFragment(this.firstElement());\n        };\n        /**\n         * Return a new fragment holding the last Element node of this\n         * fragment, or an empty fragment if this fragment is empty. Skips\n         * Nodes that are not Elements (e.g. Text and Comment nodes).\n         */\n        DOMFragment.prototype.last = function () {\n            return new DOMFragment(this.lastElement());\n        };\n        /**\n         * Return a new fragment holding the nth Element node of this\n         * fragment, or an empty fragment if there is no nth node of this\n         * fragment. Skips Nodes that are not Elements (e.g. Text and Comment\n         * nodes).\n         */\n        DOMFragment.prototype.eq = function (n) {\n            return new DOMFragment(this.nthElement(n));\n        };\n        /**\n         * Return a new fragment beginning with the nth Element node of this\n         * fragment, and ending with the same end as this fragment, or an\n         * empty fragment if there is no nth node in this fragment. Skips\n         * Nodes that are not Elements (e.g. Text and Comment nodes).\n         */\n        DOMFragment.prototype.slice = function (n) {\n            // Note, would be reasonable to extend this to take a second\n            // argument if we ever find we need this\n            if (!this.ends)\n                return this;\n            var el = this.nthElement(n);\n            if (!el)\n                return new DOMFragment();\n            return new DOMFragment(el, this.ends[R]);\n        };\n        /**\n         * Return a new fragment containing the next Element after the Node\n         * represented by this fragment, or an empty fragment if there is no\n         * next Element. Skips Nodes that are not Elements (e.g. Text and\n         * Comment nodes).\n         *\n         * Asserts that this fragment contains exactly one Node.\n         */\n        DOMFragment.prototype.next = function () {\n            var current = this.oneNode();\n            while (current) {\n                current = current.nextSibling;\n                if (current && current.nodeType === Node.ELEMENT_NODE)\n                    return new DOMFragment(current);\n            }\n            return new DOMFragment();\n        };\n        /**\n         * Return a new fragment containing the previousElement after the Node\n         * represented by this fragment, or an empty fragment if there is no\n         * previous Element. Skips Nodes that are not Elements (e.g. Text and\n         * Comment nodes).\n         *\n         * Asserts that this fragment contains exactly one Node.\n         */\n        DOMFragment.prototype.prev = function () {\n            var current = this.oneNode();\n            while (current) {\n                current = current.previousSibling;\n                if (current && current.nodeType === Node.ELEMENT_NODE)\n                    return new DOMFragment(current);\n            }\n            return new DOMFragment();\n        };\n        /**\n         * Remove all children of every Element Node in the fragment. Skips\n         * Nodes that are not Elements (e.g. Text and Comment nodes).\n         */\n        DOMFragment.prototype.empty = function () {\n            // TODO the corresponding jQuery methods clean up some internal\n            // references before removing elements from the DOM. That won't\n            // matter once jQuery is totally gone, but until then, this may\n            // introduce memory leaks\n            this.eachElement(function (el) {\n                el.textContent = '';\n            });\n            return this;\n        };\n        /**\n         * Remove every node in the fragment from the DOM.\n         *\n         * Implemented by moving every node in the fragment into a new\n         * document fragment in order to preserve the sibling relationships\n         * of the removed element. If you want to get access to this document\n         * fragment, use `.toDocumentFragment()` instead.\n         */\n        DOMFragment.prototype.remove = function () {\n            // TODO the corresponding jQuery methods clean up some internal\n            // references before removing elements from the DOM. That won't\n            // matter once jQuery is totally gone, but until then, this may\n            // introduce memory leaks\n            // Note, removing the elements by moving them to a document fragment\n            // because this way their sibling references stay intact. This is\n            // important if we want to reattach them somewhere else later\n            this.toDocumentFragment();\n            return this;\n        };\n        /**\n         * Remove every node in the fragment from the DOM. Alias of remove.\n         *\n         * Implemented by moving every node in the fragment into a new\n         * document fragment in order to preserve the sibling relationships\n         * of the removed element. If you want to get access to this document\n         * fragment, use `.toDocumentFragment()` instead.\n         *\n         * Note: jQuery makes a distinction between detach() and remove().\n         * remove() cleans up internal references, and detach() does not.\n         */\n        DOMFragment.prototype.detach = function () {\n            // In jQuery, detach() is similar to remove() but it does not clean\n            // up internal references. Here they're aliases, but I'm leaving\n            // this as a separate method for the moment to keep track of where\n            // mathquill did one vs the other.\n            return this.remove();\n        };\n        /**\n         * Insert this fragment either just before or just after `sibling`\n         * fragment according to the direction specified by `dir`. If\n         * `sibling` is empty or does not have a parent node, detaches this\n         * fragment from the document.\n         */\n        DOMFragment.prototype.insDirOf = function (dir, sibling) {\n            var _a;\n            if (!this.ends)\n                return this;\n            var el = (_a = sibling.ends) === null || _a === void 0 ? void 0 : _a[dir];\n            if (!el || !el.parentNode)\n                return this.detach();\n            _insDirOf(dir, el.parentNode, this.toDocumentFragment(), el);\n            return this;\n        };\n        /**\n         * Insert this fragment into `el` either at the beginning or end of\n         * its children, according to the direction specified by `dir`.\n         */\n        DOMFragment.prototype.insAtDirEnd = function (dir, el) {\n            if (!this.ends)\n                return this;\n            _insAtDirEnd(dir, this.toDocumentFragment(), el);\n            return this;\n        };\n        /**\n         * Return true if any element in this fragment has class `className`\n         * and false otherwise.\n         */\n        DOMFragment.prototype.hasClass = function (className) {\n            var out = false;\n            this.eachElement(function (el) {\n                if (el.classList.contains(className))\n                    out = true;\n            });\n            return out;\n        };\n        /**\n         * Add each class in space separated list of classes given by\n         * `classNames` to each element in this fragment.\n         */\n        DOMFragment.prototype.addClass = function (classNames) {\n            var _loop_1 = function (className) {\n                if (!className)\n                    return \"continue\";\n                this_1.eachElement(function (el) {\n                    el.classList.add(className);\n                });\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = classNames.split(/\\s+/); _i < _a.length; _i++) {\n                var className = _a[_i];\n                _loop_1(className);\n            }\n            return this;\n        };\n        /**\n         * Remove each class in space separated list of classes given by\n         * `classNames` from each element in this fragment.\n         */\n        DOMFragment.prototype.removeClass = function (classNames) {\n            var _loop_2 = function (className) {\n                if (!className)\n                    return \"continue\";\n                this_2.eachElement(function (el) {\n                    el.classList.remove(className);\n                });\n            };\n            var this_2 = this;\n            for (var _i = 0, _a = classNames.split(/\\s+/); _i < _a.length; _i++) {\n                var className = _a[_i];\n                _loop_2(className);\n            }\n            return this;\n        };\n        /**\n         * Toggle each class in space separated list of classes given by\n         * `classNames` on each element in this fragment.\n         *\n         * If second arg `on` is given as `true`, always toggle classes on.\n         * If second arg `on` is passed as `false`, always toggle classes off.\n         */\n        DOMFragment.prototype.toggleClass = function (classNames, on) {\n            if (on === true)\n                return this.addClass(classNames);\n            if (on === false)\n                return this.removeClass(classNames);\n            var _loop_3 = function (className) {\n                if (!className)\n                    return \"continue\";\n                this_3.eachElement(function (el) {\n                    el.classList.toggle(className);\n                });\n            };\n            var this_3 = this;\n            for (var _i = 0, _a = classNames.split(/\\s+/); _i < _a.length; _i++) {\n                var className = _a[_i];\n                _loop_3(className);\n            }\n            return this;\n        };\n        return DOMFragment;\n    }());\n    var domFrag = DOMFragment.create;\n    /**\n     * Insert `source` before or after `target` child of `parent` denending\n     * on `dir`. Only intended to be used internally as a helper in this module\n     */\n    function _insDirOf(dir, parent, source, target) {\n        parent.insertBefore(source, dir === L ? target : target.nextSibling);\n    }\n    /**\n     * Insert `source` before or after `target` child of `parent` denending\n     * on `dir`. Only intended to be used internally as a helper in this module\n     */\n    function _insAtDirEnd(dir, source, parent) {\n        if (dir === L) {\n            parent.insertBefore(source, parent.firstChild);\n        }\n        else {\n            parent.appendChild(source);\n        }\n    }\n    /*************************************************\n     * Base classes of edit tree-related objects\n     *\n     * Only doing tree node manipulation via these\n     * adopt/ disown methods guarantees well-formedness\n     * of the tree.\n     ************************************************/\n    /** A cursor-like location in an mq node tree. */\n    var Point = /** @class */ (function () {\n        function Point(parent, leftward, rightward) {\n            this.init(parent, leftward, rightward);\n        }\n        // keeping init around only for tests\n        Point.prototype.init = function (parent, leftward, rightward) {\n            this.parent = parent;\n            this[L] = leftward;\n            this[R] = rightward;\n        };\n        Point.copy = function (pt) {\n            return new Point(pt.parent, pt[L], pt[R]);\n        };\n        return Point;\n    }());\n    function eachNode(ends, yield_) {\n        var el = ends[L];\n        if (!el)\n            return;\n        var stop = ends[R];\n        if (!stop)\n            return; //shouldn't happen because ends[L] is defined;\n        stop = stop[R];\n        // TODO - this cast as MQNode is actually important to keep tests passing. I went to\n        // fix this code to gracefully handle an undefined el and there are tests that actually\n        // verify that this will throw an error. So I'm keeping the behavior but ignoring the\n        // type error.\n        for (; el !== stop; el = el[R]) {\n            var result = yield_(el); // TODO - might be passing in 0 intead of a MQNode, but tests want this\n            if (result === false)\n                break;\n        }\n    }\n    function foldNodes(ends, fold, yield_) {\n        var el = ends[L];\n        if (!el)\n            return fold;\n        var stop = ends[R];\n        if (!stop)\n            return fold; //shouldn't happen because ends[L] is defined;\n        stop = stop[R];\n        // TODO - this cast as MQNode is actually important to keep tests passing. I went to\n        // fix this code to gracefully handle an undefined el and there are tests that actually\n        // verify that this will throw an error. So I'm keeping the behavior but ignoring the\n        // type error.\n        for (; el !== stop; el = el[R]) {\n            fold = yield_(fold, el); // TODO - might be passing in 0 intead of a MQNode, but tests want this\n        }\n        return fold;\n    }\n    var NodeBase = /** @class */ (function () {\n        function NodeBase() {\n            var _c;\n            // TODO - life would be so much better in typescript of these were undefined instead of\n            // 0. The ! would save us in cases where we know a node is defined.\n            this[_a] = 0;\n            this[_b] = 0;\n            // TODO - can this ever actually stay 0? if so we need to add null checks\n            this.parent = 0;\n            /**\n             * The (doubly-linked) list of this node's children.\n             *\n             * NOTE child classes may specify a narrower type for ends e.g. to\n             * enforce that children are not empty, or that they have a certain\n             * type. In those cases, this initializer may still run at\n             * construction time, but this is expected to be followed by a call\n             * to adopt that sets non-empty ends of the necessary types.\n             *\n             * Similarly, `Fragment::disown` may temporarily break non-empty\n             * invariants, which are expected to be restored by a subsequent call\n             * to `Fragment::adopt`.\n             * */\n            this.ends = (_c = {}, _c[L] = 0, _c[R] = 0, _c);\n            this.id = NodeBase.uniqueNodeId();\n        }\n        NodeBase.uniqueNodeId = function () {\n            return (NodeBase.idCounter += 1);\n        };\n        // The mqBlockNode and mqCmdNode custom properties link back from the\n        // DOM nodes generated by MathQuill to the MQNodes that generated\n        // them. This is useful for looking up MQNodes in event handlers and\n        // in the mq(elt) public API method\n        NodeBase.getNodeOfElement = function (el) {\n            if (!el)\n                return;\n            if (!el.nodeType)\n                throw new Error('must pass an Element to NodeBase.getNodeOfElement');\n            var elTrackingNode = el;\n            return elTrackingNode.mqBlockNode || elTrackingNode.mqCmdNode;\n        };\n        NodeBase.linkElementByBlockNode = function (elm, blockNode) {\n            elm.mqBlockNode = blockNode;\n        };\n        NodeBase.linkElementByCmdNode = function (elm, cmdNode) {\n            elm.mqCmdNode = cmdNode;\n        };\n        NodeBase.prototype.setEnds = function (ends) {\n            this.ends = ends;\n            pray('No half-empty node ends', !!this.ends[L] === !!this.ends[R]);\n        };\n        NodeBase.prototype.getEnd = function (dir) {\n            return this.ends[dir];\n        };\n        NodeBase.prototype.toString = function () {\n            return '{{ MathQuill Node #' + this.id + ' }}';\n        };\n        NodeBase.prototype.setDOM = function (el) {\n            if (el) {\n                pray('DOM is an element or a text node', el.nodeType === Node.ELEMENT_NODE || el.nodeType === Node.TEXT_NODE);\n            }\n            this._el = el;\n            return this;\n        };\n        NodeBase.prototype.domFrag = function () {\n            return domFrag(this._el);\n        };\n        NodeBase.prototype.createDir = function (dir, cursor) {\n            prayDirection(dir);\n            var node = this;\n            node.html();\n            node.domFrag().insDirOf(dir, cursor.domFrag());\n            cursor[dir] = node.adopt(cursor.parent, cursor[L], cursor[R]); // TODO - assuming not undefined, could be 0\n            return node;\n        };\n        NodeBase.prototype.createLeftOf = function (cursor) {\n            this.createDir(L, cursor);\n        };\n        NodeBase.prototype.selectChildren = function (leftEnd, rightEnd) {\n            return new MQSelection(leftEnd, rightEnd);\n        };\n        NodeBase.prototype.bubble = function (yield_) {\n            var self = this.getSelfNode();\n            for (var ancestor = self; ancestor; ancestor = ancestor.parent) {\n                var result = yield_(ancestor);\n                if (result === false)\n                    break;\n            }\n            return this;\n        };\n        NodeBase.prototype.postOrder = function (yield_) {\n            var self = this.getSelfNode();\n            (function recurse(descendant) {\n                if (!descendant)\n                    return false;\n                descendant.eachChild(recurse);\n                yield_(descendant);\n                return true;\n            })(self);\n            return self;\n        };\n        NodeBase.prototype.isEmpty = function () {\n            return this.ends[L] === 0 && this.ends[R] === 0;\n        };\n        NodeBase.prototype.isQuietEmptyDelimiter = function (dlms) {\n            if (!this.isEmpty())\n                return false;\n            if (!dlms)\n                return false;\n            if (!this.parent || this.parent.ctrlSeq === undefined)\n                return false;\n            // Remove any leading \\left or \\right from the ctrl sequence before looking it up.\n            var key = this.parent.ctrlSeq.replace(/^\\\\(left|right)?/, '');\n            return dlms.hasOwnProperty(key);\n        };\n        NodeBase.prototype.isStyleBlock = function () {\n            return false;\n        };\n        NodeBase.prototype.isTextBlock = function () {\n            return false;\n        };\n        NodeBase.prototype.children = function () {\n            return new Fragment(this.getEnd(L), this.getEnd(R));\n        };\n        NodeBase.prototype.eachChild = function (yield_) {\n            eachNode(this.ends, yield_);\n            return this;\n        };\n        NodeBase.prototype.foldChildren = function (fold, yield_) {\n            return foldNodes(this.ends, fold, yield_);\n        };\n        NodeBase.prototype.withDirAdopt = function (dir, parent, withDir, oppDir) {\n            var self = this.getSelfNode();\n            new Fragment(self, self).withDirAdopt(dir, parent, withDir, oppDir);\n            return this;\n        };\n        /**\n         * Add this node to the given parent node's children, at the position between the adjacent\n         * children `leftward` (or the beginning if omitted) and `rightward` (or the end if omitted).\n         * See `Fragment#adopt()`\n         */\n        NodeBase.prototype.adopt = function (parent, leftward, rightward) {\n            var self = this.getSelfNode();\n            new Fragment(self, self).adopt(parent, leftward, rightward);\n            return this.getSelfNode();\n        };\n        NodeBase.prototype.disown = function () {\n            var self = this.getSelfNode();\n            new Fragment(self, self).disown();\n            return this;\n        };\n        NodeBase.prototype.remove = function () {\n            this.domFrag().remove();\n            return this.disown();\n        };\n        NodeBase.prototype.shouldIgnoreSubstitutionInSimpleSubscript = function (options) {\n            if (!options.disableAutoSubstitutionInSubscripts)\n                return false;\n            if (!this.parent)\n                return false;\n            if (!(this.parent.parent instanceof SupSub))\n                return false;\n            // Mathquill is gross. There are many different paths that\n            // create subscripts and sometimes we don't even construct\n            // true instances of `LatexCmds._`. Another problem is that\n            // the relationship between the sub and the SupSub isn't\n            // completely setup during a paste at the time we check\n            // this. I wanted to use: `this.parent.parent.sub !== this.parent`\n            // but that check doesn't always work. This seems to be the only\n            // check that always works. I'd rather live with this than try\n            // to change the init order of things.\n            if (!this.parent.domFrag().hasClass('mq-sub'))\n                return false;\n            return true;\n        };\n        NodeBase.prototype.getSelfNode = function () {\n            // dumb dance to tell typescript that we eventually become a MQNode\n            return this;\n        };\n        // Overridden by child classes\n        NodeBase.prototype.parser = function () {\n            pray('Abstract parser() method is never called', false);\n        };\n        /** Render this node to DOM */\n        NodeBase.prototype.html = function () {\n            throw new Error('html() unimplemented in NodeBase');\n        };\n        NodeBase.prototype.text = function () {\n            return '';\n        };\n        NodeBase.prototype.latex = function () {\n            var ctx = { latex: '', startIndex: -1, endIndex: -1 };\n            this.latexRecursive(ctx);\n            return ctx.latex;\n        };\n        NodeBase.prototype.latexRecursive = function (_ctx) { };\n        NodeBase.prototype.checkCursorContextOpen = function (ctx) {\n            if (ctx.startSelectionBefore === this) {\n                ctx.startIndex = ctx.latex.length;\n            }\n            if (ctx.endSelectionBefore === this) {\n                ctx.endIndex = ctx.latex.length;\n            }\n        };\n        NodeBase.prototype.checkCursorContextClose = function (ctx) {\n            if (ctx.startSelectionAfter === this) {\n                ctx.startIndex = ctx.latex.length;\n            }\n            if (ctx.endSelectionAfter === this) {\n                ctx.endIndex = ctx.latex.length;\n            }\n        };\n        NodeBase.prototype.finalizeTree = function (_options, _dir) { };\n        NodeBase.prototype.contactWeld = function (_cursor, _dir) { };\n        NodeBase.prototype.blur = function (_cursor) { };\n        NodeBase.prototype.focus = function () { };\n        NodeBase.prototype.intentionalBlur = function () { };\n        NodeBase.prototype.reflow = function () { };\n        NodeBase.prototype.registerInnerField = function (_innerFields, _mathField) { };\n        NodeBase.prototype.chToCmd = function (_ch, _options) {\n            pray('Abstract chToCmd() method is never called', false);\n        };\n        NodeBase.prototype.mathspeak = function (_options) {\n            return '';\n        };\n        NodeBase.prototype.seek = function (_clientX, _cursor) { };\n        NodeBase.prototype.siblingDeleted = function (_options, _dir) { };\n        NodeBase.prototype.siblingCreated = function (_options, _dir) { };\n        NodeBase.prototype.finalizeInsert = function (_options, _cursor) { };\n        NodeBase.prototype.fixDigitGrouping = function (_opts) { };\n        NodeBase.prototype.writeLatex = function (_cursor, _latex) { };\n        NodeBase.prototype.write = function (_cursor, _ch) { };\n        var _a, _b;\n        _a = L, _b = R;\n        NodeBase.idCounter = 0;\n        return NodeBase;\n    }());\n    function prayWellFormed(parent, leftward, rightward) {\n        pray('a parent is always present', parent);\n        pray('leftward is properly set up', (function () {\n            // either it's empty and `rightward` is the left end child (possibly empty)\n            if (!leftward)\n                return parent.getEnd(L) === rightward;\n            // or it's there and its [R] and .parent are properly set up\n            return leftward[R] === rightward && leftward.parent === parent;\n        })());\n        pray('rightward is properly set up', (function () {\n            // either it's empty and `leftward` is the right end child (possibly empty)\n            if (!rightward)\n                return parent.getEnd(R) === leftward;\n            // or it's there and its [L] and .parent are properly set up\n            return rightward[L] === leftward && rightward.parent === parent;\n        })());\n    }\n    /**\n     * An entity outside the virtual tree with one-way pointers (so it's only a\n     * \"view\" of part of the tree, not an actual node/entity in the tree) that\n     * delimits a doubly-linked list of sibling nodes.\n     * It's like a fanfic love-child between HTML DOM DocumentFragment and the Range\n     * classes: like DocumentFragment, its contents must be sibling nodes\n     * (unlike Range, whose contents are arbitrary contiguous pieces of subtrees),\n     * but like Range, it has only one-way pointers to its contents, its contents\n     * have no reference to it and in fact may still be in the visible tree (unlike\n     * DocumentFragment, whose contents must be detached from the visible tree\n     * and have their 'parent' pointers set to the DocumentFragment).\n     */\n    var Fragment = /** @class */ (function () {\n        function Fragment(withDir, oppDir, dir) {\n            var _c, _d;\n            this.disowned = false;\n            if (dir === undefined)\n                dir = L;\n            prayDirection(dir);\n            pray('no half-empty fragments', !withDir === !oppDir);\n            if (!withDir || !oppDir) {\n                this.setEnds((_c = {}, _c[L] = 0, _c[R] = 0, _c));\n                return;\n            }\n            pray('withDir is passed to Fragment', withDir instanceof MQNode);\n            pray('oppDir is passed to Fragment', oppDir instanceof MQNode);\n            pray('withDir and oppDir have the same parent', withDir.parent === oppDir.parent);\n            var ends = (_d = {},\n                _d[dir] = withDir,\n                _d[-dir] = oppDir,\n                _d);\n            this.setEnds(ends);\n            var maybeRightEnd = 0;\n            this.each(function (el) {\n                maybeRightEnd = el;\n            });\n            pray('following direction siblings from start reaches end', maybeRightEnd === ends[R]);\n        }\n        Fragment.prototype.getDOMFragFromEnds = function () {\n            var left = this.ends[L];\n            var right = this.ends[R];\n            if (left === 0 || right === 0) {\n                return domFrag();\n            }\n            else if (left === right) {\n                // Note, joining a DOMFragment to itself is not allowed, so\n                // don't attempt to join the end fragments if the ends are equal\n                return left.domFrag();\n            }\n            else {\n                return left.domFrag().join(right.domFrag());\n            }\n        };\n        /**\n         * Note, children may override this to enforce extra invariants,\n         * (e.g. that ends are always defined). Ends should only be set\n         * through this function.\n         */\n        Fragment.prototype.setEnds = function (ends) {\n            this.ends = ends;\n        };\n        Fragment.prototype.getEnd = function (dir) {\n            return this.ends ? this.ends[dir] : 0;\n        };\n        Fragment.prototype.domFrag = function () {\n            return this.getDOMFragFromEnds();\n        };\n        // like Cursor::withDirInsertAt(dir, parent, withDir, oppDir)\n        Fragment.prototype.withDirAdopt = function (dir, parent, withDir, oppDir) {\n            return dir === L\n                ? this.adopt(parent, withDir, oppDir)\n                : this.adopt(parent, oppDir, withDir);\n        };\n        /**\n         * Splice this fragment into the given parent node's children, at the position between the adjacent\n         * children `leftward` (or the beginning if omitted) and `rightward` (or the end if omitted).\n         *\n         * TODO: why do we need both leftward and rightward? It seems to me that `rightward` is always expected to be `leftward ? leftward[R] : parent.ends[L]`.\n         */\n        Fragment.prototype.adopt = function (parent, leftward, rightward) {\n            var _c;\n            prayWellFormed(parent, leftward, rightward);\n            var self = this;\n            this.disowned = false;\n            var leftEnd = self.ends[L];\n            if (!leftEnd)\n                return this;\n            var rightEnd = self.ends[R];\n            if (!rightEnd)\n                return this;\n            var ends = (_c = {}, _c[L] = parent.getEnd(L), _c[R] = parent.getEnd(R), _c);\n            if (leftward) {\n                // NB: this is handled in the ::each() block\n                // leftward[R] = leftEnd\n            }\n            else {\n                ends[L] = leftEnd;\n            }\n            if (rightward) {\n                rightward[L] = rightEnd;\n            }\n            else {\n                ends[R] = rightEnd;\n            }\n            parent.setEnds(ends);\n            rightEnd[R] = rightward;\n            self.each(function (el) {\n                el[L] = leftward;\n                el.parent = parent;\n                if (leftward)\n                    leftward[R] = el;\n                leftward = el;\n                return true;\n            });\n            return self;\n        };\n        /**\n         * Remove the nodes in this fragment from their parent.\n         */\n        Fragment.prototype.disown = function () {\n            var _c;\n            var self = this;\n            var leftEnd = self.ends[L];\n            // guard for empty and already-disowned fragments\n            if (!leftEnd || self.disowned)\n                return self;\n            this.disowned = true;\n            var rightEnd = self.ends[R];\n            if (!rightEnd)\n                return self;\n            var parent = leftEnd.parent;\n            prayWellFormed(parent, leftEnd[L], leftEnd);\n            prayWellFormed(parent, rightEnd, rightEnd[R]);\n            var ends = (_c = {}, _c[L] = parent.getEnd(L), _c[R] = parent.getEnd(R), _c);\n            if (leftEnd[L]) {\n                var leftLeftEnd = leftEnd[L];\n                leftLeftEnd[R] = rightEnd[R];\n            }\n            else {\n                ends[L] = rightEnd[R];\n            }\n            if (rightEnd[R]) {\n                var rightRightEnd = rightEnd[R];\n                rightRightEnd[L] = leftEnd[L];\n            }\n            else {\n                ends[R] = leftEnd[L];\n            }\n            if (ends[L] && ends[R]) {\n                parent.setEnds(ends);\n            }\n            else {\n                // some child classes of MQNode try to enforce that their ends\n                // are never empty through the type system. However, disown may\n                // temporarily break this invariant in which case it's expected\n                // that adopt will later be called to fix the invariant.\n                //\n                // Cast away the protected status of the ends property and write\n                // to it directly to get around runtime assertions in setEnds that\n                // enforce non-emptyness.\n                parent.ends = ends;\n            }\n            return self;\n        };\n        Fragment.prototype.remove = function () {\n            this.domFrag().remove();\n            return this.disown();\n        };\n        Fragment.prototype.each = function (yield_) {\n            eachNode(this.ends, yield_);\n            return this;\n        };\n        Fragment.prototype.fold = function (fold, yield_) {\n            return foldNodes(this.ends, fold, yield_);\n        };\n        return Fragment;\n    }());\n    /**\n     * Registry of LaTeX commands and commands created when typing\n     * a single character.\n     *\n     * (Commands are all subclasses of Node.)\n     */\n    var LatexCmds = {};\n    var CharCmds = {};\n    function isMQNodeClass(cmd) {\n        return cmd && cmd.prototype instanceof MQNode;\n    }\n    /********************************************\n     * Cursor and Selection \"singleton\" classes\n     *******************************************/\n    /* The main thing that manipulates the Math DOM. Makes sure to manipulate the\n    HTML DOM to match. */\n    /* Sort of singletons, since there should only be one per editable math\n    textbox, but any one HTML document can contain many such textboxes, so any one\n    JS environment could actually contain many instances. */\n    //A fake cursor in the fake textbox that the math is rendered in.\n    var Anticursor = /** @class */ (function (_super) {\n        __extends(Anticursor, _super);\n        function Anticursor(parent, leftward, rightward) {\n            var _this_1 = _super.call(this, parent, leftward, rightward) || this;\n            _this_1.ancestors = {};\n            return _this_1;\n        }\n        Anticursor.fromCursor = function (cursor) {\n            return new Anticursor(cursor.parent, cursor[L], cursor[R]);\n        };\n        return Anticursor;\n    }(Point));\n    var Cursor = /** @class */ (function (_super) {\n        __extends(Cursor, _super);\n        function Cursor(initParent, options, controller) {\n            var _this_1 = _super.call(this, initParent, 0, 0) || this;\n            /** Slightly more than just a \"cache\", this remembers the cursor's position in each block node, so that we can return to the right\n             * point in that node when moving up and down among blocks.\n             */\n            _this_1.upDownCache = {};\n            _this_1.cursorElement = h('span', { class: 'mq-cursor' }, [h.text(U_ZERO_WIDTH_SPACE)]);\n            _this_1._domFrag = domFrag();\n            _this_1.controller = controller;\n            _this_1.options = options;\n            _this_1.setDOMFrag(domFrag(_this_1.cursorElement));\n            //closured for setInterval\n            _this_1.blink = function () {\n                domFrag(_this_1.cursorElement).toggleClass('mq-blink');\n            };\n            return _this_1;\n        }\n        Cursor.prototype.setDOMFrag = function (frag) {\n            this._domFrag = frag;\n            return this;\n        };\n        Cursor.prototype.domFrag = function () {\n            return this._domFrag;\n        };\n        Cursor.prototype.show = function () {\n            domFrag(this.cursorElement).removeClass('mq-blink');\n            this.setDOMFrag(domFrag(this.cursorElement));\n            if (this.intervalId)\n                //already was shown, just restart interval\n                clearInterval(this.intervalId);\n            else {\n                //was hidden and detached, insert this.jQ back into HTML DOM\n                var right = this[R];\n                if (right) {\n                    var selection = this.selection;\n                    if (selection && selection.getEnd(L)[L] === this[L])\n                        this.domFrag().insertBefore(selection.domFrag());\n                    else\n                        this.domFrag().insertBefore(right.domFrag());\n                }\n                else\n                    this.domFrag().appendTo(this.parent.domFrag().oneElement());\n                this.parent.focus();\n            }\n            this.intervalId = setInterval(this.blink, 500);\n            return this;\n        };\n        Cursor.prototype.hide = function () {\n            if (this.intervalId)\n                clearInterval(this.intervalId);\n            this.intervalId = 0;\n            this.domFrag().detach();\n            this.setDOMFrag(domFrag());\n            return this;\n        };\n        Cursor.prototype.withDirInsertAt = function (dir, parent, withDir, oppDir) {\n            var oldParent = this.parent;\n            this.parent = parent;\n            this[dir] = withDir;\n            this[-dir] = oppDir;\n            // by contract, .blur() is called after all has been said and done\n            // and the cursor has actually been moved\n            // FIXME pass cursor to .blur() so text can fix cursor pointers when removing itself\n            if (oldParent !== parent && oldParent.blur)\n                oldParent.blur(this);\n        };\n        /** Place the cursor before or after `el`, according the side specified by `dir`. */\n        Cursor.prototype.insDirOf = function (dir, el) {\n            prayDirection(dir);\n            this.domFrag().insDirOf(dir, el.domFrag());\n            this.withDirInsertAt(dir, el.parent, el[dir], el);\n            this.parent.domFrag().addClass('mq-hasCursor');\n            return this;\n        };\n        Cursor.prototype.insLeftOf = function (el) {\n            return this.insDirOf(L, el);\n        };\n        Cursor.prototype.insRightOf = function (el) {\n            return this.insDirOf(R, el);\n        };\n        /** Place the cursor inside `el` at either the left or right end, according the side specified by `dir`. */\n        Cursor.prototype.insAtDirEnd = function (dir, el) {\n            prayDirection(dir);\n            this.domFrag().insAtDirEnd(dir, el.domFrag().oneElement());\n            this.withDirInsertAt(dir, el, 0, el.getEnd(dir));\n            el.focus();\n            return this;\n        };\n        Cursor.prototype.insAtLeftEnd = function (el) {\n            return this.insAtDirEnd(L, el);\n        };\n        Cursor.prototype.insAtRightEnd = function (el) {\n            return this.insAtDirEnd(R, el);\n        };\n        /**\n         * jump up or down from one block Node to another:\n         * - cache the current Point in the node we're jumping from\n         * - check if there's a Point in it cached for the node we're jumping to\n         *   + if so put the cursor there,\n         *   + if not seek a position in the node that is horizontally closest to\n         *     the cursor's current position\n         */\n        Cursor.prototype.jumpUpDown = function (from, to) {\n            var self = this;\n            self.upDownCache[from.id] = Point.copy(self);\n            var cached = self.upDownCache[to.id];\n            if (cached) {\n                var cachedR = cached[R];\n                if (cachedR) {\n                    self.insLeftOf(cachedR);\n                }\n                else {\n                    self.insAtRightEnd(cached.parent);\n                }\n            }\n            else {\n                var clientX = self.getBoundingClientRectWithoutMargin().left;\n                to.seek(clientX, self);\n            }\n            self.controller.aria.queue(to, true);\n        };\n        Cursor.prototype.getBoundingClientRectWithoutMargin = function () {\n            //in Opera 11.62, .getBoundingClientRect() and hence jQuery::offset()\n            //returns all 0's on inline elements with negative margin-right (like\n            //the cursor) at the end of their parent, so temporarily remove the\n            //negative margin-right when calling jQuery::offset()\n            //Opera bug DSK-360043\n            //http://bugs.jquery.com/ticket/11523\n            //https://github.com/jquery/jquery/pull/717\n            var frag = this.domFrag();\n            frag.removeClass('mq-cursor');\n            var _c = getBoundingClientRect(frag.oneElement()), left = _c.left, right = _c.right;\n            frag.addClass('mq-cursor');\n            return {\n                left: left,\n                right: right,\n            };\n        };\n        Cursor.prototype.unwrapGramp = function () {\n            var gramp = this.parent.parent;\n            var greatgramp = gramp.parent;\n            var rightward = gramp[R];\n            var cursor = this;\n            var leftward = gramp[L];\n            gramp.disown().eachChild(function (uncle) {\n                if (uncle.isEmpty())\n                    return true;\n                uncle\n                    .children()\n                    .adopt(greatgramp, leftward, rightward)\n                    .each(function (cousin) {\n                    cousin.domFrag().insertBefore(gramp.domFrag());\n                    return true;\n                });\n                leftward = uncle.getEnd(R);\n                return true;\n            });\n            if (!this[R]) {\n                //then find something to be rightward to insLeftOf\n                var thisL = this[L];\n                if (thisL)\n                    this[R] = thisL[R];\n                else {\n                    while (!this[R]) {\n                        var newParent = this.parent[R];\n                        if (newParent) {\n                            this.parent = newParent;\n                            this[R] = newParent.getEnd(L);\n                        }\n                        else {\n                            this[R] = gramp[R];\n                            this.parent = greatgramp;\n                            break;\n                        }\n                    }\n                }\n            }\n            var thisR = this[R];\n            if (thisR)\n                this.insLeftOf(thisR);\n            else\n                this.insAtRightEnd(greatgramp);\n            gramp.domFrag().remove();\n            var grampL = gramp[L];\n            var grampR = gramp[R];\n            if (grampL)\n                grampL.siblingDeleted(cursor.options, R);\n            if (grampR)\n                grampR.siblingDeleted(cursor.options, L);\n        };\n        Cursor.prototype.startSelection = function () {\n            var anticursor = (this.anticursor = Anticursor.fromCursor(this));\n            var ancestors = anticursor.ancestors;\n            for (var ancestor = anticursor; ancestor.parent; ancestor = ancestor.parent) {\n                ancestors[ancestor.parent.id] = ancestor;\n            }\n        };\n        Cursor.prototype.endSelection = function () {\n            delete this.anticursor;\n        };\n        Cursor.prototype.select = function () {\n            var _lca;\n            var anticursor = this.anticursor;\n            if (this[L] === anticursor[L] && this.parent === anticursor.parent)\n                return false;\n            // Find the lowest common ancestor (`lca`), and the ancestor of the cursor\n            // whose parent is the LCA (which'll be an end of the selection fragment).\n            for (var ancestor = this; ancestor.parent; ancestor = ancestor.parent) {\n                if (ancestor.parent.id in anticursor.ancestors) {\n                    _lca = ancestor.parent;\n                    break;\n                }\n            }\n            pray('cursor and anticursor in the same tree', _lca);\n            var lca = _lca;\n            // The cursor and the anticursor should be in the same tree, because the\n            // mousemove handler attached to the document, unlike the one attached to\n            // the root HTML DOM element, doesn't try to get the math tree node of the\n            // mousemove target, and Cursor::seek() based solely on coordinates stays\n            // within the tree of `this` cursor's root.\n            // The other end of the selection fragment, the ancestor of the anticursor\n            // whose parent is the LCA.\n            var antiAncestor = anticursor.ancestors[lca.id];\n            // Now we have two either Nodes or Points, guaranteed to have a common\n            // parent and guaranteed that if both are Points, they are not the same,\n            // and we have to figure out which is the left end and which the right end\n            // of the selection.\n            var leftEnd, rightEnd, dir = R;\n            // This is an extremely subtle algorithm.\n            // As a special case, `ancestor` could be a Point and `antiAncestor` a Node\n            // immediately to `ancestor`'s left.\n            // In all other cases,\n            // - both Nodes\n            // - `ancestor` a Point and `antiAncestor` a Node\n            // - `ancestor` a Node and `antiAncestor` a Point\n            // `antiAncestor[R] === rightward[R]` for some `rightward` that is\n            // `ancestor` or to its right, if and only if `antiAncestor` is to\n            // the right of `ancestor`.\n            if (ancestor[L] !== antiAncestor) {\n                for (var rightward = ancestor; rightward; rightward = rightward[R]) {\n                    if (rightward[R] === antiAncestor[R]) {\n                        dir = L;\n                        leftEnd = ancestor;\n                        rightEnd = antiAncestor;\n                        break;\n                    }\n                }\n            }\n            if (dir === R) {\n                leftEnd = antiAncestor;\n                rightEnd = ancestor;\n            }\n            // only want to select Nodes up to Points, can't select Points themselves\n            if (leftEnd instanceof Point)\n                leftEnd = leftEnd[R];\n            if (rightEnd instanceof Point)\n                rightEnd = rightEnd[L];\n            this.hide().selection = lca.selectChildren(leftEnd, rightEnd);\n            var insEl = this.selection.getEnd(dir);\n            this.insDirOf(dir, insEl);\n            this.selectionChanged();\n            return true;\n        };\n        Cursor.prototype.resetToEnd = function (controller) {\n            this.clearSelection();\n            var root = controller.root;\n            this[R] = 0;\n            this[L] = root.getEnd(R);\n            this.parent = root;\n        };\n        Cursor.prototype.clearSelection = function () {\n            if (this.selection) {\n                this.selection.clear();\n                delete this.selection;\n                this.selectionChanged();\n            }\n            return this;\n        };\n        Cursor.prototype.deleteSelection = function () {\n            var selection = this.selection;\n            if (!selection)\n                return;\n            this[L] = selection.getEnd(L)[L];\n            this[R] = selection.getEnd(R)[R];\n            selection.remove();\n            this.selectionChanged();\n            delete this.selection;\n        };\n        Cursor.prototype.replaceSelection = function () {\n            var seln = this.selection;\n            if (seln) {\n                this[L] = seln.getEnd(L)[L];\n                this[R] = seln.getEnd(R)[R];\n                delete this.selection;\n            }\n            return seln;\n        };\n        Cursor.prototype.depth = function () {\n            var node = this;\n            var depth = 0;\n            while ((node = node.parent)) {\n                depth += node instanceof MathBlock ? 1 : 0;\n            }\n            return depth;\n        };\n        Cursor.prototype.isTooDeep = function (offset) {\n            if (this.options.maxDepth !== undefined) {\n                return this.depth() + (offset || 0) > this.options.maxDepth;\n            }\n            else {\n                return false;\n            }\n        };\n        // can be overridden\n        Cursor.prototype.selectionChanged = function () { };\n        return Cursor;\n    }(Point));\n    var MQSelection = /** @class */ (function (_super) {\n        __extends(MQSelection, _super);\n        function MQSelection(withDir, oppDir, dir) {\n            var _this_1 = _super.call(this, withDir, oppDir, dir) || this;\n            _this_1._el = h('span', { class: 'mq-selection' });\n            _this_1.getDOMFragFromEnds().wrapAll(_this_1._el);\n            return _this_1;\n        }\n        MQSelection.prototype.isCleared = function () {\n            return this._el === undefined;\n        };\n        MQSelection.prototype.domFrag = function () {\n            return this.isCleared() ? this.getDOMFragFromEnds() : domFrag(this._el);\n        };\n        MQSelection.prototype.setEnds = function (ends) {\n            pray('Selection ends are never empty', ends[L] && ends[R]);\n            this.ends = ends;\n        };\n        MQSelection.prototype.getEnd = function (dir) {\n            return this.ends[dir];\n        };\n        MQSelection.prototype.adopt = function (parent, leftward, rightward) {\n            this.clear();\n            return _super.prototype.adopt.call(this, parent, leftward, rightward);\n        };\n        MQSelection.prototype.clear = function () {\n            // NOTE it's important here that DOMFragment::children includes all\n            // child nodes (including Text nodes), and not just Element nodes.\n            // This makes it more similar to the native DOM childNodes property\n            // and jQuery's .collection() method than jQuery's .children() method\n            var childFrag = this.getDOMFragFromEnds();\n            this.domFrag().replaceWith(childFrag);\n            this._el = undefined;\n            return this;\n        };\n        MQSelection.prototype.join = function (methodName, separator) {\n            if (separator === void 0) { separator = ''; }\n            return this.fold('', function (fold, child) {\n                return fold + separator + child[methodName]();\n            });\n        };\n        return MQSelection;\n    }(Fragment));\n    var ControllerBase = /** @class */ (function () {\n        function ControllerBase(root, container, options) {\n            this.textareaEventListeners = {};\n            this.id = root.id;\n            this.data = {};\n            this.root = root;\n            this.container = container;\n            this.options = options;\n            this.aria = new Aria(this.getControllerSelf());\n            this.ariaLabel = 'Math Input';\n            this.ariaPostLabel = '';\n            root.controller = this.getControllerSelf();\n            this.cursor = root.cursor = new Cursor(root, options, this.getControllerSelf());\n            // TODO: stop depending on root.cursor, and rm it\n        }\n        ControllerBase.prototype.getControllerSelf = function () {\n            // dance we have to do to tell this thing it's a full controller\n            return this;\n        };\n        ControllerBase.prototype.handle = function (name, dir) {\n            var _c;\n            var handlers = this.options.handlers;\n            var handler = (_c = this.options.handlers) === null || _c === void 0 ? void 0 : _c.fns[name];\n            if (handler) {\n                var APIClass = handlers === null || handlers === void 0 ? void 0 : handlers.APIClasses[this.KIND_OF_MQ];\n                pray('APIClass is defined', APIClass);\n                var mq = new APIClass(this); // cast to any bedcause APIClass needs the final Controller subclass.\n                if (dir === L || dir === R)\n                    handler(dir, mq);\n                else\n                    handler(mq);\n            }\n        };\n        ControllerBase.onNotify = function (f) {\n            ControllerBase.notifyees.push(f);\n        };\n        ControllerBase.prototype.notify = function (e) {\n            for (var i = 0; i < ControllerBase.notifyees.length; i += 1) {\n                ControllerBase.notifyees[i](this.cursor, e);\n            }\n            return this;\n        };\n        ControllerBase.prototype.setAriaLabel = function (ariaLabel) {\n            var oldAriaLabel = this.getAriaLabel();\n            if (ariaLabel && typeof ariaLabel === 'string' && ariaLabel !== '') {\n                this.ariaLabel = ariaLabel;\n            }\n            else if (this.editable) {\n                this.ariaLabel = 'Math Input';\n            }\n            else {\n                this.ariaLabel = '';\n            }\n            // If this field doesn't have focus, update its computed mathspeak value.\n            // We check for focus because updating the aria-label attribute of a focused element will cause most screen readers to announce the new value (in our case, label along with the expression's mathspeak).\n            // If the field does have focus at the time, it will be updated once a blur event occurs.\n            // Unless we stop using fake text inputs and emulating screen reader behavior, this is going to remain a problem.\n            if (this.ariaLabel !== oldAriaLabel && !this.containerHasFocus()) {\n                this.updateMathspeak();\n            }\n            return this;\n        };\n        ControllerBase.prototype.getAriaLabel = function () {\n            if (this.ariaLabel !== 'Math Input') {\n                return this.ariaLabel;\n            }\n            else if (this.editable) {\n                return 'Math Input';\n            }\n            else {\n                return '';\n            }\n        };\n        ControllerBase.prototype.setAriaPostLabel = function (ariaPostLabel, timeout) {\n            var _this_1 = this;\n            if (ariaPostLabel &&\n                typeof ariaPostLabel === 'string' &&\n                ariaPostLabel !== '') {\n                if (ariaPostLabel !== this.ariaPostLabel && typeof timeout === 'number') {\n                    if (this._ariaAlertTimeout)\n                        clearTimeout(this._ariaAlertTimeout);\n                    this._ariaAlertTimeout = setTimeout(function () {\n                        if (_this_1.containerHasFocus()) {\n                            // Voice the new label, but do not update content mathspeak to prevent double-speech.\n                            _this_1.aria.alert(_this_1.root.mathspeak().trim() + ' ' + ariaPostLabel.trim());\n                        }\n                        else {\n                            // This mathquill does not have focus, so update its mathspeak.\n                            _this_1.updateMathspeak();\n                        }\n                    }, timeout);\n                }\n                this.ariaPostLabel = ariaPostLabel;\n            }\n            else {\n                if (this._ariaAlertTimeout)\n                    clearTimeout(this._ariaAlertTimeout);\n                this.ariaPostLabel = '';\n            }\n            return this;\n        };\n        ControllerBase.prototype.getAriaPostLabel = function () {\n            return this.ariaPostLabel || '';\n        };\n        ControllerBase.prototype.containerHasFocus = function () {\n            return (document.activeElement && this.container.contains(document.activeElement));\n        };\n        ControllerBase.prototype.getTextareaOrThrow = function () {\n            var textarea = this.textarea;\n            if (!textarea)\n                throw new Error('expected a textarea');\n            return textarea;\n        };\n        ControllerBase.prototype.getTextareaSpanOrThrow = function () {\n            var textareaSpan = this.textareaSpan;\n            if (!textareaSpan)\n                throw new Error('expected a textareaSpan');\n            return textareaSpan;\n        };\n        /** Add the given event listeners on this.textarea, replacing the existing listener for that event if it exists. */\n        ControllerBase.prototype.addTextareaEventListeners = function (listeners) {\n            if (!this.textarea)\n                return;\n            for (var key_2 in listeners) {\n                var event = key_2;\n                this.removeTextareaEventListener(event);\n                this.textarea.addEventListener(event, listeners[event]);\n            }\n        };\n        ControllerBase.prototype.removeTextareaEventListener = function (event) {\n            if (!this.textarea)\n                return;\n            var listener = this.textareaEventListeners[event];\n            if (!listener)\n                return;\n            this.textarea.removeEventListener(event, listener);\n        };\n        // based on http://www.gh-mathspeak.com/examples/quick-tutorial/\n        // and http://www.gh-mathspeak.com/examples/grammar-rules/\n        ControllerBase.prototype.exportMathSpeak = function () {\n            return this.root.mathspeak();\n        };\n        // overridden\n        ControllerBase.prototype.updateMathspeak = function () { };\n        ControllerBase.prototype.scrollHoriz = function () { };\n        ControllerBase.prototype.selectionChanged = function () { };\n        ControllerBase.prototype.setOverflowClasses = function () { };\n        ControllerBase.notifyees = [];\n        return ControllerBase;\n    }());\n    var API = {};\n    var EMBEDS = {};\n    var processedOptions = {\n        handlers: true,\n        autoCommands: true,\n        quietEmptyDelimiters: true,\n        autoParenthesizedFunctions: true,\n        autoOperatorNames: true,\n        leftRightIntoCmdGoes: true,\n        maxDepth: true,\n        interpretTildeAsSim: true,\n    };\n    var baseOptionProcessors = {};\n    var Options = /** @class */ (function () {\n        function Options(version) {\n            this.version = version;\n        }\n        Options.prototype.assertJquery = function () {\n            pray('Interface versions > 2 do not depend on JQuery', this.version <= 2);\n            pray('JQuery is set for interface v < 3', this.jQuery);\n            return this.jQuery;\n        };\n        return Options;\n    }());\n    var Progenote = /** @class */ (function () {\n        function Progenote() {\n        }\n        return Progenote;\n    }());\n    /**\n     * Interface Versioning (#459, #495) to allow us to virtually guarantee\n     * backcompat. v0.10.x introduces it, so for now, don't completely break the\n     * API for people who don't know about it, just complain with console.warn().\n     *\n     * The methods are shimmed in outro.js so that MQ.MathField.prototype etc can\n     * be accessed.\n     */\n    var insistOnInterVer = function () {\n        if (window.console)\n            console.warn('You are using the MathQuill API without specifying an interface version, ' +\n                'which will fail in v1.0.0. Easiest fix is to do the following before ' +\n                'doing anything else:\\n' +\n                '\\n' +\n                '    MathQuill = MathQuill.getInterface(1);\\n' +\n                '    // now MathQuill.MathField() works like it used to\\n' +\n                '\\n' +\n                'See also the \"`dev` branch (2014\\u20132015) \\u2192 v0.10.0 Migration Guide\" at\\n' +\n                '  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide');\n    };\n    // globally exported API object\n    var MQ1;\n    function MathQuill(el) {\n        insistOnInterVer();\n        if (!MQ1) {\n            MQ1 = getInterface(1);\n        }\n        return MQ1(el);\n    }\n    MathQuill.prototype = Progenote.prototype;\n    MathQuill.VERSION = 'v0.10.1';\n    MathQuill.interfaceVersion = function (v) {\n        // shim for #459-era interface versioning (ended with #495)\n        if (v !== 1)\n            throw 'Only interface version 1 supported. You specified: ' + v;\n        insistOnInterVer = function () {\n            if (window.console)\n                console.warn('You called MathQuill.interfaceVersion(1); to specify the interface ' +\n                    'version, which will fail in v1.0.0. You can fix this easily by doing ' +\n                    'this before doing anything else:\\n' +\n                    '\\n' +\n                    '    MathQuill = MathQuill.getInterface(1);\\n' +\n                    '    // now MathQuill.MathField() works like it used to\\n' +\n                    '\\n' +\n                    'See also the \"`dev` branch (2014\\u20132015) \\u2192 v0.10.0 Migration Guide\" at\\n' +\n                    '  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide');\n        };\n        insistOnInterVer();\n        return MathQuill;\n    };\n    MathQuill.getInterface = getInterface;\n    var MIN = (getInterface.MIN = 1), MAX = (getInterface.MAX = 3);\n    function getInterface(v) {\n        if (v !== 1 && v !== 2 && v !== 3)\n            throw ('Only interface versions between ' +\n                MIN +\n                ' and ' +\n                MAX +\n                ' supported. You specified: ' +\n                v);\n        var version = v;\n        if (version < 3) {\n            var jQuery = window.jQuery;\n            if (!jQuery)\n                throw \"MathQuill interface version \".concat(version, \" requires jQuery 1.5.2+ to be loaded first\");\n            Options.prototype.jQuery = jQuery;\n        }\n        var optionProcessors = __assign(__assign({}, baseOptionProcessors), { handlers: function (handlers) { return ({\n                // casting to the v3 version of this type\n                fns: handlers || {},\n                APIClasses: APIClasses,\n            }); } });\n        function config(currentOptions, newOptions) {\n            for (var name in newOptions) {\n                if (newOptions.hasOwnProperty(name)) {\n                    if (name === 'substituteKeyboardEvents' && version >= 3) {\n                        throw new Error([\n                            \"As of interface version 3, the 'substituteKeyboardEvents'\",\n                            \"option is no longer supported. Use 'overrideTypedText' and\",\n                            \"'overrideKeystroke' instead.\",\n                        ].join(' '));\n                    }\n                    var value = newOptions[name]; // TODO - think about typing this better\n                    var processor = optionProcessors[name]; // TODO - validate option processors better\n                    currentOptions[name] = processor ? processor(value) : value; // TODO - think about typing better\n                }\n            }\n        }\n        var BaseOptions = version < 3 ? Options : /** @class */ (function (_super) {\n            __extends(BaseOptions, _super);\n            function BaseOptions() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return BaseOptions;\n        }(Options));\n        var AbstractMathQuill = /** @class */ (function (_super) {\n            __extends(AbstractMathQuill, _super);\n            function AbstractMathQuill(ctrlr) {\n                var _this_1 = _super.call(this) || this;\n                _this_1.__controller = ctrlr;\n                _this_1.__options = ctrlr.options;\n                _this_1.id = ctrlr.id;\n                _this_1.data = ctrlr.data;\n                return _this_1;\n            }\n            AbstractMathQuill.prototype.mathquillify = function (classNames) {\n                var ctrlr = this.__controller, root = ctrlr.root, el = ctrlr.container;\n                ctrlr.createTextarea();\n                var contents = domFrag(el).addClass(classNames).children().detach();\n                root.setDOM(domFrag(h('span', { class: 'mq-root-block', 'aria-hidden': true }))\n                    .appendTo(el)\n                    .oneElement());\n                NodeBase.linkElementByBlockNode(root.domFrag().oneElement(), root);\n                this.latex(contents.text());\n                this.revert = function () {\n                    ctrlr.removeMouseEventListener();\n                    domFrag(el)\n                        .removeClass('mq-editable-field mq-math-mode mq-text-mode')\n                        .empty()\n                        .append(contents);\n                    return version < 3 ? this.__options.assertJquery()(el) : el;\n                };\n            };\n            AbstractMathQuill.prototype.setAriaLabel = function (ariaLabel) {\n                this.__controller.setAriaLabel(ariaLabel);\n                return this;\n            };\n            AbstractMathQuill.prototype.getAriaLabel = function () {\n                return this.__controller.getAriaLabel();\n            };\n            AbstractMathQuill.prototype.config = function (opts) {\n                config(this.__options, opts);\n                return this;\n            };\n            AbstractMathQuill.prototype.el = function () {\n                return this.__controller.container;\n            };\n            AbstractMathQuill.prototype.text = function () {\n                return this.__controller.exportText();\n            };\n            AbstractMathQuill.prototype.mathspeak = function () {\n                return this.__controller.exportMathSpeak();\n            };\n            AbstractMathQuill.prototype.latex = function (latex) {\n                if (arguments.length > 0) {\n                    this.__controller.renderLatexMath(latex);\n                    var cursor = this.__controller.cursor;\n                    if (this.__controller.blurred)\n                        cursor.hide().parent.blur(cursor);\n                    return this;\n                }\n                return this.__controller.exportLatex();\n            };\n            AbstractMathQuill.prototype.selection = function () {\n                return this.__controller.exportLatexSelection();\n            };\n            AbstractMathQuill.prototype.html = function () {\n                return this.__controller.root\n                    .domFrag()\n                    .oneElement()\n                    .innerHTML.replace(/ jQuery\\d+=\"(?:\\d+|null)\"/g, '') // TODO remove when jQuery is completely gone\n                    .replace(/ mathquill-(?:command|block)-id=\"?\\d+\"?/g, '')\n                    .replace(/<span class=\"?mq-cursor( mq-blink)?\"?>.?<\\/span>/i, '')\n                    .replace(/ mq-hasCursor|mq-hasCursor ?/, '')\n                    .replace(/ class=(\"\"|(?= |>))/g, '');\n            };\n            AbstractMathQuill.prototype.reflow = function () {\n                this.__controller.root.postOrder(function (node) {\n                    node.reflow();\n                });\n                return this;\n            };\n            return AbstractMathQuill;\n        }(Progenote));\n        var EditableField = /** @class */ (function (_super) {\n            __extends(EditableField, _super);\n            function EditableField() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            EditableField.prototype.mathquillify = function (classNames) {\n                _super.prototype.mathquillify.call(this, classNames);\n                this.__controller.editable = true;\n                this.__controller.addMouseEventListener();\n                this.__controller.editablesTextareaEvents();\n                return this;\n            };\n            EditableField.prototype.focus = function () {\n                this.__controller.getTextareaOrThrow().focus();\n                this.__controller.scrollHoriz();\n                return this;\n            };\n            EditableField.prototype.blur = function () {\n                this.__controller.getTextareaOrThrow().blur();\n                return this;\n            };\n            EditableField.prototype.write = function (latex) {\n                this.__controller.writeLatex(latex);\n                this.__controller.scrollHoriz();\n                var cursor = this.__controller.cursor;\n                if (this.__controller.blurred)\n                    cursor.hide().parent.blur(cursor);\n                return this;\n            };\n            EditableField.prototype.empty = function () {\n                var _c;\n                var root = this.__controller.root, cursor = this.__controller.cursor;\n                root.setEnds((_c = {}, _c[L] = 0, _c[R] = 0, _c));\n                root.domFrag().empty();\n                delete cursor.selection;\n                cursor.insAtRightEnd(root);\n                return this;\n            };\n            EditableField.prototype.cmd = function (cmd) {\n                var ctrlr = this.__controller.notify(undefined), cursor = ctrlr.cursor;\n                if (/^\\\\[a-z]+$/i.test(cmd) && !cursor.isTooDeep()) {\n                    cmd = cmd.slice(1);\n                    var klass = LatexCmds[cmd];\n                    var node;\n                    if (klass) {\n                        if (klass.constructor) {\n                            node = new klass(cmd);\n                        }\n                        else {\n                            node = klass(cmd);\n                        }\n                        if (cursor.selection)\n                            node.replaces(cursor.replaceSelection());\n                        node.createLeftOf(cursor.show());\n                    } /* TODO: API needs better error reporting */\n                    else\n                        ;\n                }\n                else\n                    cursor.parent.write(cursor, cmd);\n                ctrlr.scrollHoriz();\n                if (ctrlr.blurred)\n                    cursor.hide().parent.blur(cursor);\n                return this;\n            };\n            EditableField.prototype.select = function () {\n                this.__controller.selectAll();\n                return this;\n            };\n            EditableField.prototype.clearSelection = function () {\n                this.__controller.cursor.clearSelection();\n                return this;\n            };\n            EditableField.prototype.moveToDirEnd = function (dir) {\n                this.__controller\n                    .notify('move')\n                    .cursor.insAtDirEnd(dir, this.__controller.root);\n                return this;\n            };\n            EditableField.prototype.moveToLeftEnd = function () {\n                return this.moveToDirEnd(L);\n            };\n            EditableField.prototype.moveToRightEnd = function () {\n                return this.moveToDirEnd(R);\n            };\n            EditableField.prototype.keystroke = function (keysString, evt) {\n                var keys = keysString.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\n                for (var i = 0; i < keys.length; i += 1) {\n                    this.__controller.keystroke(keys[i], evt);\n                }\n                return this;\n            };\n            EditableField.prototype.typedText = function (text) {\n                for (var i = 0; i < text.length; i += 1)\n                    this.__controller.typedText(text.charAt(i));\n                return this;\n            };\n            EditableField.prototype.dropEmbedded = function (pageX, pageY, options) {\n                var clientX = pageX - getScrollX();\n                var clientY = pageY - getScrollY();\n                var el = document.elementFromPoint(clientX, clientY);\n                this.__controller.seek(el, clientX, clientY);\n                var cmd = new EmbedNode().setOptions(options);\n                cmd.createLeftOf(this.__controller.cursor);\n            };\n            EditableField.prototype.setAriaPostLabel = function (ariaPostLabel, timeout) {\n                this.__controller.setAriaPostLabel(ariaPostLabel, timeout);\n                return this;\n            };\n            EditableField.prototype.getAriaPostLabel = function () {\n                return this.__controller.getAriaPostLabel();\n            };\n            EditableField.prototype.clickAt = function (clientX, clientY, target) {\n                target = target || document.elementFromPoint(clientX, clientY);\n                var ctrlr = this.__controller, root = ctrlr.root;\n                var rootElement = root.domFrag().oneElement();\n                if (!rootElement.contains(target))\n                    target = rootElement;\n                ctrlr.seek(target, clientX, clientY);\n                if (ctrlr.blurred)\n                    this.focus();\n                return this;\n            };\n            EditableField.prototype.ignoreNextMousedown = function (fn) {\n                this.__controller.cursor.options.ignoreNextMousedown = fn;\n                return this;\n            };\n            return EditableField;\n        }(AbstractMathQuill));\n        var APIClasses = {\n            AbstractMathQuill: AbstractMathQuill,\n            EditableField: EditableField,\n        };\n        pray('API.StaticMath defined', API.StaticMath);\n        APIClasses.StaticMath = API.StaticMath(APIClasses);\n        pray('API.MathField defined', API.MathField);\n        APIClasses.MathField = API.MathField(APIClasses);\n        pray('API.InnerMathField defined', API.InnerMathField);\n        APIClasses.InnerMathField = API.InnerMathField(APIClasses);\n        if (API.TextField) {\n            APIClasses.TextField = API.TextField(APIClasses);\n        }\n        /**\n         * Function that takes an HTML element and, if it's the root HTML element of a\n         * static math or math or text field, returns an API object for it (else, null).\n         *\n         *   var mathfield = MQ.MathField(mathFieldSpan);\n         *   assert(MQ(mathFieldSpan).id === mathfield.id);\n         *   assert(MQ(mathFieldSpan).id === MQ(mathFieldSpan).id);\n         *\n         */\n        var MQ = function (el) {\n            if (!el || !el.nodeType)\n                return null; // check that `el` is a HTML element, using the\n            // same technique as jQuery: https://github.com/jquery/jquery/blob/679536ee4b7a92ae64a5f58d90e9cc38c001e807/src/core/init.js#L92\n            var blockElement;\n            var childArray = domFrag(el).children().toElementArray();\n            for (var _i = 0, childArray_1 = childArray; _i < childArray_1.length; _i++) {\n                var child = childArray_1[_i];\n                if (child.classList.contains('mq-root-block')) {\n                    blockElement = child;\n                    break;\n                }\n            }\n            var blockNode = NodeBase.getNodeOfElement(blockElement); // TODO - assumng it's a MathBlock\n            var ctrlr = blockNode && blockNode.controller;\n            var APIClass = ctrlr && APIClasses[ctrlr.KIND_OF_MQ];\n            return ctrlr && APIClass ? new APIClass(ctrlr) : null;\n        };\n        MQ.L = L;\n        MQ.R = R;\n        MQ.config = function (opts) {\n            config(BaseOptions.prototype, opts);\n            return this;\n        };\n        MQ.registerEmbed = function (name, options) {\n            if (!/^[a-z][a-z0-9]*$/i.test(name)) {\n                throw 'Embed name must start with letter and be only letters and digits';\n            }\n            EMBEDS[name] = options;\n        };\n        /*\n         * Export the API functions that MathQuill-ify an HTML element into API objects\n         * of each class. If the element had already been MathQuill-ified but into a\n         * different kind (or it's not an HTML element), return null.\n         */\n        MQ.StaticMath = createEntrypoint('StaticMath', APIClasses.StaticMath);\n        MQ.MathField = createEntrypoint('MathField', APIClasses.MathField);\n        MQ.InnerMathField = createEntrypoint('InnerMathField', APIClasses.InnerMathField);\n        if (APIClasses.TextField) {\n            MQ.TextField = createEntrypoint('TextField', APIClasses.TextField);\n        }\n        MQ.prototype = AbstractMathQuill.prototype;\n        MQ.EditableField = function () {\n            throw \"wtf don't call me, I'm 'abstract'\";\n        };\n        MQ.EditableField.prototype = EditableField.prototype;\n        if (version < 3) {\n            MQ.saneKeyboardEvents = defaultSubstituteKeyboardEvents;\n        }\n        function createEntrypoint(kind, APIClass) {\n            pray(kind + ' is defined', APIClass);\n            function mqEntrypoint(el, opts) {\n                if (!el || !el.nodeType)\n                    return null;\n                var mq = MQ(el);\n                if (mq instanceof APIClass)\n                    return mq;\n                var ctrlr = new Controller(new APIClass.RootBlock(), el, new BaseOptions(version));\n                ctrlr.KIND_OF_MQ = kind;\n                return new APIClass(ctrlr).__mathquillify(opts || {}, version);\n            }\n            mqEntrypoint.prototype = APIClass.prototype;\n            return mqEntrypoint;\n        }\n        return MQ;\n    }\n    MathQuill.noConflict = function () {\n        window.MathQuill = origMathQuill;\n        return MathQuill;\n    };\n    var origMathQuill = window.MathQuill;\n    window.MathQuill = MathQuill;\n    function RootBlockMixin(_) {\n        _.moveOutOf = function (dir) {\n            pray('controller is defined', this.controller);\n            this.controller.handle('moveOutOf', dir);\n        };\n        _.deleteOutOf = function (dir) {\n            pray('controller is defined', this.controller);\n            this.controller.handle('deleteOutOf', dir);\n        };\n        _.selectOutOf = function (dir) {\n            pray('controller is defined', this.controller);\n            this.controller.handle('selectOutOf', dir);\n        };\n        _.upOutOf = function () {\n            pray('controller is defined', this.controller);\n            this.controller.handle('upOutOf');\n            return undefined;\n        };\n        _.downOutOf = function () {\n            pray('controller is defined', this.controller);\n            this.controller.handle('downOutOf');\n            return undefined;\n        };\n        _.reflow = function () {\n            pray('controller is defined', this.controller);\n            this.controller.handle('reflow');\n            this.controller.handle('edited');\n            this.controller.handle('edit');\n        };\n    }\n    function parseError(stream, message) {\n        if (stream) {\n            stream = \"'\" + stream + \"'\";\n        }\n        else {\n            stream = 'EOF';\n        }\n        throw 'Parse Error: ' + message + ' at ' + stream;\n    }\n    var Parser = /** @class */ (function () {\n        // The Parser object is a wrapper for a parser function.\n        // Externally, you use one to parse a string by calling\n        //   var result = SomeParser.parse('Me Me Me! Parse Me!');\n        // You should never call the constructor, rather you should\n        // construct your Parser from the base parsers and the\n        // parser combinator methods.\n        function Parser(body) {\n            this._ = body;\n        }\n        Parser.prototype.parse = function (stream) {\n            return this.skip(Parser.eof)._('' + stream, success, parseError);\n            function success(_stream, result) {\n                return result;\n            }\n        };\n        // -*- primitive combinators -*- //\n        Parser.prototype.or = function (alternative) {\n            pray('or is passed a parser', alternative instanceof Parser);\n            var self = this;\n            return new Parser(function (stream, onSuccess, onFailure) {\n                return self._(stream, onSuccess, failure);\n                function failure(_newStream) {\n                    return alternative._(stream, onSuccess, onFailure);\n                }\n            });\n        };\n        Parser.prototype.then = function (next) {\n            var self = this;\n            return new Parser(function (stream, onSuccess, onFailure) {\n                return self._(stream, success, onFailure);\n                function success(newStream, result) {\n                    var nextParser = next instanceof Parser ? next : next(result);\n                    pray('a parser is returned', nextParser instanceof Parser);\n                    return nextParser._(newStream, onSuccess, onFailure);\n                }\n            });\n        };\n        // -*- optimized iterative combinators -*- //\n        Parser.prototype.many = function () {\n            var self = this;\n            return new Parser(function (stream, onSuccess, _onFailure) {\n                var xs = [];\n                while (self._(stream, success, failure))\n                    ;\n                return onSuccess(stream, xs);\n                function success(newStream, x) {\n                    stream = newStream;\n                    xs.push(x);\n                    return true;\n                }\n                function failure() {\n                    return false;\n                }\n            });\n        };\n        Parser.prototype.times = function (min, max) {\n            if (arguments.length < 2)\n                max = min;\n            var self = this;\n            return new Parser(function (stream, onSuccess, onFailure) {\n                var xs = [];\n                var result = true;\n                var failure;\n                for (var i = 0; i < min; i += 1) {\n                    // TODO, this may be incorrect for parsers that return boolean\n                    // (or generally, falsey) values\n                    result = !!self._(stream, success, firstFailure);\n                    if (!result)\n                        return onFailure(stream, failure);\n                }\n                for (; i < max && result; i += 1) {\n                    self._(stream, success, secondFailure);\n                }\n                return onSuccess(stream, xs);\n                function success(newStream, x) {\n                    xs.push(x);\n                    stream = newStream;\n                    return true;\n                }\n                function firstFailure(newStream, msg) {\n                    failure = msg;\n                    stream = newStream;\n                    return false;\n                }\n                function secondFailure(_newStream, _msg) {\n                    return false;\n                }\n            });\n        };\n        // -*- higher-level combinators -*- //\n        Parser.prototype.result = function (res) {\n            return this.then(Parser.succeed(res));\n        };\n        Parser.prototype.atMost = function (n) {\n            return this.times(0, n);\n        };\n        Parser.prototype.atLeast = function (n) {\n            var self = this;\n            return self.times(n).then(function (start) {\n                return self.many().map(function (end) {\n                    return start.concat(end);\n                });\n            });\n        };\n        Parser.prototype.map = function (fn) {\n            return this.then(function (result) {\n                return Parser.succeed(fn(result));\n            });\n        };\n        Parser.prototype.skip = function (two) {\n            return this.then(function (result) {\n                return two.result(result);\n            });\n        };\n        // -*- primitive parsers -*- //\n        Parser.string = function (str) {\n            var len = str.length;\n            var expected = \"expected '\" + str + \"'\";\n            return new Parser(function (stream, onSuccess, onFailure) {\n                var head = stream.slice(0, len);\n                if (head === str) {\n                    return onSuccess(stream.slice(len), head);\n                }\n                else {\n                    return onFailure(stream, expected);\n                }\n            });\n        };\n        Parser.regex = function (re) {\n            pray('regexp parser is anchored', re.toString().charAt(1) === '^');\n            var expected = 'expected ' + re;\n            return new Parser(function (stream, onSuccess, onFailure) {\n                var match = re.exec(stream);\n                if (match) {\n                    var result = match[0];\n                    return onSuccess(stream.slice(result.length), result);\n                }\n                else {\n                    return onFailure(stream, expected);\n                }\n            });\n        };\n        Parser.succeed = function (result) {\n            return new Parser(function (stream, onSuccess) {\n                return onSuccess(stream, result);\n            });\n        };\n        Parser.fail = function (msg) {\n            return new Parser(function (stream, _, onFailure) {\n                return onFailure(stream, msg);\n            });\n        };\n        Parser.letter = Parser.regex(/^[a-z]/i);\n        Parser.letters = Parser.regex(/^[a-z]*/i);\n        Parser.digit = Parser.regex(/^[0-9]/);\n        Parser.digits = Parser.regex(/^[0-9]*/);\n        Parser.whitespace = Parser.regex(/^\\s+/);\n        Parser.optWhitespace = Parser.regex(/^\\s*/);\n        Parser.any = new Parser(function (stream, onSuccess, onFailure) {\n            if (!stream)\n                return onFailure(stream, 'expected any character');\n            return onSuccess(stream.slice(1), stream.charAt(0));\n        });\n        Parser.all = new Parser(function (stream, onSuccess, _onFailure) {\n            return onSuccess('', stream);\n        });\n        Parser.eof = new Parser(function (stream, onSuccess, onFailure) {\n            if (stream)\n                return onFailure(stream, 'expected EOF');\n            return onSuccess(stream, stream);\n        });\n        return Parser;\n    }());\n    /** Poller that fires once every tick. */\n    var EveryTick = /** @class */ (function () {\n        function EveryTick() {\n            this.fn = noop;\n        }\n        EveryTick.prototype.listen = function (fn) {\n            this.fn = fn;\n            clearTimeout(this.timeoutId);\n            this.timeoutId = setTimeout(this.fn);\n        };\n        EveryTick.prototype.listenOnce = function (fn) {\n            var _this_1 = this;\n            this.listen(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _this_1.clearListener();\n                fn.apply(void 0, args);\n            });\n        };\n        EveryTick.prototype.clearListener = function () {\n            this.fn = noop;\n            clearTimeout(this.timeoutId);\n        };\n        EveryTick.prototype.trigger = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            this.fn.apply(this, args);\n        };\n        return EveryTick;\n    }());\n    /*************************************************\n     * Sane Keyboard Events Shim\n     *\n     * An abstraction layer over the raw browser browser events\n     * on the textarea that hides all the nasty cross-\n     * browser incompatibilities behind a uniform API.\n     *\n     * Design goal: This is a *HARD* internal\n     * abstraction barrier. Cross-browser\n     * inconsistencies are not allowed to leak through\n     * and be dealt with by event handlers. All future\n     * cross-browser issues that arise must be dealt\n     * with here, and if necessary, the API updated.\n     ************************************************/\n    var saneKeyboardEvents = (function () {\n        // The following [key values][1] map was compiled from the\n        // [DOM3 Events appendix section on key codes][2] and\n        // [a widely cited report on cross-browser tests of key codes][3],\n        // except for 10: 'Enter', which I've empirically observed in Safari on iOS\n        // and doesn't appear to conflict with any other known key codes.\n        //\n        // [1]: http://www.w3.org/TR/2012/WD-DOM-Level-3-Events-20120614/#keys-keyvalues\n        // [2]: http://www.w3.org/TR/2012/WD-DOM-Level-3-Events-20120614/#fixed-virtual-key-codes\n        // [3]: http://unixpapa.com/js/key.html\n        var WHICH_TO_MQ_KEY_STEM = {\n            8: 'Backspace',\n            9: 'Tab',\n            10: 'Enter',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            20: 'CapsLock',\n            27: 'Esc',\n            32: 'Spacebar',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'Left',\n            38: 'Up',\n            39: 'Right',\n            40: 'Down',\n            45: 'Insert',\n            46: 'Del',\n            144: 'NumLock',\n        };\n        var KEY_TO_MQ_KEY_STEM = {\n            ArrowRight: 'Right',\n            ArrowLeft: 'Left',\n            ArrowDown: 'Down',\n            ArrowUp: 'Up',\n            Delete: 'Del',\n            Escape: 'Esc',\n            ' ': 'Spacebar',\n        };\n        function isArrowKey(e) {\n            // The keyPress event in FF reports which=0 for some reason. The new\n            // .key property seems to report reasonable results, so we're using that\n            switch (getMQKeyStem(e)) {\n                case 'Right':\n                case 'Left':\n                case 'Down':\n                case 'Up':\n                    return true;\n            }\n            return false;\n        }\n        function isLowercaseAlphaCharacter(s) {\n            return s.length === 1 && s >= 'a' && s <= 'z';\n        }\n        function getMQKeyStem(evt) {\n            var _c;\n            // Translate browser key names to MQ's internal naming system\n            //\n            // Ref: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n            if (evt.key === undefined) {\n                var which = evt.which || evt.keyCode;\n                return WHICH_TO_MQ_KEY_STEM[which] || String.fromCharCode(which);\n            }\n            if (isLowercaseAlphaCharacter(evt.key))\n                return evt.key.toUpperCase();\n            return (_c = KEY_TO_MQ_KEY_STEM[evt.key]) !== null && _c !== void 0 ? _c : evt.key;\n        }\n        /** To the extent possible, create a normalized string representation\n         * of the key combo (i.e., key code and modifier keys). */\n        function getMQKeyName(evt) {\n            var key = getMQKeyStem(evt);\n            var modifiers = [];\n            if (evt.ctrlKey)\n                modifiers.push('Ctrl');\n            if (evt.metaKey)\n                modifiers.push('Meta');\n            if (evt.altKey)\n                modifiers.push('Alt');\n            if (evt.shiftKey)\n                modifiers.push('Shift');\n            if (!modifiers.length)\n                return key;\n            // Don't append the key name if it already exists as a modifier, e.g. Ctrl-Control and Shift-Shift is nonsensical.\n            if (key !== 'Alt' && key !== 'Control' && key !== 'Meta' && key !== 'Shift')\n                modifiers.push(key);\n            return modifiers.join('-');\n        }\n        return function saneKeyboardEvents(\n        /** Usually the textarea associated with a MQ instance, but can be another kind of element if `substituteTextarea` was used to replace it with something else. */\n        textarea, controller) {\n            var keydown = null;\n            var keypress = null;\n            // everyTick.listen() is called after key or clipboard events to\n            // say \"Hey, I think something was just typed\" or \"pasted\" etc,\n            // so that at all subsequent opportune times (next event or timeout),\n            // will check for expected typed or pasted text.\n            // Need to check repeatedly because #135: in Safari 5.1 (at least),\n            // after selecting something and then typing, the textarea is\n            // incorrectly reported as selected during the input event (but not\n            // subsequently).\n            var everyTick = new EveryTick();\n            function guardedTextareaSelect() {\n                try {\n                    // IE can throw an 'Incorrect Function' error if you\n                    // try to select a textarea that is hidden. It seems\n                    // likely that we don't really care if the selection\n                    // fails to happen in this case. Why would the textarea\n                    // be hidden? And who would even be able to tell?\n                    if (textarea instanceof HTMLTextAreaElement)\n                        textarea.select();\n                }\n                catch (e) { }\n            }\n            // -*- public methods -*- //\n            function select(text) {\n                // check textarea at least once/one last time before munging (so\n                // no race condition if selection happens after keypress/paste but\n                // before checkTextarea), then never again ('cos it's been munged)\n                everyTick.trigger();\n                everyTick.clearListener();\n                if (textarea instanceof HTMLTextAreaElement)\n                    textarea.value = text;\n                if (text)\n                    guardedTextareaSelect();\n                shouldBeSelected = !!text;\n            }\n            var shouldBeSelected = false;\n            // -*- helper subroutines -*- //\n            // Determine whether there's a selection in the textarea.\n            // This will always return false in IE < 9, which don't support\n            // HTMLTextareaElement::selection{Start,End}.\n            function hasSelection() {\n                if (!('selectionStart' in textarea))\n                    return false;\n                if (!(textarea instanceof HTMLTextAreaElement))\n                    return false;\n                return textarea.selectionStart !== textarea.selectionEnd;\n            }\n            function handleKey() {\n                if (controller.options && controller.options.overrideKeystroke) {\n                    controller.options.overrideKeystroke(getMQKeyName(keydown), keydown);\n                }\n                else {\n                    controller.keystroke(getMQKeyName(keydown), keydown);\n                }\n            }\n            // -*- event handlers -*- //\n            function onKeydown(e) {\n                everyTick.trigger(e);\n                if (e.target !== textarea)\n                    return;\n                keydown = e;\n                keypress = null;\n                if (shouldBeSelected)\n                    everyTick.listenOnce(function (e) {\n                        if (!(e && e.type === 'focusout')) {\n                            // re-select textarea in case it's an unrecognized key that clears\n                            // the selection, then never again, 'cos next thing might be blur\n                            guardedTextareaSelect();\n                        }\n                    });\n                handleKey();\n            }\n            function onKeypress(e) {\n                everyTick.trigger(e);\n                if (e.target !== textarea)\n                    return;\n                // call the key handler for repeated keypresses.\n                // This excludes keypresses that happen directly\n                // after keydown.  In that case, there will be\n                // no previous keypress, so we skip it here\n                if (keydown && keypress)\n                    handleKey();\n                keypress = e;\n                // only check for typed text if this key can type text. Otherwise\n                // you can end up with mathquill thinking text was typed if you\n                // use the mq.keystroke('Right') command while a single character\n                // is selected. Only detected in FF.\n                if (!isArrowKey(e)) {\n                    everyTick.listen(typedText);\n                }\n                else {\n                    everyTick.listenOnce(maybeReselect);\n                }\n            }\n            function onKeyup(e) {\n                everyTick.trigger(e);\n                if (e.target !== textarea)\n                    return;\n                // Handle case of no keypress event being sent\n                if (!!keydown && !keypress) {\n                    // only check for typed text if this key can type text. Otherwise\n                    // you can end up with mathquill thinking text was typed if you\n                    // use the mq.keystroke('Right') command while a single character\n                    // is selected. Only detected in FF.\n                    if (!isArrowKey(e)) {\n                        everyTick.listen(typedText);\n                    }\n                    else {\n                        everyTick.listenOnce(maybeReselect);\n                    }\n                }\n            }\n            function typedText() {\n                // If there is a selection, the contents of the textarea couldn't\n                // possibly have just been typed in.\n                // This happens in browsers like Firefox and Opera that fire\n                // keypress for keystrokes that are not text entry and leave the\n                // selection in the textarea alone, such as Ctrl-C.\n                // Note: we assume that browsers that don't support hasSelection()\n                // also never fire keypress on keystrokes that are not text entry.\n                // This seems reasonably safe because:\n                // - all modern browsers including IE 9+ support hasSelection(),\n                //   making it extremely unlikely any browser besides IE < 9 won't\n                // - as far as we know IE < 9 never fires keypress on keystrokes\n                //   that aren't text entry, which is only as reliable as our\n                //   tests are comprehensive, but the IE < 9 way to do\n                //   hasSelection() is poorly documented and is also only as\n                //   reliable as our tests are comprehensive\n                // If anything like #40 or #71 is reported in IE < 9, see\n                // b1318e5349160b665003e36d4eedd64101ceacd8\n                if (hasSelection())\n                    return;\n                if (!(textarea instanceof HTMLTextAreaElement))\n                    return;\n                var text = textarea.value;\n                // In Linux and Chrome or Chrome OS, users may issue the Ctrl-Shift-U command to input a Unicode character.\n                // Unfortunately, when the system is in this state, Chrome sends a keydown of \"Ctrl-Shift-Unidentified\" in Linux, \"Ctrl-Shift-U\" on Windows/Mac, or \"Ctrl-Shift-Process\" in the latest Chrome OS.\n                // Equally vexing is that the keyup correctly comes back as Ctrl-Shift-U.\n                // Furthermore, an input event with the value \"u\" is still processed in Linux and Chrome OS due to the down/up mismatch.\n                // The end result is that a spurious \"u\" is sent followed by the intended character.\n                // Due to how this feature works, it's vital to completely ignore Ctrl-Shift-U no matter how the input event appears to Mathquill as clearing the textarea by mistake breaks the expected input flow.\n                if (keydown &&\n                    !keydown.altKey &&\n                    keydown.ctrlKey &&\n                    !keydown.metaKey &&\n                    keydown.shiftKey &&\n                    (keydown.key === 'U' ||\n                        keydown.key === 'Unidentified' ||\n                        keydown.key === 'Process'))\n                    return;\n                if (text.length === 1) {\n                    textarea.value = '';\n                    if (controller.options && controller.options.overrideTypedText) {\n                        controller.options.overrideTypedText(text);\n                    }\n                    else {\n                        controller.typedText(text);\n                    }\n                } // in Firefox, keys that don't type text, just clear seln, fire keypress\n                // https://github.com/mathquill/mathquill/issues/293#issuecomment-40997668\n                else\n                    maybeReselect(); // re-select if that's why we're here\n            }\n            function maybeReselect() {\n                if (!(textarea instanceof HTMLTextAreaElement))\n                    return;\n                if (textarea.value.length > 1) {\n                    guardedTextareaSelect();\n                }\n            }\n            function onBlur() {\n                keydown = null;\n                keypress = null;\n                everyTick.clearListener();\n                if (textarea instanceof HTMLTextAreaElement)\n                    textarea.value = '';\n            }\n            function onPaste(e) {\n                everyTick.trigger();\n                if (e.target !== textarea)\n                    return;\n                // browsers are dumb.\n                //\n                // In Linux, middle-click pasting causes onPaste to be called,\n                // when the textarea is not necessarily focused.  We focus it\n                // here to ensure that the pasted text actually ends up in the\n                // textarea.\n                //\n                // It's pretty nifty that by changing focus in this handler,\n                // we can change the target of the default action.  (This works\n                // on keydown too, FWIW).\n                //\n                // And by nifty, we mean dumb (but useful sometimes).\n                if (document.activeElement !== textarea) {\n                    textarea.focus();\n                }\n                everyTick.listen(function pastedText() {\n                    if (!(textarea instanceof HTMLTextAreaElement))\n                        return;\n                    var text = textarea.value;\n                    textarea.value = '';\n                    if (text)\n                        controller.paste(text);\n                });\n            }\n            function onInput(e) {\n                everyTick.trigger(e);\n            }\n            if (controller.options && controller.options.disableCopyPaste) {\n                controller.addTextareaEventListeners({\n                    keydown: onKeydown,\n                    keypress: onKeypress,\n                    keyup: onKeyup,\n                    focusout: onBlur,\n                    copy: function (e) {\n                        e.preventDefault();\n                    },\n                    cut: function (e) {\n                        e.preventDefault();\n                    },\n                    paste: function (e) {\n                        everyTick.trigger();\n                        e.preventDefault();\n                    },\n                    input: onInput,\n                });\n            }\n            else {\n                controller.addTextareaEventListeners({\n                    keydown: onKeydown,\n                    keypress: onKeypress,\n                    keyup: onKeyup,\n                    focusout: onBlur,\n                    cut: function () {\n                        everyTick.listenOnce(function () {\n                            controller.cut();\n                        });\n                    },\n                    copy: function () {\n                        everyTick.listenOnce(function () {\n                            controller.copy();\n                        });\n                    },\n                    paste: onPaste,\n                    input: onInput,\n                });\n            }\n            // -*- export public methods -*- //\n            return { select: select };\n        };\n    })();\n    /***********************************************\n     * Export math in a human-readable text format\n     * As you can see, only half-baked so far.\n     **********************************************/\n    var Controller_exportText = /** @class */ (function (_super) {\n        __extends(Controller_exportText, _super);\n        function Controller_exportText() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Controller_exportText.prototype.exportText = function () {\n            return this.root.foldChildren('', function (text, child) {\n                return text + child.text();\n            });\n        };\n        return Controller_exportText;\n    }(ControllerBase));\n    ControllerBase.onNotify(function (cursor, e) {\n        // these try to cover all ways that mathquill can be modified\n        if (e === 'edit' || e === 'replace' || e === undefined) {\n            var controller = cursor.controller;\n            if (!controller)\n                return;\n            if (!controller.options.enableDigitGrouping)\n                return;\n            // TODO - maybe reconsider these 3 states and drop down to only 2\n            //\n            // blurred === false means we are focused. blurred === true or\n            // blurred === undefined means we are not focused.\n            if (controller.blurred !== false)\n                return;\n            controller.disableGroupingForSeconds(1);\n        }\n    });\n    var Controller_focusBlur = /** @class */ (function (_super) {\n        __extends(Controller_focusBlur, _super);\n        function Controller_focusBlur() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.handleTextareaFocusEditable = function () {\n                var cursor = _this_1.cursor;\n                _this_1.updateMathspeak();\n                _this_1.blurred = false;\n                clearTimeout(_this_1.blurTimeout);\n                domFrag(_this_1.container).addClass('mq-focused');\n                if (!cursor.parent)\n                    cursor.insAtRightEnd(_this_1.root);\n                if (cursor.selection) {\n                    cursor.selection.domFrag().removeClass('mq-blur');\n                    _this_1.selectionChanged(); //re-select textarea contents after tabbing away and back\n                }\n                else {\n                    cursor.show();\n                }\n                _this_1.setOverflowClasses();\n            };\n            _this_1.handleTextareaBlurEditable = function () {\n                if (_this_1.textareaSelectionTimeout) {\n                    clearTimeout(_this_1.textareaSelectionTimeout);\n                    _this_1.textareaSelectionTimeout = 0;\n                }\n                _this_1.disableGroupingForSeconds(0);\n                _this_1.blurred = true;\n                _this_1.blurTimeout = setTimeout(function () {\n                    // wait for blur on window; if\n                    _this_1.root.postOrder(function (node) {\n                        node.intentionalBlur();\n                    }); // none, intentional blur: #264\n                    _this_1.cursor.clearSelection().endSelection();\n                    _this_1.blur();\n                    _this_1.updateMathspeak();\n                    _this_1.scrollHoriz();\n                });\n                window.addEventListener('blur', _this_1.handleWindowBlur);\n            };\n            _this_1.handleTextareaFocusStatic = function () {\n                _this_1.blurred = false;\n            };\n            _this_1.handleTextareaBlurStatic = function () {\n                if (_this_1.cursor.selection) {\n                    _this_1.cursor.selection.clear();\n                }\n                //detaching during blur explodes in WebKit\n                setTimeout(function () {\n                    domFrag(_this_1.getTextareaSpanOrThrow()).detach();\n                    _this_1.blurred = true;\n                });\n            };\n            _this_1.handleWindowBlur = function () {\n                // blur event also fired on window, just switching\n                clearTimeout(_this_1.blurTimeout); // tabs/windows, not intentional blur\n                if (_this_1.cursor.selection)\n                    _this_1.cursor.selection.domFrag().addClass('mq-blur');\n                _this_1.blur();\n                _this_1.updateMathspeak();\n            };\n            return _this_1;\n        }\n        Controller_focusBlur.prototype.disableGroupingForSeconds = function (seconds) {\n            var _this_1 = this;\n            clearTimeout(this.__disableGroupingTimeout);\n            if (seconds === 0) {\n                this.root.domFrag().removeClass('mq-suppress-grouping');\n            }\n            else {\n                this.root.domFrag().addClass('mq-suppress-grouping');\n                this.__disableGroupingTimeout = setTimeout(function () {\n                    _this_1.root.domFrag().removeClass('mq-suppress-grouping');\n                }, seconds * 1000);\n            }\n        };\n        Controller_focusBlur.prototype.blur = function () {\n            // not directly in the textarea blur handler so as to be\n            this.cursor.hide().parent.blur(this.cursor); // synchronous with/in the same frame as\n            domFrag(this.container).removeClass('mq-focused'); // clearing/blurring selection\n            window.removeEventListener('blur', this.handleWindowBlur);\n            if (this.options && this.options.resetCursorOnBlur) {\n                this.cursor.resetToEnd(this);\n            }\n        };\n        Controller_focusBlur.prototype.addEditableFocusBlurListeners = function () {\n            var ctrlr = this, cursor = ctrlr.cursor;\n            this.addTextareaEventListeners({\n                focus: this.handleTextareaFocusEditable,\n                blur: this.handleTextareaBlurEditable,\n            });\n            ctrlr.blurred = true;\n            cursor.hide().parent.blur(cursor);\n        };\n        Controller_focusBlur.prototype.addStaticFocusBlurListeners = function () {\n            this.addTextareaEventListeners({\n                focus: this.handleTextareaFocusStatic,\n                blur: this.handleTextareaBlurStatic,\n            });\n        };\n        return Controller_focusBlur;\n    }(Controller_exportText));\n    /**\n     * TODO: I wanted to move MathBlock::focus and blur here, it would clean\n     * up lots of stuff like, TextBlock::focus is set to MathBlock::focus\n     * and TextBlock::blur calls MathBlock::blur, when instead they could\n     * use inheritance and super_.\n     *\n     * Problem is, there's lots of calls to .focus()/.blur() on nodes\n     * outside Controller::focusBlurEvents(), such as .postOrder('blur') on\n     * insertion, which if MathBlock::blur becomes MQNode::blur, would add the\n     * 'blur' CSS class to all MQSymbol's (because .isEmpty() is true for all\n     * of them).\n     *\n     * I'm not even sure there aren't other troublesome calls to .focus() or\n     * .blur(), so this is TODO for now.\n     */\n    /*****************************************\n     * Deals with the browser DOM events from\n     * interaction with the typist.\n     ****************************************/\n    /**\n     * Only one incremental selection may be open at a time. Track whether\n     * an incremental selection is open to help enforce this invariant.\n     */\n    var INCREMENTAL_SELECTION_OPEN = false;\n    var MQNode = /** @class */ (function (_super) {\n        __extends(MQNode, _super);\n        function MQNode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MQNode.prototype.keystroke = function (key, e, ctrlr) {\n            var cursor = ctrlr.cursor;\n            switch (key) {\n                case 'Ctrl-Shift-Backspace':\n                case 'Ctrl-Backspace':\n                    ctrlr.ctrlDeleteDir(L);\n                    break;\n                case 'Shift-Backspace':\n                case 'Backspace':\n                    ctrlr.backspace();\n                    break;\n                // Tab or Esc -> go one block right if it exists, else escape right.\n                case 'Esc':\n                case 'Tab':\n                    ctrlr.escapeDir(R, key, e);\n                    return;\n                // Shift-Tab -> go one block left if it exists, else escape left.\n                case 'Shift-Tab':\n                case 'Shift-Esc':\n                    ctrlr.escapeDir(L, key, e);\n                    return;\n                // End -> move to the end of the current block.\n                case 'End':\n                    ctrlr.notify('move').cursor.insAtRightEnd(cursor.parent);\n                    ctrlr.aria.queue('end of').queue(cursor.parent, true);\n                    break;\n                // Ctrl-End -> move all the way to the end of the root block.\n                case 'Ctrl-End':\n                    ctrlr.notify('move').cursor.insAtRightEnd(ctrlr.root);\n                    ctrlr.aria\n                        .queue('end of')\n                        .queue(ctrlr.ariaLabel)\n                        .queue(ctrlr.root)\n                        .queue(ctrlr.ariaPostLabel);\n                    break;\n                // Shift-End -> select to the end of the current block.\n                case 'Shift-End':\n                    ctrlr.selectToBlockEndInDir(R);\n                    break;\n                // Ctrl-Shift-End -> select all the way to the end of the root block.\n                case 'Ctrl-Shift-End':\n                    ctrlr.selectToRootEndInDir(R);\n                    break;\n                // Home -> move to the start of the current block.\n                case 'Home':\n                    ctrlr.notify('move').cursor.insAtLeftEnd(cursor.parent);\n                    ctrlr.aria.queue('beginning of').queue(cursor.parent, true);\n                    break;\n                // Ctrl-Home -> move all the way to the start of the root block.\n                case 'Ctrl-Home':\n                    ctrlr.notify('move').cursor.insAtLeftEnd(ctrlr.root);\n                    ctrlr.aria\n                        .queue('beginning of')\n                        .queue(ctrlr.ariaLabel)\n                        .queue(ctrlr.root)\n                        .queue(ctrlr.ariaPostLabel);\n                    break;\n                // Shift-Home -> select to the start of the current block.\n                case 'Shift-Home':\n                    ctrlr.selectToBlockEndInDir(L);\n                    break;\n                // Ctrl-Shift-Home -> select all the way to the start of the root block.\n                case 'Ctrl-Shift-Home':\n                    ctrlr.selectToRootEndInDir(L);\n                    break;\n                case 'Left':\n                    ctrlr.moveLeft();\n                    break;\n                case 'Shift-Left':\n                    ctrlr.selectLeft();\n                    break;\n                case 'Ctrl-Left':\n                    break;\n                case 'Right':\n                    ctrlr.moveRight();\n                    break;\n                case 'Shift-Right':\n                    ctrlr.selectRight();\n                    break;\n                case 'Ctrl-Right':\n                    break;\n                case 'Up':\n                    ctrlr.moveUp();\n                    break;\n                case 'Down':\n                    ctrlr.moveDown();\n                    break;\n                case 'Shift-Up':\n                    ctrlr.withIncrementalSelection(function (selectDir) {\n                        if (cursor[L]) {\n                            while (cursor[L])\n                                selectDir(L);\n                        }\n                        else {\n                            selectDir(L);\n                        }\n                    });\n                    break;\n                case 'Shift-Down':\n                    ctrlr.withIncrementalSelection(function (selectDir) {\n                        if (cursor[R]) {\n                            while (cursor[R])\n                                selectDir(R);\n                        }\n                        else {\n                            selectDir(R);\n                        }\n                    });\n                    break;\n                case 'Ctrl-Up':\n                    break;\n                case 'Ctrl-Down':\n                    break;\n                case 'Ctrl-Shift-Del':\n                case 'Ctrl-Del':\n                    ctrlr.ctrlDeleteDir(R);\n                    break;\n                case 'Shift-Del':\n                case 'Del':\n                    ctrlr.deleteForward();\n                    break;\n                case 'Meta-A':\n                case 'Ctrl-A':\n                    ctrlr.selectAll();\n                    break;\n                // These remaining hotkeys are only of benefit to people running screen readers.\n                case 'Ctrl-Alt-Up': // speak parent block that has focus\n                    if (cursor.parent.parent && cursor.parent.parent instanceof MQNode)\n                        ctrlr.aria.queue(cursor.parent.parent);\n                    else\n                        ctrlr.aria.queue('nothing above');\n                    break;\n                case 'Ctrl-Alt-Down': // speak current block that has focus\n                    if (cursor.parent && cursor.parent instanceof MQNode)\n                        ctrlr.aria.queue(cursor.parent);\n                    else\n                        ctrlr.aria.queue('block is empty');\n                    break;\n                case 'Ctrl-Alt-Left': // speak left-adjacent block\n                    if (cursor.parent.parent && cursor.parent.parent.getEnd(L)) {\n                        ctrlr.aria.queue(cursor.parent.parent.getEnd(L));\n                    }\n                    else {\n                        ctrlr.aria.queue('nothing to the left');\n                    }\n                    break;\n                case 'Ctrl-Alt-Right': // speak right-adjacent block\n                    if (cursor.parent.parent && cursor.parent.parent.getEnd(R)) {\n                        ctrlr.aria.queue(cursor.parent.parent.getEnd(R));\n                    }\n                    else {\n                        ctrlr.aria.queue('nothing to the right');\n                    }\n                    break;\n                case 'Ctrl-Alt-Shift-Down': // speak selection\n                    if (cursor.selection)\n                        ctrlr.aria.queue(cursor.selection.join('mathspeak', ' ').trim() + ' selected');\n                    else\n                        ctrlr.aria.queue('nothing selected');\n                    break;\n                case 'Ctrl-Alt-=':\n                case 'Ctrl-Alt-Shift-Right': // speak ARIA post label (evaluation or error)\n                    if (ctrlr.ariaPostLabel.length)\n                        ctrlr.aria.queue(ctrlr.ariaPostLabel);\n                    else\n                        ctrlr.aria.queue('no answer');\n                    break;\n                default:\n                    return;\n            }\n            ctrlr.aria.alert();\n            e === null || e === void 0 ? void 0 : e.preventDefault();\n            ctrlr.scrollHoriz();\n        };\n        MQNode.prototype.moveOutOf = function (_dir, _cursor, _updown) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::escapeDir, moveDir\n        MQNode.prototype.moveTowards = function (_dir, _cursor, _updown) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::moveDir\n        MQNode.prototype.deleteOutOf = function (_dir, _cursor) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::deleteDir\n        MQNode.prototype.deleteTowards = function (_dir, _cursor) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::deleteDir\n        MQNode.prototype.unselectInto = function (_dir, _cursor) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::selectDir\n        MQNode.prototype.selectOutOf = function (_dir, _cursor) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::selectDir\n        MQNode.prototype.selectTowards = function (_dir, _cursor) {\n            pray('overridden or never called on this node', false);\n        }; // called by Controller::selectDir\n        return MQNode;\n    }(NodeBase));\n    ControllerBase.onNotify(function (cursor, e) {\n        if (e === 'move' || e === 'upDown')\n            cursor.show().clearSelection();\n    });\n    baseOptionProcessors.leftRightIntoCmdGoes = function (updown) {\n        if (updown && updown !== 'up' && updown !== 'down') {\n            throw ('\"up\" or \"down\" required for leftRightIntoCmdGoes option, ' +\n                'got \"' +\n                updown +\n                '\"');\n        }\n        return updown;\n    };\n    ControllerBase.onNotify(function (cursor, e) {\n        if (e !== 'upDown')\n            cursor.upDownCache = {};\n    });\n    ControllerBase.onNotify(function (cursor, e) {\n        if (e === 'edit')\n            cursor.show().deleteSelection();\n    });\n    ControllerBase.onNotify(function (cursor, e) {\n        if (e !== 'select')\n            cursor.endSelection();\n    });\n    var Controller_keystroke = /** @class */ (function (_super) {\n        __extends(Controller_keystroke, _super);\n        function Controller_keystroke() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Controller_keystroke.prototype.keystroke = function (key, evt) {\n            this.cursor.parent.keystroke(key, evt, this.getControllerSelf());\n        };\n        Controller_keystroke.prototype.escapeDir = function (dir, _key, e) {\n            prayDirection(dir);\n            var cursor = this.cursor;\n            // only prevent default of Tab if not in the root editable\n            if (cursor.parent !== this.root)\n                e === null || e === void 0 ? void 0 : e.preventDefault();\n            // want to be a noop if in the root editable (in fact, Tab has an unrelated\n            // default browser action if so)\n            if (cursor.parent === this.root)\n                return;\n            cursor.clearSelection();\n            cursor.parent.moveOutOf(dir, cursor);\n            cursor.controller.aria.alert();\n            return this.notify('move');\n        };\n        Controller_keystroke.prototype.moveDir = function (dir) {\n            prayDirection(dir);\n            var cursor = this.cursor, updown = cursor.options.leftRightIntoCmdGoes;\n            var cursorDir = cursor[dir];\n            if (cursor.selection) {\n                cursor.insDirOf(dir, cursor.selection.getEnd(dir));\n            }\n            else if (cursorDir)\n                cursorDir.moveTowards(dir, cursor, updown);\n            else\n                cursor.parent.moveOutOf(dir, cursor, updown);\n            return this.notify('move');\n        };\n        Controller_keystroke.prototype.moveLeft = function () {\n            return this.moveDir(L);\n        };\n        Controller_keystroke.prototype.moveRight = function () {\n            return this.moveDir(R);\n        };\n        /**\n         * moveUp and moveDown have almost identical algorithms:\n         * - first check left and right, if so insAtLeft/RightEnd of them\n         * - else check the parent's 'upOutOf'/'downOutOf' property:\n         *   + if it's a function, call it with the cursor as the sole argument and\n         *     use the return value as if it were the value of the property\n         *   + if it's a Node, jump up or down into it:\n         *     - if there is a cached Point in the block, insert there\n         *     - else, seekHoriz within the block to the current x-coordinate (to be\n         *       as close to directly above/below the current position as possible)\n         *   + unless it's exactly `true`, stop bubbling\n         */\n        Controller_keystroke.prototype.moveUp = function () {\n            return this.moveUpDown('up');\n        };\n        Controller_keystroke.prototype.moveDown = function () {\n            return this.moveUpDown('down');\n        };\n        Controller_keystroke.prototype.moveUpDown = function (dir) {\n            var self = this;\n            var cursor = self.notify('upDown').cursor;\n            var dirInto;\n            var dirOutOf;\n            if (dir === 'up') {\n                dirInto = 'upInto';\n                dirOutOf = 'upOutOf';\n            }\n            else {\n                dirInto = 'downInto';\n                dirOutOf = 'downOutOf';\n            }\n            var cursorL = cursor[L];\n            var cursorR = cursor[R];\n            var cursorR_dirInto = cursorR && cursorR[dirInto];\n            var cursorL_dirInto = cursorL && cursorL[dirInto];\n            if (cursorR_dirInto)\n                cursor.insAtLeftEnd(cursorR_dirInto);\n            else if (cursorL_dirInto)\n                cursor.insAtRightEnd(cursorL_dirInto);\n            else {\n                cursor.parent.bubble(function (ancestor) {\n                    // TODO - revist this\n                    var prop = ancestor[dirOutOf];\n                    if (prop) {\n                        if (typeof prop === 'function')\n                            prop = prop.call(ancestor, cursor); // TODO - figure out if we need to assign to prop\n                        if (prop instanceof MQNode)\n                            cursor.jumpUpDown(ancestor, prop);\n                        if (prop !== true)\n                            return false; // TODO - figure out how this can return true\n                    }\n                    return undefined;\n                });\n            }\n            return self;\n        };\n        Controller_keystroke.prototype.deleteDir = function (dir) {\n            prayDirection(dir);\n            var cursor = this.cursor;\n            var cursorEl = cursor[dir];\n            var cursorElParent = cursor.parent.parent;\n            var ctrlr = cursor.controller;\n            if (cursorEl && cursorEl instanceof MQNode) {\n                if (cursorEl.sides) {\n                    ctrlr.aria.queue(cursorEl.parent\n                        .chToCmd(cursorEl.sides[-dir].ch)\n                        .mathspeak({ createdLeftOf: cursor }));\n                    // generally, speak the current element if it has no blocks,\n                    // but don't for text block commands as the deleteTowards method\n                    // in the TextCommand class is responsible for speaking the new character under the cursor.\n                }\n                else if (!cursorEl.blocks && cursorEl.parent.ctrlSeq !== '\\\\text') {\n                    ctrlr.aria.queue(cursorEl);\n                }\n            }\n            else if (cursorElParent && cursorElParent instanceof MQNode) {\n                if (cursorElParent.sides) {\n                    ctrlr.aria.queue(cursorElParent.parent\n                        .chToCmd(cursorElParent.sides[dir].ch)\n                        .mathspeak({ createdLeftOf: cursor }));\n                }\n                else if (cursorElParent.blocks && cursorElParent.mathspeakTemplate) {\n                    if (cursorElParent.upInto && cursorElParent.downInto) {\n                        // likely a fraction, and we just backspaced over the slash\n                        ctrlr.aria.queue(cursorElParent.mathspeakTemplate[1]);\n                    }\n                    else {\n                        var mst = cursorElParent.mathspeakTemplate;\n                        var textToQueue = dir === L ? mst[0] : mst[mst.length - 1];\n                        ctrlr.aria.queue(textToQueue);\n                    }\n                }\n                else {\n                    ctrlr.aria.queue(cursorElParent);\n                }\n            }\n            var hadSelection = cursor.selection;\n            this.notify('edit'); // deletes selection if present\n            if (!hadSelection) {\n                var cursorDir = cursor[dir];\n                if (cursorDir)\n                    cursorDir.deleteTowards(dir, cursor);\n                else\n                    cursor.parent.deleteOutOf(dir, cursor);\n            }\n            var cursorL = cursor[L];\n            var cursorR = cursor[R];\n            if (cursorL.siblingDeleted)\n                cursorL.siblingDeleted(cursor.options, R);\n            if (cursorR.siblingDeleted)\n                cursorR.siblingDeleted(cursor.options, L);\n            cursor.parent.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n            return this;\n        };\n        Controller_keystroke.prototype.ctrlDeleteDir = function (dir) {\n            prayDirection(dir);\n            var cursor = this.cursor;\n            if (!cursor[dir] || cursor.selection)\n                return this.deleteDir(dir);\n            this.notify('edit');\n            var fragRemoved;\n            if (dir === L) {\n                fragRemoved = new Fragment(cursor.parent.getEnd(L), cursor[L]);\n            }\n            else {\n                fragRemoved = new Fragment(cursor[R], cursor.parent.getEnd(R));\n            }\n            cursor.controller.aria.queue(fragRemoved);\n            fragRemoved.remove();\n            cursor.insAtDirEnd(dir, cursor.parent);\n            var cursorL = cursor[L];\n            var cursorR = cursor[R];\n            if (cursorL)\n                cursorL.siblingDeleted(cursor.options, R);\n            if (cursorR)\n                cursorR.siblingDeleted(cursor.options, L);\n            cursor.parent.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n            return this;\n        };\n        Controller_keystroke.prototype.backspace = function () {\n            return this.deleteDir(L);\n        };\n        Controller_keystroke.prototype.deleteForward = function () {\n            return this.deleteDir(R);\n        };\n        /**\n         * startIncrementalSelection, selectDirIncremental, and finishIncrementalSelection\n         * should only be called by withIncrementalSelection because they must\n         * be called in sequence.\n         */\n        Controller_keystroke.prototype.startIncrementalSelection = function () {\n            pray(\"Multiple selections can't be simultaneously open\", !INCREMENTAL_SELECTION_OPEN);\n            INCREMENTAL_SELECTION_OPEN = true;\n            this.notify('select');\n            var cursor = this.cursor;\n            if (!cursor.anticursor)\n                cursor.startSelection();\n        };\n        /**\n         * Update the selection model, stored in cursor, without modifying\n         * selection DOM.\n         *\n         * startIncrementalSelection, selectDirIncremental, and finishIncrementalSelection\n         * should only be called by withIncrementalSelection because they must\n         * be called in sequence.\n         */\n        Controller_keystroke.prototype.selectDirIncremental = function (dir) {\n            pray('A selection is open', INCREMENTAL_SELECTION_OPEN);\n            INCREMENTAL_SELECTION_OPEN = true;\n            var cursor = this.cursor, seln = cursor.selection;\n            prayDirection(dir);\n            var node = cursor[dir];\n            if (node) {\n                // \"if node we're selecting towards is inside selection (hence retracting)\n                // and is on the *far side* of the selection (hence is only node selected)\n                // and the anticursor is *inside* that node, not just on the other side\"\n                if (seln &&\n                    seln.getEnd(dir) === node &&\n                    cursor.anticursor[-dir] !== node) {\n                    node.unselectInto(dir, cursor);\n                }\n                else\n                    node.selectTowards(dir, cursor);\n            }\n            else\n                cursor.parent.selectOutOf(dir, cursor);\n        };\n        /**\n         * Update selection DOM to match cursor model\n         *\n         * startIncrementalSelection, selectDirIncremental, and finishIncrementalSelection\n         * should only be called by withIncrementalSelection because they must\n         * be called in sequence.\n         */\n        Controller_keystroke.prototype.finishIncrementalSelection = function () {\n            pray('A selection is open', INCREMENTAL_SELECTION_OPEN);\n            var cursor = this.cursor;\n            cursor.clearSelection();\n            cursor.select() || cursor.show();\n            var selection = cursor.selection;\n            if (selection) {\n                cursor.controller.aria\n                    .clear()\n                    .queue(selection.join('mathspeak', ' ').trim() + ' selected'); // clearing first because selection fires several times, and we don't want repeated speech.\n            }\n            INCREMENTAL_SELECTION_OPEN = false;\n        };\n        /**\n         * Used to build a selection incrementally in a loop. Calls the passed\n         * callback with a selectDir function that may be called many times,\n         * and defers updating the view until the incremental selection is\n         * complete\n         *\n         * Wraps up calling\n         *\n         *     this.startSelection()\n         *     this.selectDirIncremental(dir) // possibly many times\n         *     this.finishSelection()\n         *\n         * with extra error handling and invariant enforcement\n         */\n        Controller_keystroke.prototype.withIncrementalSelection = function (cb) {\n            var _this_1 = this;\n            try {\n                this.startIncrementalSelection();\n                try {\n                    cb(function (dir) { return _this_1.selectDirIncremental(dir); });\n                }\n                finally {\n                    // Since we have started a selection, attempt to finish it even\n                    // if the callback throws an error\n                    this.finishIncrementalSelection();\n                }\n            }\n            finally {\n                // Mark selection as closed even if finishSelection throws an\n                // error. Makes a possible error in finishSelection more\n                // recoverable\n                INCREMENTAL_SELECTION_OPEN = false;\n            }\n        };\n        /**\n         * Grow selection one unit in the given direction\n         *\n         * Note, this should not be called in a loop. To incrementally grow a\n         * selection, use withIncrementalSelection\n         */\n        Controller_keystroke.prototype.selectDir = function (dir) {\n            this.withIncrementalSelection(function (selectDir) { return selectDir(dir); });\n        };\n        Controller_keystroke.prototype.selectLeft = function () {\n            return this.selectDir(L);\n        };\n        Controller_keystroke.prototype.selectRight = function () {\n            return this.selectDir(R);\n        };\n        Controller_keystroke.prototype.selectAll = function () {\n            this.notify('move');\n            var cursor = this.cursor;\n            cursor.insAtRightEnd(this.root);\n            this.withIncrementalSelection(function (selectDir) {\n                while (cursor[L])\n                    selectDir(L);\n            });\n        };\n        Controller_keystroke.prototype.selectToBlockEndInDir = function (dir) {\n            var cursor = this.cursor;\n            this.withIncrementalSelection(function (selectDir) {\n                while (cursor[dir])\n                    selectDir(dir);\n            });\n        };\n        Controller_keystroke.prototype.selectToRootEndInDir = function (dir) {\n            var _this_1 = this;\n            var cursor = this.cursor;\n            this.withIncrementalSelection(function (selectDir) {\n                while (cursor[dir] || cursor.parent !== _this_1.root) {\n                    selectDir(dir);\n                }\n            });\n        };\n        return Controller_keystroke;\n    }(Controller_focusBlur));\n    var TempSingleCharNode = /** @class */ (function (_super) {\n        __extends(TempSingleCharNode, _super);\n        function TempSingleCharNode(_char) {\n            return _super.call(this) || this;\n        }\n        return TempSingleCharNode;\n    }(MQNode));\n    // Parser MathBlock\n    var latexMathParser = (function () {\n        function commandToBlock(cmd) {\n            // can also take in a Fragment\n            var block = new MathBlock();\n            cmd.adopt(block, 0, 0);\n            return block;\n        }\n        function joinBlocks(blocks) {\n            var firstBlock = blocks[0] || new MathBlock();\n            for (var i = 1; i < blocks.length; i += 1) {\n                blocks[i].children().adopt(firstBlock, firstBlock.getEnd(R), 0);\n            }\n            return firstBlock;\n        }\n        var string = Parser.string;\n        var regex = Parser.regex;\n        var letter = Parser.letter;\n        var digit = Parser.digit;\n        var any = Parser.any;\n        var optWhitespace = Parser.optWhitespace;\n        var succeed = Parser.succeed;\n        var fail = Parser.fail;\n        // Parsers yielding either MathCommands, or Fragments of MathCommands\n        //   (either way, something that can be adopted by a MathBlock)\n        var variable = letter.map(function (c) {\n            return new Letter(c);\n        });\n        var number = digit.map(function (c) {\n            return new Digit(c);\n        });\n        var symbol = regex(/^[^${}\\\\_^]/).map(function (c) {\n            return new VanillaSymbol(c);\n        });\n        var controlSequence = regex(/^[^\\\\a-eg-zA-Z]/) // hotfix #164; match MathBlock::write\n            .or(string('\\\\').then(regex(/^[a-z]+/i)\n            .or(regex(/^\\s+/).result(' '))\n            .or(any)))\n            .then(function (ctrlSeq) {\n            // TODO - is Parser<MQNode> correct?\n            var cmdKlass = LatexCmds[ctrlSeq];\n            if (cmdKlass) {\n                if (cmdKlass.constructor) {\n                    var actualClass = cmdKlass; // TODO - figure out how to know the difference\n                    return new actualClass(ctrlSeq).parser();\n                }\n                else {\n                    var builder = cmdKlass; // TODO - figure out how to know the difference\n                    return builder(ctrlSeq).parser();\n                }\n            }\n            else {\n                return fail('unknown command: \\\\' + ctrlSeq);\n            }\n        });\n        var command = controlSequence.or(variable).or(number).or(symbol);\n        // Parsers yielding MathBlocks\n        var mathGroup = string('{')\n            .then(function () {\n            return mathSequence;\n        })\n            .skip(string('}'));\n        var mathBlock = optWhitespace.then(mathGroup.or(command.map(commandToBlock)));\n        var mathSequence = mathBlock.many().map(joinBlocks).skip(optWhitespace);\n        var optMathBlock = string('[')\n            .then(mathBlock\n            .then(function (block) {\n            return block.join('latex') !== ']' ? succeed(block) : fail('');\n        })\n            .many()\n            .map(joinBlocks)\n            .skip(optWhitespace))\n            .skip(string(']'));\n        var latexMath = mathSequence;\n        latexMath.block = mathBlock;\n        latexMath.optBlock = optMathBlock;\n        return latexMath;\n    })();\n    baseOptionProcessors.maxDepth = function (depth) {\n        return typeof depth === 'number' ? depth : undefined;\n    };\n    var Controller_latex = /** @class */ (function (_super) {\n        __extends(Controller_latex, _super);\n        function Controller_latex() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Controller_latex.prototype.cleanLatex = function (latex) {\n            //prune unnecessary spaces\n            return latex.replace(/(\\\\[a-z]+) (?![a-z])/gi, '$1');\n        };\n        Controller_latex.prototype.exportLatex = function () {\n            return this.cleanLatex(this.root.latex());\n        };\n        Controller_latex.prototype.writeLatex = function (latex) {\n            var cursor = this.notify('edit').cursor;\n            cursor.parent.writeLatex(cursor, latex);\n            return this;\n        };\n        Controller_latex.prototype.exportLatexSelection = function () {\n            var ctx = {\n                latex: '',\n                startIndex: -1,\n                endIndex: -1,\n            };\n            var selection = this.cursor.selection;\n            if (selection) {\n                ctx.startSelectionBefore = selection.getEnd(L);\n                ctx.endSelectionAfter = selection.getEnd(R);\n            }\n            else {\n                var cursorL = this.cursor[L];\n                if (cursorL) {\n                    ctx.startSelectionAfter = cursorL;\n                }\n                else {\n                    ctx.startSelectionBefore = this.cursor.parent;\n                }\n                var cursorR = this.cursor[R];\n                if (cursorR) {\n                    ctx.endSelectionBefore = cursorR;\n                }\n                else {\n                    ctx.endSelectionAfter = this.cursor.parent;\n                }\n            }\n            this.root.latexRecursive(ctx);\n            // need to clean the latex\n            var originalLatex = ctx.latex;\n            var cleanLatex = this.cleanLatex(originalLatex);\n            var startIndex = ctx.startIndex;\n            var endIndex = ctx.endIndex;\n            // assumes that the cleaning process will only remove characters. We\n            // run through the originalLatex and cleanLatex to find differences.\n            // when we find differences we see how many characters are dropped until\n            // we sync back up. While detecting missing characters we decrement the\n            // startIndex and endIndex if appropriate.\n            var j = 0;\n            for (var i = 0; i < ctx.endIndex; i++) {\n                if (originalLatex[i] !== cleanLatex[j]) {\n                    if (i < ctx.startIndex) {\n                        startIndex -= 1;\n                    }\n                    endIndex -= 1;\n                    // do not increment j. We wan to keep looking at this same\n                    // cleanLatex character until we find it in the originalLatex\n                }\n                else {\n                    j += 1; //move to next cleanLatex character\n                }\n            }\n            return {\n                latex: cleanLatex,\n                startIndex: startIndex,\n                endIndex: endIndex,\n            };\n        };\n        Controller_latex.prototype.classifyLatexForEfficientUpdate = function (latex) {\n            if (typeof latex !== 'string')\n                return;\n            var matches = latex.match(/-?[0-9.]+$/g);\n            if (matches && matches.length === 1) {\n                return {\n                    latex: latex,\n                    prefix: latex.substr(0, latex.length - matches[0].length),\n                    digits: matches[0],\n                };\n            }\n            return;\n        };\n        Controller_latex.prototype.updateLatexMathEfficiently = function (latex, oldLatex) {\n            var _c, _d, _e, _f;\n            // Note, benchmark/update.html is useful for measuring the\n            // performance of renderLatexMathEfficiently\n            var root = this.root;\n            var oldClassification;\n            var classification = this.classifyLatexForEfficientUpdate(latex);\n            if (classification) {\n                oldClassification = this.classifyLatexForEfficientUpdate(oldLatex);\n                if (!oldClassification ||\n                    oldClassification.prefix !== classification.prefix) {\n                    return false;\n                }\n            }\n            else {\n                return false;\n            }\n            // check if minus sign is changing\n            var oldDigits = oldClassification.digits;\n            var newDigits = classification.digits;\n            var oldMinusSign = false;\n            var newMinusSign = false;\n            if (oldDigits[0] === '-') {\n                oldMinusSign = true;\n                oldDigits = oldDigits.substr(1);\n            }\n            if (newDigits[0] === '-') {\n                newMinusSign = true;\n                newDigits = newDigits.substr(1);\n            }\n            // start at the very end\n            var charNode = this.root.getEnd(R);\n            var oldCharNodes = [];\n            for (var i = oldDigits.length - 1; i >= 0; i--) {\n                // the tree does not match what we expect\n                if (!charNode || charNode.ctrlSeq !== oldDigits[i]) {\n                    return false;\n                }\n                // the trailing digits are not just under the root. We require the root\n                // to be the parent so that we can be sure we do not need a reflow to\n                // grow parens.\n                if (charNode.parent !== root) {\n                    return false;\n                }\n                // push to the start. We're traversing backwards\n                oldCharNodes.unshift(charNode);\n                // move left one character\n                charNode = charNode[L];\n            }\n            // remove the minus sign\n            if (oldMinusSign && !newMinusSign) {\n                var oldMinusNode = charNode;\n                if (!oldMinusNode)\n                    return false;\n                if (oldMinusNode.ctrlSeq !== '-')\n                    return false;\n                if (oldMinusNode[R] !== oldCharNodes[0])\n                    return false;\n                if (oldMinusNode.parent !== root)\n                    return false;\n                var oldMinusNodeL = oldMinusNode[L];\n                if (oldMinusNodeL && oldMinusNodeL.parent !== root)\n                    return false;\n                oldCharNodes[0][L] = oldMinusNode[L];\n                if (root.getEnd(L) === oldMinusNode) {\n                    root.setEnds((_c = {}, _c[L] = oldCharNodes[0], _c[R] = root.getEnd(R), _c));\n                }\n                if (oldMinusNodeL)\n                    oldMinusNodeL[R] = oldCharNodes[0];\n                oldMinusNode.domFrag().remove();\n            }\n            // add a minus sign\n            if (!oldMinusSign && newMinusSign) {\n                var newMinusNode = new PlusMinus('-');\n                var minusSpan = document.createElement('span');\n                minusSpan.textContent = '-';\n                newMinusNode.setDOM(minusSpan);\n                var oldCharNodes0L = oldCharNodes[0][L];\n                if (oldCharNodes0L)\n                    oldCharNodes0L[R] = newMinusNode;\n                if (root.getEnd(L) === oldCharNodes[0]) {\n                    root.setEnds((_d = {}, _d[L] = newMinusNode, _d[R] = root.getEnd(R), _d));\n                }\n                newMinusNode.parent = root;\n                newMinusNode[L] = oldCharNodes[0][L];\n                newMinusNode[R] = oldCharNodes[0];\n                oldCharNodes[0][L] = newMinusNode;\n                newMinusNode.contactWeld(this.cursor); // decide if binary operator\n                newMinusNode.domFrag().insertBefore(oldCharNodes[0].domFrag());\n            }\n            // update the text of the current nodes\n            var commonLength = Math.min(oldDigits.length, newDigits.length);\n            for (i = 0; i < commonLength; i++) {\n                var newText = newDigits[i];\n                charNode = oldCharNodes[i];\n                if (charNode.ctrlSeq !== newText) {\n                    charNode.ctrlSeq = newText;\n                    charNode.domFrag().oneElement().textContent = newText;\n                    charNode.mathspeakName = newText;\n                }\n            }\n            // remove the extra digits at the end\n            if (oldDigits.length > newDigits.length) {\n                charNode = oldCharNodes[newDigits.length - 1];\n                root.setEnds((_e = {}, _e[L] = root.getEnd(L), _e[R] = charNode, _e));\n                charNode[R] = 0;\n                for (i = oldDigits.length - 1; i >= commonLength; i--) {\n                    oldCharNodes[i].domFrag().remove();\n                }\n            }\n            // add new digits after the existing ones\n            if (newDigits.length > oldDigits.length) {\n                var frag = document.createDocumentFragment();\n                for (i = commonLength; i < newDigits.length; i++) {\n                    var span = document.createElement('span');\n                    span.className = 'mq-digit';\n                    span.textContent = newDigits[i];\n                    var newNode = new Digit(newDigits[i]);\n                    newNode.parent = root;\n                    newNode.setDOM(span);\n                    frag.appendChild(span);\n                    // splice this node in\n                    newNode[L] = root.getEnd(R);\n                    newNode[R] = 0;\n                    var newNodeL = newNode[L];\n                    newNodeL[R] = newNode;\n                    root.setEnds((_f = {}, _f[L] = root.getEnd(L), _f[R] = newNode, _f));\n                }\n                root.domFrag().oneElement().appendChild(frag);\n            }\n            var currentLatex = this.exportLatex();\n            if (currentLatex !== latex) {\n                console.warn('tried updating latex efficiently but did not work. Attempted: ' +\n                    latex +\n                    ' but wrote: ' +\n                    currentLatex);\n                return false;\n            }\n            var rightMost = root.getEnd(R);\n            if (rightMost) {\n                rightMost.fixDigitGrouping(this.cursor.options);\n            }\n            return true;\n        };\n        Controller_latex.prototype.renderLatexMathFromScratch = function (latex) {\n            var _c;\n            var root = this.root, cursor = this.cursor;\n            var all = Parser.all;\n            var eof = Parser.eof;\n            var block = latexMathParser\n                .skip(eof)\n                .or(all.result(false))\n                .parse(latex);\n            root.setEnds((_c = {}, _c[L] = 0, _c[R] = 0, _c));\n            if (block) {\n                block.children().adopt(root, 0, 0);\n            }\n            if (block) {\n                var frag = root.domFrag();\n                frag.children().remove();\n                frag.oneElement().appendChild(block.html());\n                root.finalizeInsert(cursor.options, cursor);\n            }\n            else {\n                root.domFrag().empty();\n            }\n        };\n        Controller_latex.prototype.renderLatexMath = function (latex) {\n            var cursor = this.cursor;\n            var root = this.root;\n            this.notify('replace');\n            cursor.clearSelection();\n            var oldLatex = this.exportLatex();\n            if (!root.getEnd(L) || !root.getEnd(R) || oldLatex !== latex) {\n                this.updateLatexMathEfficiently(latex, oldLatex) ||\n                    this.renderLatexMathFromScratch(latex);\n                this.updateMathspeak();\n            }\n            cursor.insAtRightEnd(root);\n        };\n        Controller_latex.prototype.renderLatexText = function (latex) {\n            var _c;\n            var root = this.root, cursor = this.cursor;\n            root.domFrag().children().slice(1).remove();\n            root.setEnds((_c = {}, _c[L] = 0, _c[R] = 0, _c));\n            delete cursor.selection;\n            cursor.show().insAtRightEnd(root);\n            var regex = Parser.regex;\n            var string = Parser.string;\n            var eof = Parser.eof;\n            var all = Parser.all;\n            // Parser RootMathCommand\n            var mathMode = string('$')\n                .then(latexMathParser)\n                // because TeX is insane, math mode doesn't necessarily\n                // have to end.  So we allow for the case that math mode\n                // continues to the end of the stream.\n                .skip(string('$').or(eof))\n                .map(function (block) {\n                // HACK FIXME: this shouldn't have to have access to cursor\n                var rootMathCommand = new RootMathCommand(cursor);\n                rootMathCommand.createBlocks();\n                var rootMathBlock = rootMathCommand.getEnd(L);\n                block.children().adopt(rootMathBlock, 0, 0);\n                return rootMathCommand;\n            });\n            var escapedDollar = string('\\\\$').result('$');\n            var textChar = escapedDollar\n                .or(regex(/^[^$]/))\n                .map(function (ch) { return new VanillaSymbol(ch); });\n            var latexText = mathMode.or(textChar).many();\n            var commands = latexText\n                .skip(eof)\n                .or(all.result(false))\n                .parse(latex);\n            if (commands) {\n                for (var i = 0; i < commands.length; i += 1) {\n                    commands[i].adopt(root, root.getEnd(R), 0);\n                }\n                domFrag(root.html()).appendTo(root.domFrag().oneElement());\n                root.finalizeInsert(cursor.options, cursor);\n            }\n        };\n        return Controller_latex;\n    }(Controller_keystroke));\n    /********************************************************\n     * Deals with mouse events for clicking, drag-to-select\n     *******************************************************/\n    var ignoreNextMouseDownNoop = function (_el) {\n        return false;\n    };\n    Options.prototype.ignoreNextMousedown = ignoreNextMouseDownNoop;\n    // Whenever edits to the tree occur, in-progress selection events\n    // must be invalidated and selection changes must not be applied to\n    // the edited tree. cancelSelectionOnEdit takes care of this.\n    var cancelSelectionOnEdit;\n    (function () {\n        ControllerBase.onNotify(function (cursor, e) {\n            if (e === 'edit' || e === 'replace') {\n                // this will be called any time ANY mathquill is edited. We only want\n                // to cancel selection if the selection is happening within the mathquill\n                // that dispatched the notify. Otherwise you won't be able to select any\n                // mathquills while a slider is playing.\n                if (cancelSelectionOnEdit && cancelSelectionOnEdit.cursor === cursor) {\n                    cancelSelectionOnEdit.cb();\n                }\n            }\n        });\n    })();\n    var Controller_mouse = /** @class */ (function (_super) {\n        __extends(Controller_mouse, _super);\n        function Controller_mouse() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.handleMouseDown = function (e) {\n                var rootElement = closest(e.target, '.mq-root-block');\n                var root = ((rootElement && NodeBase.getNodeOfElement(rootElement)) ||\n                    NodeBase.getNodeOfElement(_this_1.root.domFrag().oneElement()));\n                var ownerDocument = root.domFrag().firstNode().ownerDocument;\n                var ctrlr = root.controller, cursor = ctrlr.cursor, blink = cursor.blink;\n                var textareaSpan = ctrlr.getTextareaSpanOrThrow();\n                var textarea = ctrlr.getTextareaOrThrow();\n                e.preventDefault(); // doesn't work in IE\\u22648, but it's a one-line fix:\n                e.target.unselectable = true; // http://jsbin.com/yagekiji/1 // TODO - no idea what this unselectable property is\n                if (cursor.options.ignoreNextMousedown(e))\n                    return;\n                else\n                    cursor.options.ignoreNextMousedown = ignoreNextMouseDownNoop;\n                // some elements should not act like internal mathquill nodes. Tokens for instance define external\n                // click / hover behaviors. So we have mathquill act like the item was never clicked. This allows\n                // us to click a token without putting focus in the mathquill.\n                if (closest(e.target, '.mq-ignore-mousedown')) {\n                    return;\n                }\n                var lastMousemoveTarget = null;\n                function mousemove(e) {\n                    lastMousemoveTarget = e.target;\n                }\n                function onDocumentMouseMove(e) {\n                    if (!cursor.anticursor)\n                        cursor.startSelection();\n                    ctrlr.seek(lastMousemoveTarget, e.clientX, e.clientY).cursor.select();\n                    if (cursor.selection)\n                        cursor.controller.aria\n                            .clear()\n                            .queue(cursor.selection.join('mathspeak') + ' selected')\n                            .alert();\n                    lastMousemoveTarget = null;\n                }\n                // outside rootElement, the MathQuill node corresponding to the target (if any)\n                // won't be inside this root, so don't mislead Controller::seek with it\n                function unbindListeners() {\n                    // delete the mouse handlers now that we're not dragging anymore\n                    rootElement === null || rootElement === void 0 ? void 0 : rootElement.removeEventListener('mousemove', mousemove);\n                    ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.removeEventListener('mousemove', onDocumentMouseMove);\n                    ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.removeEventListener('mouseup', onDocumentMouseUp);\n                    cancelSelectionOnEdit = undefined;\n                }\n                function updateCursor() {\n                    if (ctrlr.editable) {\n                        cursor.show();\n                        cursor.controller.aria.queue(cursor.parent).alert();\n                    }\n                    else {\n                        domFrag(textareaSpan).detach();\n                    }\n                }\n                function onDocumentMouseUp() {\n                    cursor.blink = blink;\n                    if (!cursor.selection)\n                        updateCursor();\n                    unbindListeners();\n                }\n                var wasEdited;\n                cancelSelectionOnEdit = {\n                    cursor: cursor,\n                    cb: function () {\n                        // If an edit happens while the mouse is down, the existing\n                        // selection is no longer valid. Clear it and unbind listeners,\n                        // similar to what happens on mouseup.\n                        wasEdited = true;\n                        cursor.blink = blink;\n                        cursor.clearSelection();\n                        updateCursor();\n                        unbindListeners();\n                    },\n                };\n                if (ctrlr.blurred) {\n                    if (rootElement && !ctrlr.editable) {\n                        domFrag(rootElement).prepend(domFrag(textareaSpan));\n                    }\n                    textarea.focus();\n                    // focus call may bubble to clients, who may then write to\n                    // mathquill, triggering cancelSelectionOnEdit. If that happens, we\n                    // don't want to stop the cursor blink or bind listeners,\n                    // so return early.\n                    if (wasEdited)\n                        return;\n                }\n                cursor.blink = noop;\n                ctrlr\n                    .seek(e.target, e.clientX, e.clientY)\n                    .cursor.startSelection();\n                rootElement === null || rootElement === void 0 ? void 0 : rootElement.addEventListener('mousemove', mousemove);\n                ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.addEventListener('mousemove', onDocumentMouseMove);\n                ownerDocument === null || ownerDocument === void 0 ? void 0 : ownerDocument.addEventListener('mouseup', onDocumentMouseUp);\n                // listen on document not just body to not only hear about mousemove and\n                // mouseup on page outside field, but even outside page, except iframes: https://github.com/mathquill/mathquill/commit/8c50028afcffcace655d8ae2049f6e02482346c5#commitcomment-6175800\n            };\n            return _this_1;\n        }\n        Controller_mouse.prototype.addMouseEventListener = function () {\n            //drag-to-select event handling\n            this.container.addEventListener('mousedown', this.handleMouseDown);\n        };\n        Controller_mouse.prototype.removeMouseEventListener = function () {\n            this.container.removeEventListener('mousedown', this.handleMouseDown);\n        };\n        Controller_mouse.prototype.seek = function (targetElm, clientX, _clientY) {\n            var cursor = this.notify('select').cursor;\n            var node;\n            // we can click on an element that is deeply nested past the point\n            // that mathquill knows about. We need to traverse up to the first\n            // node that mathquill is aware of\n            while (targetElm) {\n                // try to find the MQ Node associated with the DOM Element\n                node = NodeBase.getNodeOfElement(targetElm);\n                if (node)\n                    break;\n                // must be too deep, traverse up to the parent DOM Element\n                targetElm = targetElm.parentElement;\n            }\n            // Could not find any nodes, just use the root\n            if (!node) {\n                node = this.root;\n            }\n            // don't clear selection until after getting node from target, in case\n            // target was selection span, otherwise target will have no parent and will\n            // seek from root, which is less accurate (e.g. fraction)\n            cursor.clearSelection().show();\n            node.seek(clientX, cursor);\n            this.scrollHoriz(); // before .selectFrom when mouse-selecting, so\n            // always hits no-selection case in scrollHoriz and scrolls slower\n            return this;\n        };\n        return Controller_mouse;\n    }(Controller_latex));\n    /***********************************************\n     * Horizontal panning for editable fields that\n     * overflow their width\n     **********************************************/\n    var Controller_scrollHoriz = /** @class */ (function (_super) {\n        __extends(Controller_scrollHoriz, _super);\n        function Controller_scrollHoriz() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Controller_scrollHoriz.prototype.setOverflowClasses = function () {\n            var root = this.root.domFrag().oneElement();\n            var shouldHaveOverflowRight = false;\n            var shouldHaveOverflowLeft = false;\n            if (!this.blurred) {\n                var width = getBoundingClientRect(root).width;\n                var scrollWidth = root.scrollWidth;\n                var scroll = root.scrollLeft;\n                shouldHaveOverflowRight = scrollWidth > width + scroll;\n                shouldHaveOverflowLeft = scroll > 0;\n            }\n            if (root.classList.contains('mq-editing-overflow-right') !==\n                shouldHaveOverflowRight)\n                root.classList.toggle('mq-editing-overflow-right');\n            if (root.classList.contains('mq-editing-overflow-left') !==\n                shouldHaveOverflowLeft)\n                root.classList.toggle('mq-editing-overflow-left');\n        };\n        Controller_scrollHoriz.prototype.scrollHoriz = function () {\n            var _this_1 = this;\n            var cursor = this.cursor, seln = cursor.selection;\n            var rootRect = getBoundingClientRect(this.root.domFrag().oneElement());\n            if (cursor.domFrag().isEmpty() && !seln) {\n                if (this.cancelScrollHoriz) {\n                    this.cancelScrollHoriz();\n                    this.cancelScrollHoriz = undefined;\n                }\n                var rootElt_1 = this.root.domFrag().oneElement();\n                var start_1 = rootElt_1.scrollLeft;\n                animate(this.getScrollAnimationDuration(), function (progress, scheduleNext, cancel) {\n                    if (progress >= 1) {\n                        _this_1.cancelScrollHoriz = undefined;\n                        rootElt_1.scrollLeft = 0;\n                        _this_1.setOverflowClasses();\n                    }\n                    else {\n                        _this_1.cancelScrollHoriz = cancel;\n                        scheduleNext();\n                        rootElt_1.scrollLeft = Math.round((1 - progress) * start_1);\n                    }\n                });\n                return;\n            }\n            else if (!seln) {\n                var x = getBoundingClientRect(cursor.domFrag().oneElement()).left;\n                if (x > rootRect.right - 20)\n                    var scrollBy = x - (rootRect.right - 20);\n                else if (x < rootRect.left + 20)\n                    var scrollBy = x - (rootRect.left + 20);\n                else\n                    return;\n            }\n            else {\n                var rect = getBoundingClientRect(seln.domFrag().oneElement());\n                var overLeft = rect.left - (rootRect.left + 20);\n                var overRight = rect.right - (rootRect.right - 20);\n                if (seln.getEnd(L) === cursor[R]) {\n                    if (overLeft < 0)\n                        var scrollBy = overLeft;\n                    else if (overRight > 0) {\n                        if (rect.left - overRight < rootRect.left + 20)\n                            var scrollBy = overLeft;\n                        else\n                            var scrollBy = overRight;\n                    }\n                    else\n                        return;\n                }\n                else {\n                    if (overRight > 0)\n                        var scrollBy = overRight;\n                    else if (overLeft < 0) {\n                        if (rect.right - overLeft > rootRect.right - 20)\n                            var scrollBy = overRight;\n                        else\n                            var scrollBy = overLeft;\n                    }\n                    else\n                        return;\n                }\n            }\n            var root = this.root.domFrag().oneElement();\n            if (scrollBy < 0 && root.scrollLeft === 0)\n                return;\n            if (scrollBy > 0 && root.scrollWidth <= root.scrollLeft + rootRect.width)\n                return;\n            if (this.cancelScrollHoriz) {\n                this.cancelScrollHoriz();\n                this.cancelScrollHoriz = undefined;\n            }\n            var rootElt = this.root.domFrag().oneElement();\n            var start = rootElt.scrollLeft;\n            animate(this.getScrollAnimationDuration(), function (progress, scheduleNext, cancel) {\n                if (progress >= 1) {\n                    _this_1.cancelScrollHoriz = undefined;\n                    rootElt.scrollLeft = Math.round(start + scrollBy);\n                    _this_1.setOverflowClasses();\n                }\n                else {\n                    _this_1.cancelScrollHoriz = cancel;\n                    scheduleNext();\n                    rootElt.scrollLeft = Math.round(start + progress * scrollBy);\n                }\n            });\n        };\n        Controller_scrollHoriz.prototype.getScrollAnimationDuration = function () {\n            var _c;\n            return (_c = this.options.scrollAnimationDuration) !== null && _c !== void 0 ? _c : 100;\n        };\n        return Controller_scrollHoriz;\n    }(Controller_mouse));\n    /*********************************************\n     * Manage the MathQuill instance's textarea\n     * (as owned by the Controller)\n     ********************************************/\n    Options.prototype.substituteTextarea = function () {\n        return h('textarea', {\n            autocapitalize: 'off',\n            autocomplete: 'off',\n            autocorrect: 'off',\n            spellcheck: false,\n            'x-palm-disable-ste-all': true,\n        });\n    };\n    function defaultSubstituteKeyboardEvents(jq, controller) {\n        return saneKeyboardEvents(jq[0], controller);\n    }\n    Options.prototype.substituteKeyboardEvents = defaultSubstituteKeyboardEvents;\n    var Controller = /** @class */ (function (_super) {\n        __extends(Controller, _super);\n        function Controller() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.selectFn = noop;\n            return _this_1;\n        }\n        Controller.prototype.createTextarea = function () {\n            this.textareaSpan = h('span', { class: 'mq-textarea' });\n            var textarea = this.options.substituteTextarea();\n            if (!textarea.nodeType) {\n                throw 'substituteTextarea() must return a DOM element, got ' + textarea;\n            }\n            this.textarea = domFrag(textarea)\n                .appendTo(this.textareaSpan)\n                .oneElement();\n            var ctrlr = this;\n            ctrlr.cursor.selectionChanged = function () {\n                ctrlr.selectionChanged();\n            };\n        };\n        Controller.prototype.selectionChanged = function () {\n            var ctrlr = this;\n            // throttle calls to setTextareaSelection(), because setting textarea.value\n            // and/or calling textarea.select() can have anomalously bad performance:\n            // https://github.com/mathquill/mathquill/issues/43#issuecomment-1399080\n            //\n            // Note, this timeout may be cleared by the blur handler in focusBlur.js\n            if (!ctrlr.textareaSelectionTimeout) {\n                ctrlr.textareaSelectionTimeout = setTimeout(function () {\n                    ctrlr.setTextareaSelection();\n                });\n            }\n        };\n        Controller.prototype.setTextareaSelection = function () {\n            this.textareaSelectionTimeout = 0;\n            var latex = '';\n            if (this.cursor.selection) {\n                //cleanLatex prunes unnecessary spaces. defined in latex.js\n                latex = this.cleanLatex(this.cursor.selection.join('latex'));\n                if (this.options.statelessClipboard) {\n                    // FIXME: like paste, only this works for math fields; should ask parent\n                    latex = '$' + latex + '$';\n                }\n            }\n            this.selectFn(latex);\n        };\n        Controller.prototype.staticMathTextareaEvents = function () {\n            var ctrlr = this;\n            this.removeTextareaEventListener('cut');\n            this.removeTextareaEventListener('paste');\n            if (ctrlr.options.disableCopyPaste) {\n                this.removeTextareaEventListener('copy');\n            }\n            else {\n                this.addTextareaEventListeners({\n                    copy: function () {\n                        ctrlr.setTextareaSelection();\n                    },\n                });\n            }\n            this.addStaticFocusBlurListeners();\n            ctrlr.selectFn = function (text) {\n                var textarea = ctrlr.getTextareaOrThrow();\n                if (!(textarea instanceof HTMLTextAreaElement))\n                    return;\n                textarea.value = text;\n                if (text)\n                    textarea.select();\n            };\n        };\n        Controller.prototype.editablesTextareaEvents = function () {\n            var ctrlr = this;\n            var textarea = ctrlr.getTextareaOrThrow();\n            var textareaSpan = ctrlr.getTextareaSpanOrThrow();\n            if (this.options.version < 3) {\n                var $ = this.options.assertJquery();\n                var keyboardEventsShim = this.options.substituteKeyboardEvents($(textarea), this);\n                this.selectFn = function (text) {\n                    keyboardEventsShim.select(text);\n                };\n            }\n            else {\n                var select = saneKeyboardEvents(textarea, this).select;\n                this.selectFn = select;\n            }\n            domFrag(this.container).prepend(domFrag(textareaSpan));\n            this.addEditableFocusBlurListeners();\n            this.updateMathspeak();\n        };\n        Controller.prototype.unbindEditablesEvents = function () {\n            var ctrlr = this;\n            var textarea = ctrlr.getTextareaOrThrow();\n            var textareaSpan = ctrlr.getTextareaSpanOrThrow();\n            this.selectFn = function (text) {\n                if (!(textarea instanceof HTMLTextAreaElement))\n                    return;\n                textarea.value = text;\n                if (text)\n                    textarea.select();\n            };\n            domFrag(textareaSpan).remove();\n            this.removeTextareaEventListener('focus');\n            this.removeTextareaEventListener('blur');\n            ctrlr.blurred = true;\n            this.removeTextareaEventListener('cut');\n            this.removeTextareaEventListener('paste');\n        };\n        Controller.prototype.typedText = function (ch) {\n            if (ch === '\\n')\n                return this.handle('enter');\n            var cursor = this.notify(undefined).cursor;\n            cursor.parent.write(cursor, ch);\n            this.scrollHoriz();\n        };\n        Controller.prototype.cut = function () {\n            var ctrlr = this, cursor = ctrlr.cursor;\n            if (cursor.selection) {\n                setTimeout(function () {\n                    ctrlr.notify('edit'); // deletes selection if present\n                    cursor.parent.bubble(function (node) {\n                        node.reflow();\n                        return undefined;\n                    });\n                    if (ctrlr.options && ctrlr.options.onCut) {\n                        ctrlr.options.onCut();\n                    }\n                });\n            }\n        };\n        Controller.prototype.copy = function () {\n            this.setTextareaSelection();\n        };\n        Controller.prototype.paste = function (text) {\n            // TODO: document `statelessClipboard` config option in README, after\n            // making it work like it should, that is, in both text and math mode\n            // (currently only works in math fields, so worse than pointless, it\n            //  only gets in the way by \\text{}-ifying pasted stuff and $-ifying\n            //  cut/copied LaTeX)\n            if (this.options.statelessClipboard) {\n                if (text.slice(0, 1) === '$' && text.slice(-1) === '$') {\n                    text = text.slice(1, -1);\n                }\n                else {\n                    text = '\\\\text{' + text + '}';\n                }\n            }\n            // FIXME: this always inserts math or a TextBlock, even in a RootTextBlock\n            this.writeLatex(text).cursor.show();\n            this.scrollHoriz();\n            if (this.options && this.options.onPaste) {\n                this.options.onPaste();\n            }\n        };\n        /** Set up for a static MQ field (i.e., create and attach the mathspeak element and initialize the focus state to blurred) */\n        Controller.prototype.setupStaticField = function () {\n            this.mathspeakSpan = h('span', { class: 'mq-mathspeak' });\n            domFrag(this.container).prepend(domFrag(this.mathspeakSpan));\n            this.updateMathspeak();\n            this.blurred = true;\n            this.cursor.hide().parent.blur(this.cursor);\n        };\n        Controller.prototype.updateMathspeak = function () {\n            var ctrlr = this;\n            // If the controller's ARIA label doesn't end with a punctuation mark, add a colon by default to better separate it from mathspeak.\n            var ariaLabel = ctrlr.getAriaLabel();\n            var labelWithSuffix = /[A-Za-z0-9]$/.test(ariaLabel)\n                ? ariaLabel + ':'\n                : ariaLabel;\n            var mathspeak = ctrlr.root.mathspeak().trim();\n            this.aria.clear();\n            var textarea = ctrlr.getTextareaOrThrow();\n            // For static math, provide mathspeak in a visually hidden span to allow screen readers and other AT to traverse the content.\n            // For editable math, assign the mathspeak to the textarea's ARIA label (AT can use text navigation to interrogate the content).\n            // Be certain to include the mathspeak for only one of these, though, as we don't want to include outdated labels if a field's editable state changes.\n            // By design, also take careful note that the ariaPostLabel is meant to exist only for editable math (e.g. to serve as an evaluation or error message)\n            // so it is not included for static math mathspeak calculations.\n            // The mathspeakSpan should exist only for static math, so we use its presence to decide which approach to take.\n            if (!!ctrlr.mathspeakSpan) {\n                textarea.setAttribute('aria-label', '');\n                ctrlr.mathspeakSpan.textContent = (labelWithSuffix +\n                    ' ' +\n                    mathspeak).trim();\n            }\n            else {\n                textarea.setAttribute('aria-label', (labelWithSuffix + ' ' + mathspeak + ' ' + ctrlr.ariaPostLabel).trim());\n            }\n        };\n        return Controller;\n    }(Controller_scrollHoriz));\n    /*************************************************\n     * Abstract classes of math blocks and commands.\n     ************************************************/\n    /**\n     * Math tree node base class.\n     * Some math-tree-specific extensions to MQNode.\n     * Both MathBlock's and MathCommand's descend from it.\n     */\n    var MathElement = /** @class */ (function (_super) {\n        __extends(MathElement, _super);\n        function MathElement() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MathElement.prototype.finalizeInsert = function (options, cursor) {\n            var self = this;\n            self.postOrder(function (node) {\n                node.finalizeTree(options);\n            });\n            self.postOrder(function (node) {\n                node.contactWeld(cursor);\n            });\n            // note: this order is important.\n            // empty elements need the empty box provided by blur to\n            // be present in order for their dimensions to be measured\n            // correctly by 'reflow' handlers.\n            self.postOrder(function (node) {\n                node.blur(cursor);\n            });\n            self.postOrder(function (node) {\n                node.reflow();\n            });\n            var selfR = self[R];\n            var selfL = self[L];\n            if (selfR)\n                selfR.siblingCreated(options, L);\n            if (selfL)\n                selfL.siblingCreated(options, R);\n            self.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n        };\n        // If the maxDepth option is set, make sure\n        // deeply nested content is truncated. Just return\n        // false if the cursor is already too deep.\n        MathElement.prototype.prepareInsertionAt = function (cursor) {\n            var maxDepth = cursor.options.maxDepth;\n            if (maxDepth !== undefined) {\n                var cursorDepth = cursor.depth();\n                if (cursorDepth > maxDepth) {\n                    return false;\n                }\n                this.removeNodesDeeperThan(maxDepth - cursorDepth);\n            }\n            return true;\n        };\n        // Remove nodes that are more than `cutoff`\n        // blocks deep from this node.\n        MathElement.prototype.removeNodesDeeperThan = function (cutoff) {\n            var depth = 0;\n            var queue = [[this, depth]];\n            var current;\n            // Do a breadth-first search of this node's descendants\n            // down to cutoff, removing anything deeper.\n            while ((current = queue.shift())) {\n                var c = current;\n                c[0].children().each(function (child) {\n                    var i = child instanceof MathBlock ? 1 : 0;\n                    depth = c[1] + i;\n                    if (depth <= cutoff) {\n                        queue.push([child, depth]);\n                    }\n                    else {\n                        (i ? child.children() : child).remove();\n                    }\n                    return undefined;\n                });\n            }\n        };\n        return MathElement;\n    }(MQNode));\n    var DOMView = /** @class */ (function () {\n        function DOMView(childCount, render) {\n            this.childCount = childCount;\n            this.render = render;\n        }\n        return DOMView;\n    }());\n    /**\n     * Commands and operators, like subscripts, exponents, or fractions.\n     * Descendant commands are organized into blocks.\n     */\n    var MathCommand = /** @class */ (function (_super) {\n        __extends(MathCommand, _super);\n        function MathCommand(ctrlSeq, domView, textTemplate) {\n            var _this_1 = _super.call(this) || this;\n            _this_1.textTemplate = [''];\n            _this_1.mathspeakTemplate = [''];\n            _this_1.setCtrlSeqHtmlAndText(ctrlSeq, domView, textTemplate);\n            return _this_1;\n        }\n        MathCommand.prototype.setEnds = function (ends) {\n            pray('MathCommand ends are never empty', ends[L] && ends[R]);\n            this.ends = ends;\n        };\n        MathCommand.prototype.getEnd = function (dir) {\n            return this.ends[dir];\n        };\n        MathCommand.prototype.setCtrlSeqHtmlAndText = function (ctrlSeq, domView, textTemplate) {\n            if (!this.ctrlSeq)\n                this.ctrlSeq = ctrlSeq;\n            if (domView)\n                this.domView = domView;\n            if (textTemplate)\n                this.textTemplate = textTemplate;\n        };\n        // obvious methods\n        MathCommand.prototype.replaces = function (replacedFragment) {\n            replacedFragment.disown();\n            this.replacedFragment = replacedFragment;\n        };\n        MathCommand.prototype.isEmpty = function () {\n            return this.foldChildren(true, function (isEmpty, child) {\n                return isEmpty && child.isEmpty();\n            });\n        };\n        MathCommand.prototype.parser = function () {\n            var _this_1 = this;\n            var block = latexMathParser.block;\n            return block.times(this.numBlocks()).map(function (blocks) {\n                _this_1.blocks = blocks;\n                for (var i = 0; i < blocks.length; i += 1) {\n                    blocks[i].adopt(_this_1, _this_1.getEnd(R), 0);\n                }\n                return _this_1;\n            });\n        };\n        // createLeftOf(cursor) and the methods it calls\n        MathCommand.prototype.createLeftOf = function (cursor) {\n            var cmd = this;\n            var replacedFragment = cmd.replacedFragment;\n            cmd.createBlocks();\n            _super.prototype.createLeftOf.call(this, cursor);\n            if (replacedFragment) {\n                var cmdEndsL = cmd.getEnd(L);\n                replacedFragment.adopt(cmdEndsL, 0, 0);\n                replacedFragment.domFrag().appendTo(cmdEndsL.domFrag().oneElement());\n                cmd.placeCursor(cursor);\n                cmd.prepareInsertionAt(cursor);\n            }\n            cmd.finalizeInsert(cursor.options, cursor);\n            cmd.placeCursor(cursor);\n        };\n        MathCommand.prototype.createBlocks = function () {\n            var cmd = this, numBlocks = cmd.numBlocks(), blocks = (cmd.blocks = Array(numBlocks));\n            for (var i = 0; i < numBlocks; i += 1) {\n                var newBlock = (blocks[i] = new MathBlock());\n                newBlock.adopt(cmd, cmd.getEnd(R), 0);\n            }\n        };\n        MathCommand.prototype.placeCursor = function (cursor) {\n            //insert the cursor at the right end of the first empty child, searching\n            //left-to-right, or if none empty, the right end child\n            cursor.insAtRightEnd(this.foldChildren(this.getEnd(L), function (leftward, child) {\n                return leftward.isEmpty() ? leftward : child;\n            }));\n        };\n        // editability methods: called by the cursor for editing, cursor movements,\n        // and selection of the MathQuill tree, these all take in a direction and\n        // the cursor\n        MathCommand.prototype.moveTowards = function (dir, cursor, updown) {\n            var updownInto;\n            if (updown === 'up') {\n                updownInto = this.upInto;\n            }\n            else if (updown === 'down') {\n                updownInto = this.downInto;\n            }\n            var el = updownInto || this.getEnd(-dir);\n            cursor.insAtDirEnd(-dir, el);\n            cursor.controller.aria\n                .queueDirEndOf(-dir)\n                .queue(cursor.parent, true);\n        };\n        MathCommand.prototype.deleteTowards = function (dir, cursor) {\n            if (this.isEmpty())\n                cursor[dir] = this.remove()[dir];\n            else\n                this.moveTowards(dir, cursor);\n        };\n        MathCommand.prototype.selectTowards = function (dir, cursor) {\n            cursor[-dir] = this;\n            cursor[dir] = this[dir];\n        };\n        MathCommand.prototype.selectChildren = function () {\n            return new MQSelection(this, this);\n        };\n        MathCommand.prototype.unselectInto = function (dir, cursor) {\n            var antiCursor = cursor.anticursor;\n            var ancestor = antiCursor.ancestors[this.id];\n            cursor.insAtDirEnd(-dir, ancestor);\n        };\n        MathCommand.prototype.seek = function (clientX, cursor) {\n            function getBounds(node) {\n                var _c;\n                var el = node.domFrag().oneElement();\n                var l = getBoundingClientRect(el).left;\n                var r = l + el.offsetWidth;\n                return _c = {},\n                    _c[L] = l,\n                    _c[R] = r,\n                    _c;\n            }\n            var cmd = this;\n            var cmdBounds = getBounds(cmd);\n            if (clientX < cmdBounds[L])\n                return cursor.insLeftOf(cmd);\n            if (clientX > cmdBounds[R])\n                return cursor.insRightOf(cmd);\n            var leftLeftBound = cmdBounds[L];\n            cmd.eachChild(function (block) {\n                var blockBounds = getBounds(block);\n                if (clientX < blockBounds[L]) {\n                    // closer to this block's left bound, or the bound left of that?\n                    if (clientX - leftLeftBound < blockBounds[L] - clientX) {\n                        if (block[L])\n                            cursor.insAtRightEnd(block[L]);\n                        else\n                            cursor.insLeftOf(cmd);\n                    }\n                    else\n                        cursor.insAtLeftEnd(block);\n                    return false;\n                }\n                else if (clientX > blockBounds[R]) {\n                    if (block[R])\n                        leftLeftBound = blockBounds[R];\n                    // continue to next block\n                    else {\n                        // last (rightmost) block\n                        // closer to this block's right bound, or the cmd's right bound?\n                        if (cmdBounds[R] - clientX < clientX - blockBounds[R]) {\n                            cursor.insRightOf(cmd);\n                        }\n                        else\n                            cursor.insAtRightEnd(block);\n                    }\n                    return undefined;\n                }\n                else {\n                    block.seek(clientX, cursor);\n                    return false;\n                }\n            });\n            return undefined;\n        };\n        MathCommand.prototype.numBlocks = function () {\n            return this.domView.childCount;\n        };\n        /**\n         * Render the entire math subtree rooted at this command to a DOM node. Assumes `this.domView` is defined.\n         *\n         * See dom.test.js for example templates and intended outputs.\n         */\n        MathCommand.prototype.html = function () {\n            var blocks = this.blocks;\n            pray('domView is defined', this.domView);\n            var template = this.domView;\n            var dom = template.render(blocks || []);\n            this.setDOM(dom);\n            NodeBase.linkElementByCmdNode(dom, this);\n            return dom;\n        };\n        // methods to export a string representation of the math tree\n        MathCommand.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += this.ctrlSeq || '';\n            this.eachChild(function (child) {\n                ctx.latex += '{';\n                var beforeLength = ctx.latex.length;\n                child.latexRecursive(ctx);\n                var afterLength = ctx.latex.length;\n                if (beforeLength === afterLength) {\n                    // nothing was written so we write a space\n                    ctx.latex += ' ';\n                }\n                ctx.latex += '}';\n            });\n            this.checkCursorContextClose(ctx);\n        };\n        MathCommand.prototype.text = function () {\n            var cmd = this, i = 0;\n            return cmd.foldChildren(cmd.textTemplate[i], function (text, child) {\n                i += 1;\n                var child_text = child.text();\n                if (text &&\n                    cmd.textTemplate[i] === '(' &&\n                    child_text[0] === '(' &&\n                    child_text.slice(-1) === ')')\n                    return text + child_text.slice(1, -1) + cmd.textTemplate[i];\n                return text + child_text + (cmd.textTemplate[i] || '');\n            });\n        };\n        MathCommand.prototype.mathspeak = function () {\n            var cmd = this, i = 0;\n            return cmd.foldChildren(cmd.mathspeakTemplate[i] || 'Start' + cmd.ctrlSeq + ' ', function (speech, block) {\n                i += 1;\n                return (speech +\n                    ' ' +\n                    block.mathspeak() +\n                    ' ' +\n                    (cmd.mathspeakTemplate[i] + ' ' || 0));\n            });\n        };\n        return MathCommand;\n    }(MathElement));\n    /**\n     * Lightweight command without blocks or children.\n     */\n    var MQSymbol = /** @class */ (function (_super) {\n        __extends(MQSymbol, _super);\n        function MQSymbol(ctrlSeq, html, text, mathspeak) {\n            var _this_1 = _super.call(this) || this;\n            _this_1.setCtrlSeqHtmlTextAndMathspeak(ctrlSeq, html\n                ? new DOMView(0, function () { return html.cloneNode(true); })\n                : undefined, text, mathspeak);\n            return _this_1;\n        }\n        MQSymbol.prototype.setCtrlSeqHtmlTextAndMathspeak = function (ctrlSeq, html, text, mathspeak) {\n            if (!text && !!ctrlSeq) {\n                text = ctrlSeq.replace(/^\\\\/, '');\n            }\n            this.mathspeakName = mathspeak || text;\n            _super.prototype.setCtrlSeqHtmlAndText.call(this, ctrlSeq, html, [text || '']);\n        };\n        MQSymbol.prototype.parser = function () {\n            return Parser.succeed(this);\n        };\n        MQSymbol.prototype.numBlocks = function () {\n            return 0;\n        };\n        MQSymbol.prototype.replaces = function (replacedFragment) {\n            replacedFragment.remove();\n        };\n        MQSymbol.prototype.createBlocks = function () { };\n        MQSymbol.prototype.moveTowards = function (dir, cursor) {\n            cursor.domFrag().insDirOf(dir, this.domFrag());\n            cursor[-dir] = this;\n            cursor[dir] = this[dir];\n            cursor.controller.aria.queue(this);\n        };\n        MQSymbol.prototype.deleteTowards = function (dir, cursor) {\n            cursor[dir] = this.remove()[dir];\n        };\n        MQSymbol.prototype.seek = function (clientX, cursor) {\n            // insert at whichever side the click was closer to\n            var el = this.domFrag().oneElement();\n            var left = getBoundingClientRect(el).left;\n            if (clientX - left < el.offsetWidth / 2)\n                cursor.insLeftOf(this);\n            else\n                cursor.insRightOf(this);\n            return cursor;\n        };\n        MQSymbol.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += this.ctrlSeq || '';\n            this.checkCursorContextClose(ctx);\n        };\n        MQSymbol.prototype.text = function () {\n            return this.textTemplate.join('');\n        };\n        MQSymbol.prototype.mathspeak = function (_opts) {\n            return this.mathspeakName || '';\n        };\n        MQSymbol.prototype.placeCursor = function () { };\n        MQSymbol.prototype.isEmpty = function () {\n            return true;\n        };\n        return MQSymbol;\n    }(MathCommand));\n    var VanillaSymbol = /** @class */ (function (_super) {\n        __extends(VanillaSymbol, _super);\n        function VanillaSymbol(ch, html, mathspeak) {\n            return _super.call(this, ch, h('span', {}, [html || h.text(ch)]), undefined, mathspeak) || this;\n        }\n        return VanillaSymbol;\n    }(MQSymbol));\n    function bindVanillaSymbol(ch, htmlEntity, mathspeak) {\n        return function () {\n            return new VanillaSymbol(ch, htmlEntity ? h.entityText(htmlEntity) : undefined, mathspeak);\n        };\n    }\n    var BinaryOperator = /** @class */ (function (_super) {\n        __extends(BinaryOperator, _super);\n        function BinaryOperator(ctrlSeq, html, text, mathspeak, treatLikeSymbol) {\n            var _this_1 = this;\n            if (treatLikeSymbol) {\n                _this_1 = _super.call(this, ctrlSeq, h('span', {}, [html || h.text(ctrlSeq || '')]), undefined, mathspeak) || this;\n            }\n            else {\n                _this_1 = _super.call(this, ctrlSeq, h('span', { class: 'mq-binary-operator' }, html ? [html] : []), text, mathspeak) || this;\n            }\n            return _this_1;\n        }\n        return BinaryOperator;\n    }(MQSymbol));\n    function bindBinaryOperator(ctrlSeq, htmlEntity, text, mathspeak) {\n        return function () {\n            return new BinaryOperator(ctrlSeq, htmlEntity ? h.entityText(htmlEntity) : undefined, text, mathspeak);\n        };\n    }\n    /**\n     * Children and parent of MathCommand's. Basically partitions all the\n     * symbols and operators that descend (in the Math DOM tree) from\n     * ancestor operators.\n     */\n    var MathBlock = /** @class */ (function (_super) {\n        __extends(MathBlock, _super);\n        function MathBlock() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ariaLabel = 'block';\n            return _this_1;\n        }\n        MathBlock.prototype.join = function (methodName) {\n            return this.foldChildren('', function (fold, child) {\n                return fold + child[methodName]();\n            });\n        };\n        MathBlock.prototype.html = function () {\n            var fragment = document.createDocumentFragment();\n            this.eachChild(function (el) {\n                var childHtml = el.html();\n                fragment.appendChild(childHtml);\n                return undefined;\n            });\n            return fragment;\n        };\n        MathBlock.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            this.eachChild(function (child) { return child.latexRecursive(ctx); });\n            this.checkCursorContextClose(ctx);\n        };\n        MathBlock.prototype.text = function () {\n            var endsL = this.getEnd(L);\n            var endsR = this.getEnd(R);\n            return endsL === endsR && endsL !== 0 ? endsL.text() : this.join('text');\n        };\n        MathBlock.prototype.mathspeak = function () {\n            var tempOp = '';\n            var autoOps = {};\n            if (this.controller)\n                autoOps = this.controller.options.autoOperatorNames;\n            return (this.foldChildren([], function (speechArray, cmd) {\n                if (cmd.isPartOfOperator) {\n                    tempOp += cmd.mathspeak();\n                }\n                else {\n                    if (tempOp !== '') {\n                        if (autoOps._maxLength > 0) {\n                            var x = autoOps[tempOp.toLowerCase()];\n                            if (typeof x === 'string')\n                                tempOp = x;\n                        }\n                        speechArray.push(tempOp + ' ');\n                        tempOp = '';\n                    }\n                    var mathspeakText = cmd.mathspeak();\n                    var cmdText = cmd.ctrlSeq;\n                    if (isNaN(cmdText) && // TODO - revisit this to improve the isNumber() check\n                        cmdText !== '.' &&\n                        (!cmd.parent ||\n                            !cmd.parent.parent ||\n                            !cmd.parent.parent.isTextBlock())) {\n                        mathspeakText = ' ' + mathspeakText + ' ';\n                    }\n                    speechArray.push(mathspeakText);\n                }\n                return speechArray;\n            })\n                .join('')\n                .replace(/ +(?= )/g, '')\n                // For Apple devices in particular, split out digits after a decimal point so they aren't read aloud as whole words.\n                // Not doing so makes 123.456 potentially spoken as \"one hundred twenty-three point four hundred fifty-six.\"\n                // Instead, add spaces so it is spoken as \"one hundred twenty-three point four five six.\"\n                .replace(/(\\.)([0-9]+)/g, function (_match, p1, p2) {\n                return p1 + p2.split('').join(' ').trim();\n            }));\n        };\n        MathBlock.prototype.keystroke = function (key, e, ctrlr) {\n            if (ctrlr.options.spaceBehavesLikeTab &&\n                (key === 'Spacebar' || key === 'Shift-Spacebar')) {\n                e === null || e === void 0 ? void 0 : e.preventDefault();\n                ctrlr.escapeDir(key === 'Shift-Spacebar' ? L : R, key, e);\n                return;\n            }\n            return _super.prototype.keystroke.call(this, key, e, ctrlr);\n        };\n        // editability methods: called by the cursor for editing, cursor movements,\n        // and selection of the MathQuill tree, these all take in a direction and\n        // the cursor\n        MathBlock.prototype.moveOutOf = function (dir, cursor, updown) {\n            var updownInto;\n            if (updown === 'up') {\n                updownInto = this.parent.upInto;\n            }\n            else if (updown === 'down') {\n                updownInto = this.parent.downInto;\n            }\n            if (!updownInto && this[dir]) {\n                var otherDir = -dir;\n                cursor.insAtDirEnd(otherDir, this[dir]);\n                cursor.controller.aria.queueDirEndOf(otherDir).queue(cursor.parent, true);\n            }\n            else {\n                cursor.insDirOf(dir, this.parent);\n                cursor.controller.aria.queueDirOf(dir).queue(this.parent);\n            }\n        };\n        MathBlock.prototype.selectOutOf = function (dir, cursor) {\n            cursor.insDirOf(dir, this.parent);\n        };\n        MathBlock.prototype.deleteOutOf = function (_dir, cursor) {\n            cursor.unwrapGramp();\n        };\n        MathBlock.prototype.seek = function (clientX, cursor) {\n            var node = this.getEnd(R);\n            if (!node)\n                return cursor.insAtRightEnd(this);\n            var el = node.domFrag().oneElement();\n            var left = getBoundingClientRect(el).left;\n            if (left + el.offsetWidth < clientX) {\n                return cursor.insAtRightEnd(this);\n            }\n            var endsL = this.getEnd(L);\n            if (clientX < getBoundingClientRect(endsL.domFrag().oneElement()).left)\n                return cursor.insAtLeftEnd(this);\n            while (clientX < getBoundingClientRect(node.domFrag().oneElement()).left)\n                node = node[L];\n            return node.seek(clientX, cursor);\n        };\n        MathBlock.prototype.chToCmd = function (ch, options) {\n            var cons;\n            // exclude f because it gets a dedicated command with more spacing\n            if (ch.match(/^[a-eg-zA-Z]$/))\n                return new Letter(ch);\n            else if (/^\\d$/.test(ch))\n                return new Digit(ch);\n            else if (options && options.typingSlashWritesDivisionSymbol && ch === '/')\n                return LatexCmds['\\u00f7'](ch);\n            else if (options && options.typingAsteriskWritesTimesSymbol && ch === '*')\n                return LatexCmds['\\u00d7'](ch);\n            else if (options && options.typingPercentWritesPercentOf && ch === '%')\n                return LatexCmds.percentof(ch);\n            else if ((cons = CharCmds[ch] || LatexCmds[ch])) {\n                if (cons.constructor) {\n                    return new cons(ch);\n                }\n                else {\n                    return cons(ch);\n                }\n            }\n            else\n                return new VanillaSymbol(ch);\n        };\n        MathBlock.prototype.write = function (cursor, ch) {\n            var cmd = this.chToCmd(ch, cursor.options);\n            if (cursor.selection)\n                cmd.replaces(cursor.replaceSelection());\n            if (!cursor.isTooDeep()) {\n                cmd.createLeftOf(cursor.show());\n                // special-case the slash so that fractions are voiced while typing\n                if (ch === '/') {\n                    cursor.controller.aria.alert('over');\n                }\n                else {\n                    cursor.controller.aria.alert(cmd.mathspeak({ createdLeftOf: cursor }));\n                }\n            }\n        };\n        MathBlock.prototype.writeLatex = function (cursor, latex) {\n            var all = Parser.all;\n            var eof = Parser.eof;\n            var block = latexMathParser\n                .skip(eof)\n                .or(all.result(false))\n                .parse(latex);\n            if (block && !block.isEmpty() && block.prepareInsertionAt(cursor)) {\n                block\n                    .children()\n                    .adopt(cursor.parent, cursor[L], cursor[R]); // TODO - masking undefined. should be 0\n                domFrag(block.html()).insertBefore(cursor.domFrag());\n                cursor[L] = block.getEnd(R);\n                block.finalizeInsert(cursor.options, cursor);\n                var blockEndsR = block.getEnd(R);\n                var blockEndsL = block.getEnd(L);\n                var blockEndsRR = blockEndsR[R];\n                var blockEndsLL = blockEndsL[L];\n                if (blockEndsRR)\n                    blockEndsRR.siblingCreated(cursor.options, L);\n                if (blockEndsLL)\n                    blockEndsLL.siblingCreated(cursor.options, R);\n                cursor.parent.bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n            }\n        };\n        MathBlock.prototype.focus = function () {\n            this.domFrag().addClass('mq-hasCursor');\n            this.domFrag().removeClass('mq-empty');\n            return this;\n        };\n        MathBlock.prototype.blur = function (cursor) {\n            this.domFrag().removeClass('mq-hasCursor');\n            if (this.isEmpty()) {\n                this.domFrag().addClass('mq-empty');\n                if (cursor &&\n                    this.isQuietEmptyDelimiter(cursor.options.quietEmptyDelimiters)) {\n                    this.domFrag().addClass('mq-quiet-delimiter');\n                }\n            }\n            return this;\n        };\n        return MathBlock;\n    }(MathElement));\n    Options.prototype.mouseEvents = true;\n    API.StaticMath = function (APIClasses) {\n        var _c;\n        return _c = /** @class */ (function (_super) {\n                __extends(StaticMath, _super);\n                function StaticMath(el) {\n                    var _this_1 = _super.call(this, el) || this;\n                    var innerFields = (_this_1.innerFields = []);\n                    _this_1.__controller.root.postOrder(function (node) {\n                        node.registerInnerField(innerFields, APIClasses.InnerMathField);\n                    });\n                    return _this_1;\n                }\n                StaticMath.prototype.__mathquillify = function (opts, _interfaceVersion) {\n                    this.config(opts);\n                    _super.prototype.mathquillify.call(this, 'mq-math-mode');\n                    this.__controller.setupStaticField();\n                    if (this.__options.mouseEvents) {\n                        this.__controller.addMouseEventListener();\n                        this.__controller.staticMathTextareaEvents();\n                    }\n                    return this;\n                };\n                StaticMath.prototype.latex = function (_latex) {\n                    var returned = _super.prototype.latex.apply(this, arguments);\n                    if (arguments.length > 0) {\n                        var innerFields = (this.innerFields = []);\n                        this.__controller.root.postOrder(function (node) {\n                            node.registerInnerField(innerFields, APIClasses.InnerMathField);\n                        });\n                        // Force an ARIA label update to remain in sync with the new LaTeX value.\n                        this.__controller.updateMathspeak();\n                    }\n                    return returned;\n                };\n                StaticMath.prototype.setAriaLabel = function (ariaLabel) {\n                    this.__controller.setAriaLabel(ariaLabel);\n                    return this;\n                };\n                StaticMath.prototype.getAriaLabel = function () {\n                    return this.__controller.getAriaLabel();\n                };\n                return StaticMath;\n            }(APIClasses.AbstractMathQuill)),\n            _c.RootBlock = MathBlock,\n            _c;\n    };\n    var RootMathBlock = /** @class */ (function (_super) {\n        __extends(RootMathBlock, _super);\n        function RootMathBlock() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return RootMathBlock;\n    }(MathBlock));\n    RootBlockMixin(RootMathBlock.prototype); // adds methods to RootMathBlock\n    API.MathField = function (APIClasses) {\n        var _c;\n        return _c = /** @class */ (function (_super) {\n                __extends(MathField, _super);\n                function MathField() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                MathField.prototype.__mathquillify = function (opts, interfaceVersion) {\n                    this.config(opts);\n                    if (interfaceVersion > 1)\n                        this.__controller.root.reflow = noop;\n                    _super.prototype.mathquillify.call(this, 'mq-editable-field mq-math-mode');\n                    // TODO: Why does this need to be deleted (contrary to the type definition)? Could we set it to `noop` instead?\n                    delete this.__controller.root.reflow;\n                    return this;\n                };\n                return MathField;\n            }(APIClasses.EditableField)),\n            _c.RootBlock = RootMathBlock,\n            _c;\n    };\n    API.InnerMathField = function (APIClasses) {\n        pray('MathField class is defined', APIClasses.MathField);\n        return /** @class */ (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.makeStatic = function () {\n                this.__controller.editable = false;\n                this.__controller.root.blur();\n                this.__controller.unbindEditablesEvents();\n                domFrag(this.__controller.container).removeClass('mq-editable-field');\n            };\n            class_1.prototype.makeEditable = function () {\n                this.__controller.editable = true;\n                this.__controller.editablesTextareaEvents();\n                this.__controller.cursor.insAtRightEnd(this.__controller.root);\n                domFrag(this.__controller.container).addClass('mq-editable-field');\n            };\n            return class_1;\n        }(APIClasses.MathField));\n    };\n    /*************************************************\n     * Abstract classes of text blocks\n     ************************************************/\n    /**\n     * Blocks of plain text, with one or two TextPiece's as children.\n     * Represents flat strings of typically serif-font Roman characters, as\n     * opposed to hierchical, nested, tree-structured math.\n     * Wraps a single HTMLSpanElement.\n     */\n    var TextBlock = /** @class */ (function (_super) {\n        __extends(TextBlock, _super);\n        function TextBlock() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\text';\n            _this_1.ariaLabel = 'Text';\n            _this_1.mathspeakTemplate = ['StartText', 'EndText'];\n            return _this_1;\n        }\n        TextBlock.prototype.replaces = function (replacedText) {\n            if (replacedText instanceof Fragment) {\n                this.replacedText = replacedText.remove().domFrag().text();\n            }\n            else if (typeof replacedText === 'string')\n                this.replacedText = replacedText;\n        };\n        TextBlock.prototype.setDOMFrag = function (el) {\n            _super.prototype.setDOM.call(this, el);\n            var endsL = this.getEnd(L);\n            if (endsL) {\n                var children = this.domFrag().children();\n                if (!children.isEmpty()) {\n                    endsL.setDOM(children.oneText());\n                }\n            }\n            return this;\n        };\n        TextBlock.prototype.createLeftOf = function (cursor) {\n            var textBlock = this;\n            _super.prototype.createLeftOf.call(this, cursor);\n            cursor.insAtRightEnd(textBlock);\n            if (textBlock.replacedText)\n                for (var i = 0; i < textBlock.replacedText.length; i += 1)\n                    textBlock.write(cursor, textBlock.replacedText.charAt(i));\n            var textBlockR = textBlock[R];\n            if (textBlockR)\n                textBlockR.siblingCreated(cursor.options, L);\n            var textBlockL = textBlock[L];\n            if (textBlockL)\n                textBlockL.siblingCreated(cursor.options, R);\n            textBlock.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n        };\n        TextBlock.prototype.parser = function () {\n            var textBlock = this;\n            // TODO: correctly parse text mode\n            var string = Parser.string;\n            var regex = Parser.regex;\n            var optWhitespace = Parser.optWhitespace;\n            return optWhitespace\n                .then(string('{'))\n                .then(regex(/^[^}]*/))\n                .skip(string('}'))\n                .map(function (text) {\n                if (text.length === 0)\n                    return new Fragment(0, 0);\n                new TextPiece(text).adopt(textBlock, 0, 0);\n                return textBlock;\n            });\n        };\n        TextBlock.prototype.textContents = function () {\n            return this.foldChildren('', function (text, child) {\n                return text + child.textStr;\n            });\n        };\n        TextBlock.prototype.text = function () {\n            return '\"' + this.textContents() + '\"';\n        };\n        TextBlock.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            var contents = this.textContents();\n            if (contents.length > 0) {\n                ctx.latex += this.ctrlSeq + '{';\n                ctx.latex += contents\n                    .replace(/\\\\/g, '\\\\backslash ')\n                    .replace(/[{}]/g, '\\\\$&');\n                ctx.latex += '}';\n            }\n            this.checkCursorContextClose(ctx);\n        };\n        TextBlock.prototype.html = function () {\n            var out = h('span', { class: 'mq-text-mode' }, [\n                h.text(this.textContents()),\n            ]);\n            this.setDOM(out);\n            NodeBase.linkElementByCmdNode(out, this);\n            return out;\n        };\n        TextBlock.prototype.mathspeak = function (opts) {\n            if (opts && opts.ignoreShorthand) {\n                return (this.mathspeakTemplate[0] +\n                    ', ' +\n                    this.textContents() +\n                    ', ' +\n                    this.mathspeakTemplate[1]);\n            }\n            else {\n                return this.textContents();\n            }\n        };\n        TextBlock.prototype.isTextBlock = function () {\n            return true;\n        };\n        // editability methods: called by the cursor for editing, cursor movements,\n        // and selection of the MathQuill tree, these all take in a direction and\n        // the cursor\n        TextBlock.prototype.moveTowards = function (dir, cursor) {\n            cursor.insAtDirEnd(-dir, this);\n            cursor.controller.aria\n                .queueDirEndOf(-dir)\n                .queue(cursor.parent, true);\n        };\n        TextBlock.prototype.moveOutOf = function (dir, cursor) {\n            cursor.insDirOf(dir, this);\n            cursor.controller.aria.queueDirOf(dir).queue(this);\n        };\n        TextBlock.prototype.unselectInto = function (dir, cursor) {\n            this.moveTowards(dir, cursor);\n        };\n        // TODO: make these methods part of a shared mixin or something.\n        TextBlock.prototype.selectTowards = function (dir, cursor) {\n            MathCommand.prototype.selectTowards.call(this, dir, cursor);\n        };\n        TextBlock.prototype.deleteTowards = function (dir, cursor) {\n            MathCommand.prototype.deleteTowards.call(this, dir, cursor);\n        };\n        TextBlock.prototype.selectOutOf = function (dir, cursor) {\n            cursor.insDirOf(dir, this);\n        };\n        TextBlock.prototype.deleteOutOf = function (_dir, cursor) {\n            // backspace and delete at ends of block don't unwrap\n            if (this.isEmpty())\n                cursor.insRightOf(this);\n        };\n        TextBlock.prototype.write = function (cursor, ch) {\n            cursor.show().deleteSelection();\n            if (ch !== '$') {\n                var cursorL = cursor[L];\n                if (!cursorL)\n                    new TextPiece(ch).createLeftOf(cursor);\n                else if (cursorL instanceof TextPiece)\n                    cursorL.appendText(ch);\n            }\n            else if (this.isEmpty()) {\n                cursor.insRightOf(this);\n                new VanillaSymbol('\\\\$', h.text('$')).createLeftOf(cursor);\n            }\n            else if (!cursor[R])\n                cursor.insRightOf(this);\n            else if (!cursor[L])\n                cursor.insLeftOf(this);\n            else {\n                // split apart\n                var leftBlock = new TextBlock();\n                var leftPc = this.getEnd(L);\n                if (leftPc) {\n                    leftPc.disown().domFrag().detach();\n                    leftPc.adopt(leftBlock, 0, 0);\n                }\n                cursor.insLeftOf(this);\n                _super.prototype.createLeftOf.call(leftBlock, cursor); // micro-optimization, not for correctness\n            }\n            this.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n            // TODO needs tests\n            cursor.controller.aria.alert(ch);\n        };\n        TextBlock.prototype.writeLatex = function (cursor, latex) {\n            var cursorL = cursor[L];\n            if (!cursorL)\n                new TextPiece(latex).createLeftOf(cursor);\n            else if (cursorL instanceof TextPiece)\n                cursorL.appendText(latex);\n            this.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n        };\n        TextBlock.prototype.seek = function (clientX, cursor) {\n            cursor.hide();\n            var textPc = TextBlockFuseChildren(this);\n            if (!textPc)\n                return;\n            // insert cursor at approx position in DOMTextNode\n            var textNode = this.domFrag().children().oneText();\n            var range = document.createRange();\n            range.selectNodeContents(textNode);\n            var rects = range.getClientRects();\n            if (rects.length === 1) {\n                var _c = rects[0], width = _c.width, left = _c.left;\n                var avgChWidth = width / this.textContents().length;\n                var approxPosition = Math.round((clientX - left) / avgChWidth);\n                if (approxPosition <= 0) {\n                    cursor.insAtLeftEnd(this);\n                }\n                else if (approxPosition >= textPc.textStr.length) {\n                    cursor.insAtRightEnd(this);\n                }\n                else {\n                    cursor.insLeftOf(textPc.splitRight(approxPosition));\n                }\n            }\n            else {\n                cursor.insAtLeftEnd(this);\n            }\n            // move towards mousedown (clientX)\n            var displ = clientX - cursor.show().getBoundingClientRectWithoutMargin().left; // displacement\n            var dir = displ && displ < 0 ? L : R;\n            var prevDispl = dir;\n            // displ * prevDispl > 0 iff displacement direction === previous direction\n            while (cursor[dir] && displ * prevDispl > 0) {\n                cursor[dir].moveTowards(dir, cursor);\n                prevDispl = displ;\n                displ = clientX - cursor.getBoundingClientRectWithoutMargin().left;\n            }\n            if (dir * displ < -dir * prevDispl)\n                cursor[-dir].moveTowards(-dir, cursor);\n            if (!cursor.anticursor) {\n                // about to start mouse-selecting, the anticursor is gonna get put here\n                var cursorL = cursor[L];\n                this.anticursorPosition =\n                    cursorL && cursorL.textStr.length;\n                // ^ get it? 'cos if there's no cursor[L], it's 0... I'm a terrible person.\n            }\n            else if (cursor.anticursor.parent === this) {\n                // mouse-selecting within this TextBlock, re-insert the anticursor\n                var cursorL = cursor[L];\n                var cursorPosition = cursorL && cursorL.textStr.length;\n                if (this.anticursorPosition === cursorPosition) {\n                    cursor.anticursor = Anticursor.fromCursor(cursor);\n                }\n                else {\n                    if (this.anticursorPosition < cursorPosition) {\n                        var newTextPc = cursorL.splitRight(this.anticursorPosition);\n                        cursor[L] = newTextPc;\n                    }\n                    else {\n                        var cursorR = cursor[R];\n                        var newTextPc = cursorR.splitRight(this.anticursorPosition - cursorPosition);\n                    }\n                    cursor.anticursor = new Anticursor(this, newTextPc[L], newTextPc);\n                }\n            }\n        };\n        TextBlock.prototype.blur = function (cursor) {\n            MathBlock.prototype.blur.call(this, cursor);\n            if (!cursor)\n                return;\n            if (this.textContents() === '') {\n                this.remove();\n                if (cursor[L] === this)\n                    cursor[L] = this[L];\n                else if (cursor[R] === this)\n                    cursor[R] = this[R];\n            }\n            else\n                TextBlockFuseChildren(this);\n        };\n        TextBlock.prototype.focus = function () {\n            MathBlock.prototype.focus.call(this);\n        };\n        return TextBlock;\n    }(MQNode));\n    function TextBlockFuseChildren(self) {\n        self.domFrag().oneElement().normalize();\n        var children = self.domFrag().children();\n        if (children.isEmpty())\n            return;\n        var textPcDom = children.oneText();\n        pray('only node in TextBlock span is Text node', textPcDom.nodeType === 3);\n        // nodeType === 3 has meant a Text node since ancient times:\n        //   http://reference.sitepoint.com/javascript/Node/nodeType\n        var textPc = new TextPiece(textPcDom.data);\n        textPc.setDOM(textPcDom);\n        self.children().disown();\n        textPc.adopt(self, 0, 0);\n        return textPc;\n    }\n    /**\n     * Piece of plain text, with a TextBlock as a parent and no children.\n     * Wraps a single DOMTextNode.\n     * For convenience, has a .textStr property that's just a JavaScript string\n     * mirroring the text contents of the DOMTextNode.\n     * Text contents must always be nonempty.\n     */\n    var TextPiece = /** @class */ (function (_super) {\n        __extends(TextPiece, _super);\n        function TextPiece(text) {\n            var _this_1 = _super.call(this) || this;\n            _this_1.textStr = text;\n            return _this_1;\n        }\n        TextPiece.prototype.html = function () {\n            var out = h.text(this.textStr);\n            this.setDOM(out);\n            return out;\n        };\n        TextPiece.prototype.appendText = function (text) {\n            this.textStr += text;\n            this.domFrag().oneText().appendData(text);\n        };\n        TextPiece.prototype.prependText = function (text) {\n            this.textStr = text + this.textStr;\n            this.domFrag().oneText().insertData(0, text);\n        };\n        TextPiece.prototype.insTextAtDirEnd = function (text, dir) {\n            prayDirection(dir);\n            if (dir === R)\n                this.appendText(text);\n            else\n                this.prependText(text);\n        };\n        TextPiece.prototype.splitRight = function (i) {\n            var newPc = new TextPiece(this.textStr.slice(i)).adopt(this.parent, this, this[R]);\n            newPc.setDOM(this.domFrag().oneText().splitText(i));\n            this.textStr = this.textStr.slice(0, i);\n            return newPc;\n        };\n        TextPiece.prototype.endChar = function (dir, text) {\n            return text.charAt(dir === L ? 0 : -1 + text.length);\n        };\n        TextPiece.prototype.moveTowards = function (dir, cursor) {\n            prayDirection(dir);\n            var ch = this.endChar(-dir, this.textStr);\n            var from = this[-dir];\n            if (from instanceof TextPiece)\n                from.insTextAtDirEnd(ch, dir);\n            else\n                new TextPiece(ch).createDir(-dir, cursor);\n            return this.deleteTowards(dir, cursor);\n        };\n        TextPiece.prototype.mathspeak = function () {\n            return this.textStr;\n        };\n        TextPiece.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += this.textStr;\n            this.checkCursorContextClose(ctx);\n        };\n        TextPiece.prototype.deleteTowards = function (dir, cursor) {\n            if (this.textStr.length > 1) {\n                var deletedChar;\n                if (dir === R) {\n                    this.domFrag().oneText().deleteData(0, 1);\n                    deletedChar = this.textStr[0];\n                    this.textStr = this.textStr.slice(1);\n                }\n                else {\n                    // note that the order of these 2 lines is annoyingly important\n                    // (the second line mutates this.textStr.length)\n                    this.domFrag()\n                        .oneText()\n                        .deleteData(-1 + this.textStr.length, 1);\n                    deletedChar = this.textStr[this.textStr.length - 1];\n                    this.textStr = this.textStr.slice(0, -1);\n                }\n                cursor.controller.aria.queue(deletedChar);\n            }\n            else {\n                this.remove();\n                cursor[dir] = this[dir];\n                cursor.controller.aria.queue(this.textStr);\n            }\n        };\n        TextPiece.prototype.selectTowards = function (dir, cursor) {\n            prayDirection(dir);\n            var anticursor = cursor.anticursor;\n            if (!anticursor)\n                return;\n            var ch = this.endChar(-dir, this.textStr);\n            if (anticursor[dir] === this) {\n                var newPc = new TextPiece(ch).createDir(dir, cursor);\n                anticursor[dir] = newPc;\n                cursor.insDirOf(dir, newPc);\n            }\n            else {\n                var from = this[-dir];\n                if (from instanceof TextPiece)\n                    from.insTextAtDirEnd(ch, dir);\n                else {\n                    var newPc = new TextPiece(ch).createDir(-dir, cursor);\n                    var selection = cursor.selection;\n                    if (selection) {\n                        newPc.domFrag().insDirOf(-dir, selection.domFrag());\n                    }\n                }\n                if (this.textStr.length === 1 && anticursor[-dir] === this) {\n                    anticursor[-dir] = this[-dir]; // `this` will be removed in deleteTowards\n                }\n            }\n            return this.deleteTowards(dir, cursor);\n        };\n        return TextPiece;\n    }(MQNode));\n    LatexCmds.text =\n        LatexCmds.textnormal =\n            LatexCmds.textrm =\n                LatexCmds.textup =\n                    LatexCmds.textmd =\n                        TextBlock;\n    function makeTextBlock(latex, ariaLabel, tagName, attrs) {\n        return /** @class */ (function (_super) {\n            __extends(class_2, _super);\n            function class_2() {\n                var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n                _this_1.ctrlSeq = latex;\n                _this_1.mathspeakTemplate = ['Start' + ariaLabel, 'End' + ariaLabel];\n                _this_1.ariaLabel = ariaLabel;\n                return _this_1;\n            }\n            class_2.prototype.html = function () {\n                var out = h(tagName, attrs, [h.text(this.textContents())]);\n                this.setDOM(out);\n                NodeBase.linkElementByCmdNode(out, this);\n                return out;\n            };\n            return class_2;\n        }(TextBlock));\n    }\n    LatexCmds.em =\n        LatexCmds.italic =\n            LatexCmds.italics =\n                LatexCmds.emph =\n                    LatexCmds.textit =\n                        LatexCmds.textsl =\n                            makeTextBlock('\\\\textit', 'Italic', 'i', { class: 'mq-text-mode' });\n    LatexCmds.strong =\n        LatexCmds.bold =\n            LatexCmds.textbf =\n                makeTextBlock('\\\\textbf', 'Bold', 'b', { class: 'mq-text-mode' });\n    LatexCmds.sf = LatexCmds.textsf = makeTextBlock('\\\\textsf', 'Sans serif font', 'span', { class: 'mq-sans-serif mq-text-mode' });\n    LatexCmds.tt = LatexCmds.texttt = makeTextBlock('\\\\texttt', 'Mono space font', 'span', { class: 'mq-monospace mq-text-mode' });\n    LatexCmds.textsc = makeTextBlock('\\\\textsc', 'Variable font', 'span', {\n        style: 'font-variant:small-caps',\n        class: 'mq-text-mode',\n    });\n    LatexCmds.uppercase = makeTextBlock('\\\\uppercase', 'Uppercase', 'span', {\n        style: 'text-transform:uppercase',\n        class: 'mq-text-mode',\n    });\n    LatexCmds.lowercase = makeTextBlock('\\\\lowercase', 'Lowercase', 'span', {\n        style: 'text-transform:lowercase',\n        class: 'mq-text-mode',\n    });\n    var RootMathCommand = /** @class */ (function (_super) {\n        __extends(RootMathCommand, _super);\n        function RootMathCommand(cursor) {\n            var _this_1 = _super.call(this, '$') || this;\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h.block('span', { class: 'mq-math-mode' }, blocks[0]);\n            });\n            _this_1.cursor = cursor;\n            return _this_1;\n        }\n        RootMathCommand.prototype.createBlocks = function () {\n            _super.prototype.createBlocks.call(this);\n            var endsL = this.getEnd(L); // TODO - how do we know this is a RootMathCommand?\n            endsL.cursor = this.cursor;\n            endsL.write = function (cursor, ch) {\n                if (ch !== '$')\n                    MathBlock.prototype.write.call(this, cursor, ch);\n                else if (this.isEmpty()) {\n                    cursor.insRightOf(this.parent);\n                    this.parent.deleteTowards(undefined, cursor);\n                    new VanillaSymbol('\\\\$', h.text('$')).createLeftOf(cursor.show());\n                }\n                else if (!cursor[R])\n                    cursor.insRightOf(this.parent);\n                else if (!cursor[L])\n                    cursor.insLeftOf(this.parent);\n                else\n                    MathBlock.prototype.write.call(this, cursor, ch);\n            };\n        };\n        RootMathCommand.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += '$';\n            this.getEnd(L).latexRecursive(ctx);\n            ctx.latex += '$';\n            this.checkCursorContextClose(ctx);\n        };\n        return RootMathCommand;\n    }(MathCommand));\n    var RootTextBlock = /** @class */ (function (_super) {\n        __extends(RootTextBlock, _super);\n        function RootTextBlock() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RootTextBlock.prototype.keystroke = function (key, e, ctrlr) {\n            if (key === 'Spacebar' || key === 'Shift-Spacebar')\n                return;\n            return _super.prototype.keystroke.call(this, key, e, ctrlr);\n        };\n        RootTextBlock.prototype.write = function (cursor, ch) {\n            cursor.show().deleteSelection();\n            if (ch === '$')\n                new RootMathCommand(cursor).createLeftOf(cursor);\n            else {\n                var html;\n                if (ch === '<')\n                    html = h.entityText('&lt;');\n                else if (ch === '>')\n                    html = h.entityText('&gt;');\n                new VanillaSymbol(ch, html).createLeftOf(cursor);\n            }\n        };\n        return RootTextBlock;\n    }(RootMathBlock));\n    API.TextField = function (APIClasses) {\n        var _c;\n        return _c = /** @class */ (function (_super) {\n                __extends(TextField, _super);\n                function TextField() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                TextField.prototype.__mathquillify = function () {\n                    _super.prototype.mathquillify.call(this, 'mq-editable-field mq-text-mode');\n                    return this;\n                };\n                TextField.prototype.latex = function (latex) {\n                    if (latex) {\n                        this.__controller.renderLatexText(latex);\n                        if (this.__controller.blurred)\n                            this.__controller.cursor.hide().parent.blur();\n                        var _this = this; // just to help help TS out\n                        return _this;\n                    }\n                    return this.__controller.exportLatex();\n                };\n                return TextField;\n            }(APIClasses.EditableField)),\n            _c.RootBlock = RootTextBlock,\n            _c;\n    };\n    /************************************\n     * Symbols for Advanced Mathematics\n     ***********************************/\n    LatexCmds.notin =\n        LatexCmds.cong =\n            LatexCmds.equiv =\n                LatexCmds.oplus =\n                    LatexCmds.otimes =\n                        function (latex) {\n                            return new BinaryOperator('\\\\' + latex + ' ', h.entityText('&' + latex + ';'));\n                        };\n    LatexCmds['\\u2217'] =\n        LatexCmds.ast =\n            LatexCmds.star =\n                LatexCmds.loast =\n                    LatexCmds.lowast =\n                        bindBinaryOperator('\\\\ast ', '&lowast;', 'low asterisk');\n    LatexCmds.therefor = LatexCmds.therefore = bindBinaryOperator('\\\\therefore ', '&there4;', 'therefore');\n    LatexCmds.cuz = LatexCmds.because = bindBinaryOperator(\n    // l33t\n    '\\\\because ', '&#8757;', 'because');\n    LatexCmds.prop = LatexCmds.propto = bindBinaryOperator('\\\\propto ', '&prop;', 'proportional to');\n    LatexCmds['\\u2248'] =\n        LatexCmds.asymp =\n            LatexCmds.approx =\n                bindBinaryOperator('\\\\approx ', '&asymp;', 'approximately equal to');\n    LatexCmds.isin = LatexCmds['in'] = bindBinaryOperator('\\\\in ', '&isin;', 'is in');\n    LatexCmds.ni = LatexCmds.contains = bindBinaryOperator('\\\\ni ', '&ni;', 'is not in');\n    LatexCmds.notni =\n        LatexCmds.niton =\n            LatexCmds.notcontains =\n                LatexCmds.doesnotcontain =\n                    bindBinaryOperator('\\\\not\\\\ni ', '&#8716;', 'does not contain');\n    LatexCmds.sub = LatexCmds.subset = bindBinaryOperator('\\\\subset ', '&sub;', 'subset');\n    LatexCmds.sup =\n        LatexCmds.supset =\n            LatexCmds.superset =\n                bindBinaryOperator('\\\\supset ', '&sup;', 'superset');\n    LatexCmds.nsub =\n        LatexCmds.notsub =\n            LatexCmds.nsubset =\n                LatexCmds.notsubset =\n                    bindBinaryOperator('\\\\not\\\\subset ', '&#8836;', 'not a subset');\n    LatexCmds.nsup =\n        LatexCmds.notsup =\n            LatexCmds.nsupset =\n                LatexCmds.notsupset =\n                    LatexCmds.nsuperset =\n                        LatexCmds.notsuperset =\n                            bindBinaryOperator('\\\\not\\\\supset ', '&#8837;', 'not a superset');\n    LatexCmds.sube =\n        LatexCmds.subeq =\n            LatexCmds.subsete =\n                LatexCmds.subseteq =\n                    bindBinaryOperator('\\\\subseteq ', '&sube;', 'subset or equal to');\n    LatexCmds.supe =\n        LatexCmds.supeq =\n            LatexCmds.supsete =\n                LatexCmds.supseteq =\n                    LatexCmds.supersete =\n                        LatexCmds.superseteq =\n                            bindBinaryOperator('\\\\supseteq ', '&supe;', 'superset or equal to');\n    LatexCmds.nsube =\n        LatexCmds.nsubeq =\n            LatexCmds.notsube =\n                LatexCmds.notsubeq =\n                    LatexCmds.nsubsete =\n                        LatexCmds.nsubseteq =\n                            LatexCmds.notsubsete =\n                                LatexCmds.notsubseteq =\n                                    bindBinaryOperator('\\\\not\\\\subseteq ', '&#8840;', 'not subset or equal to');\n    LatexCmds.nsupe =\n        LatexCmds.nsupeq =\n            LatexCmds.notsupe =\n                LatexCmds.notsupeq =\n                    LatexCmds.nsupsete =\n                        LatexCmds.nsupseteq =\n                            LatexCmds.notsupsete =\n                                LatexCmds.notsupseteq =\n                                    LatexCmds.nsupersete =\n                                        LatexCmds.nsuperseteq =\n                                            LatexCmds.notsupersete =\n                                                LatexCmds.notsuperseteq =\n                                                    bindBinaryOperator('\\\\not\\\\supseteq ', '&#8841;', 'not superset or equal to');\n    //the canonical sets of numbers\n    LatexCmds.mathbb = /** @class */ (function (_super) {\n        __extends(class_3, _super);\n        function class_3() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_3.prototype.createLeftOf = function (_cursor) { };\n        class_3.prototype.numBlocks = function () {\n            return 1;\n        };\n        class_3.prototype.parser = function () {\n            var string = Parser.string;\n            var regex = Parser.regex;\n            var optWhitespace = Parser.optWhitespace;\n            return optWhitespace\n                .then(string('{'))\n                .then(optWhitespace)\n                .then(regex(/^[NPZQRCH]/))\n                .skip(optWhitespace)\n                .skip(string('}'))\n                .map(function (c) {\n                // instantiate the class for the matching char\n                var cmd = LatexCmds[c];\n                if (isMQNodeClass(cmd)) {\n                    return new cmd();\n                }\n                else {\n                    return cmd();\n                }\n            });\n        };\n        return class_3;\n    }(MathCommand));\n    LatexCmds.N =\n        LatexCmds.naturals =\n            LatexCmds.Naturals =\n                bindVanillaSymbol('\\\\mathbb{N}', '&#8469;', 'naturals');\n    LatexCmds.P =\n        LatexCmds.primes =\n            LatexCmds.Primes =\n                LatexCmds.projective =\n                    LatexCmds.Projective =\n                        LatexCmds.probability =\n                            LatexCmds.Probability =\n                                bindVanillaSymbol('\\\\mathbb{P}', '&#8473;', 'P');\n    LatexCmds.Z =\n        LatexCmds.integers =\n            LatexCmds.Integers =\n                bindVanillaSymbol('\\\\mathbb{Z}', '&#8484;', 'integers');\n    LatexCmds.Q =\n        LatexCmds.rationals =\n            LatexCmds.Rationals =\n                bindVanillaSymbol('\\\\mathbb{Q}', '&#8474;', 'rationals');\n    LatexCmds.R =\n        LatexCmds.reals =\n            LatexCmds.Reals =\n                bindVanillaSymbol('\\\\mathbb{R}', '&#8477;', 'reals');\n    LatexCmds.C =\n        LatexCmds.complex =\n            LatexCmds.Complex =\n                LatexCmds.complexes =\n                    LatexCmds.Complexes =\n                        LatexCmds.complexplane =\n                            LatexCmds.Complexplane =\n                                LatexCmds.ComplexPlane =\n                                    bindVanillaSymbol('\\\\mathbb{C}', '&#8450;', 'complexes');\n    LatexCmds.H =\n        LatexCmds.Hamiltonian =\n            LatexCmds.quaternions =\n                LatexCmds.Quaternions =\n                    bindVanillaSymbol('\\\\mathbb{H}', '&#8461;', 'quaternions');\n    //spacing\n    LatexCmds.quad = LatexCmds.emsp = bindVanillaSymbol('\\\\quad ', '    ', '4 spaces');\n    LatexCmds.qquad = bindVanillaSymbol('\\\\qquad ', '        ', '8 spaces');\n    /* spacing special characters, gonna have to implement this in LatexCommandInput::onText somehow\n    case ',':\n      return VanillaSymbol('\\\\, ',' ', 'comma');\n    case ':':\n      return VanillaSymbol('\\\\: ','  ', 'colon');\n    case ';':\n      return VanillaSymbol('\\\\; ','   ', 'semicolon');\n    case '!':\n      return MQSymbol('\\\\! ','<span style=\"margin-right:-.2em\"></span>', 'exclamation point');\n    */\n    //binary operators\n    LatexCmds.diamond = bindVanillaSymbol('\\\\diamond ', '&#9671;', 'diamond');\n    LatexCmds.bigtriangleup = bindVanillaSymbol('\\\\bigtriangleup ', '&#9651;', 'triangle up');\n    LatexCmds.ominus = bindVanillaSymbol('\\\\ominus ', '&#8854;', 'o minus');\n    LatexCmds.uplus = bindVanillaSymbol('\\\\uplus ', '&#8846;', 'disjoint union');\n    LatexCmds.bigtriangledown = bindVanillaSymbol('\\\\bigtriangledown ', '&#9661;', 'triangle down');\n    LatexCmds.sqcap = bindVanillaSymbol('\\\\sqcap ', '&#8851;', 'greatest lower bound');\n    LatexCmds.triangleleft = bindVanillaSymbol('\\\\triangleleft ', '&#8882;', 'triangle left');\n    LatexCmds.sqcup = bindVanillaSymbol('\\\\sqcup ', '&#8852;', 'least upper bound');\n    LatexCmds.triangleright = bindVanillaSymbol('\\\\triangleright ', '&#8883;', 'triangle right');\n    //circledot is not a not real LaTex command see https://github.com/mathquill/mathquill/pull/552 for more details\n    LatexCmds.odot = LatexCmds.circledot = bindVanillaSymbol('\\\\odot ', '&#8857;', 'circle dot');\n    LatexCmds.bigcirc = bindVanillaSymbol('\\\\bigcirc ', '&#9711;', 'circle');\n    LatexCmds.dagger = bindVanillaSymbol('\\\\dagger ', '&#0134;', 'dagger');\n    LatexCmds.ddagger = bindVanillaSymbol('\\\\ddagger ', '&#135;', 'big dagger');\n    LatexCmds.wr = bindVanillaSymbol('\\\\wr ', '&#8768;', 'wreath');\n    LatexCmds.amalg = bindVanillaSymbol('\\\\amalg ', '&#8720;', 'amalgam');\n    //relationship symbols\n    LatexCmds.models = bindVanillaSymbol('\\\\models ', '&#8872;', 'models');\n    LatexCmds.prec = bindVanillaSymbol('\\\\prec ', '&#8826;', 'precedes');\n    LatexCmds.succ = bindVanillaSymbol('\\\\succ ', '&#8827;', 'succeeds');\n    LatexCmds.preceq = bindVanillaSymbol('\\\\preceq ', '&#8828;', 'precedes or equals');\n    LatexCmds.succeq = bindVanillaSymbol('\\\\succeq ', '&#8829;', 'succeeds or equals');\n    LatexCmds.simeq = bindVanillaSymbol('\\\\simeq ', '&#8771;', 'similar or equal to');\n    LatexCmds.mid = bindVanillaSymbol('\\\\mid ', '&#8739;', 'divides');\n    LatexCmds.ll = bindVanillaSymbol('\\\\ll ', '&#8810;', 'll');\n    LatexCmds.gg = bindVanillaSymbol('\\\\gg ', '&#8811;', 'gg');\n    LatexCmds.parallel = bindVanillaSymbol('\\\\parallel ', '&#8741;', 'parallel with');\n    LatexCmds.nparallel = bindVanillaSymbol('\\\\nparallel ', '&#8742;', 'not parallel with');\n    LatexCmds.bowtie = bindVanillaSymbol('\\\\bowtie ', '&#8904;', 'bowtie');\n    LatexCmds.sqsubset = bindVanillaSymbol('\\\\sqsubset ', '&#8847;', 'square subset');\n    LatexCmds.sqsupset = bindVanillaSymbol('\\\\sqsupset ', '&#8848;', 'square superset');\n    LatexCmds.smile = bindVanillaSymbol('\\\\smile ', '&#8995;', 'smile');\n    LatexCmds.sqsubseteq = bindVanillaSymbol('\\\\sqsubseteq ', '&#8849;', 'square subset or equal to');\n    LatexCmds.sqsupseteq = bindVanillaSymbol('\\\\sqsupseteq ', '&#8850;', 'square superset or equal to');\n    LatexCmds.doteq = bindVanillaSymbol('\\\\doteq ', '&#8784;', 'dotted equals');\n    LatexCmds.frown = bindVanillaSymbol('\\\\frown ', '&#8994;', 'frown');\n    LatexCmds.vdash = bindVanillaSymbol('\\\\vdash ', '&#8870;', 'v dash');\n    LatexCmds.dashv = bindVanillaSymbol('\\\\dashv ', '&#8867;', 'dash v');\n    LatexCmds.nless = bindVanillaSymbol('\\\\nless ', '&#8814;', 'not less than');\n    LatexCmds.ngtr = bindVanillaSymbol('\\\\ngtr ', '&#8815;', 'not greater than');\n    //arrows\n    LatexCmds.longleftarrow = bindVanillaSymbol('\\\\longleftarrow ', '&#8592;', 'left arrow');\n    LatexCmds.longrightarrow = bindVanillaSymbol('\\\\longrightarrow ', '&#8594;', 'right arrow');\n    LatexCmds.Longleftarrow = bindVanillaSymbol('\\\\Longleftarrow ', '&#8656;', 'left arrow');\n    LatexCmds.Longrightarrow = bindVanillaSymbol('\\\\Longrightarrow ', '&#8658;', 'right arrow');\n    LatexCmds.longleftrightarrow = bindVanillaSymbol('\\\\longleftrightarrow ', '&#8596;', 'left and right arrow');\n    LatexCmds.updownarrow = bindVanillaSymbol('\\\\updownarrow ', '&#8597;', 'up and down arrow');\n    LatexCmds.Longleftrightarrow = bindVanillaSymbol('\\\\Longleftrightarrow ', '&#8660;', 'left and right arrow');\n    LatexCmds.Updownarrow = bindVanillaSymbol('\\\\Updownarrow ', '&#8661;', 'up and down arrow');\n    LatexCmds.mapsto = bindVanillaSymbol('\\\\mapsto ', '&#8614;', 'maps to');\n    LatexCmds.nearrow = bindVanillaSymbol('\\\\nearrow ', '&#8599;', 'northeast arrow');\n    LatexCmds.hookleftarrow = bindVanillaSymbol('\\\\hookleftarrow ', '&#8617;', 'hook left arrow');\n    LatexCmds.hookrightarrow = bindVanillaSymbol('\\\\hookrightarrow ', '&#8618;', 'hook right arrow');\n    LatexCmds.searrow = bindVanillaSymbol('\\\\searrow ', '&#8600;', 'southeast arrow');\n    LatexCmds.leftharpoonup = bindVanillaSymbol('\\\\leftharpoonup ', '&#8636;', 'left harpoon up');\n    LatexCmds.rightharpoonup = bindVanillaSymbol('\\\\rightharpoonup ', '&#8640;', 'right harpoon up');\n    LatexCmds.swarrow = bindVanillaSymbol('\\\\swarrow ', '&#8601;', 'southwest arrow');\n    LatexCmds.leftharpoondown = bindVanillaSymbol('\\\\leftharpoondown ', '&#8637;', 'left harpoon down');\n    LatexCmds.rightharpoondown = bindVanillaSymbol('\\\\rightharpoondown ', '&#8641;', 'right harpoon down');\n    LatexCmds.nwarrow = bindVanillaSymbol('\\\\nwarrow ', '&#8598;', 'northwest arrow');\n    //Misc\n    LatexCmds.ldots = bindVanillaSymbol('\\\\ldots ', '&#8230;', 'l dots');\n    LatexCmds.cdots = bindVanillaSymbol('\\\\cdots ', '&#8943;', 'c dots');\n    LatexCmds.vdots = bindVanillaSymbol('\\\\vdots ', '&#8942;', 'v dots');\n    LatexCmds.ddots = bindVanillaSymbol('\\\\ddots ', '&#8945;', 'd dots');\n    LatexCmds.surd = bindVanillaSymbol('\\\\surd ', '&#8730;', 'unresolved root');\n    LatexCmds.triangle = bindVanillaSymbol('\\\\triangle ', '&#9651;', 'triangle');\n    LatexCmds.ell = bindVanillaSymbol('\\\\ell ', '&#8467;', 'ell');\n    LatexCmds.top = bindVanillaSymbol('\\\\top ', '&#8868;', 'top');\n    LatexCmds.flat = bindVanillaSymbol('\\\\flat ', '&#9837;', 'flat');\n    LatexCmds.natural = bindVanillaSymbol('\\\\natural ', '&#9838;', 'natural');\n    LatexCmds.sharp = bindVanillaSymbol('\\\\sharp ', '&#9839;', 'sharp');\n    LatexCmds.wp = bindVanillaSymbol('\\\\wp ', '&#8472;', 'wp');\n    LatexCmds.bot = bindVanillaSymbol('\\\\bot ', '&#8869;', 'bot');\n    LatexCmds.clubsuit = bindVanillaSymbol('\\\\clubsuit ', '&#9827;', 'club suit');\n    LatexCmds.diamondsuit = bindVanillaSymbol('\\\\diamondsuit ', '&#9826;', 'diamond suit');\n    LatexCmds.heartsuit = bindVanillaSymbol('\\\\heartsuit ', '&#9825;', 'heart suit');\n    LatexCmds.spadesuit = bindVanillaSymbol('\\\\spadesuit ', '&#9824;', 'spade suit');\n    //not real LaTex command see https://github.com/mathquill/mathquill/pull/552 for more details\n    LatexCmds.parallelogram = bindVanillaSymbol('\\\\parallelogram ', '&#9649;', 'parallelogram');\n    LatexCmds.square = bindVanillaSymbol('\\\\square ', '&#11036;', 'square');\n    //variable-sized\n    LatexCmds.oint = bindVanillaSymbol('\\\\oint ', '&#8750;', 'o int');\n    LatexCmds.bigcap = bindVanillaSymbol('\\\\bigcap ', '&#8745;', 'big cap');\n    LatexCmds.bigcup = bindVanillaSymbol('\\\\bigcup ', '&#8746;', 'big cup');\n    LatexCmds.bigsqcup = bindVanillaSymbol('\\\\bigsqcup ', '&#8852;', 'big square cup');\n    LatexCmds.bigvee = bindVanillaSymbol('\\\\bigvee ', '&#8744;', 'big vee');\n    LatexCmds.bigwedge = bindVanillaSymbol('\\\\bigwedge ', '&#8743;', 'big wedge');\n    LatexCmds.bigodot = bindVanillaSymbol('\\\\bigodot ', '&#8857;', 'big o dot');\n    LatexCmds.bigotimes = bindVanillaSymbol('\\\\bigotimes ', '&#8855;', 'big o times');\n    LatexCmds.bigoplus = bindVanillaSymbol('\\\\bigoplus ', '&#8853;', 'big o plus');\n    LatexCmds.biguplus = bindVanillaSymbol('\\\\biguplus ', '&#8846;', 'big u plus');\n    //delimiters\n    LatexCmds.lfloor = bindVanillaSymbol('\\\\lfloor ', '&#8970;', 'left floor');\n    LatexCmds.rfloor = bindVanillaSymbol('\\\\rfloor ', '&#8971;', 'right floor');\n    LatexCmds.lceil = bindVanillaSymbol('\\\\lceil ', '&#8968;', 'left ceiling');\n    LatexCmds.rceil = bindVanillaSymbol('\\\\rceil ', '&#8969;', 'right ceiling');\n    LatexCmds.opencurlybrace = LatexCmds.lbrace = bindVanillaSymbol('\\\\lbrace ', '{', 'left brace');\n    LatexCmds.closecurlybrace = LatexCmds.rbrace = bindVanillaSymbol('\\\\rbrace ', '}', 'right brace');\n    LatexCmds.lbrack = bindVanillaSymbol('[', 'left bracket');\n    LatexCmds.rbrack = bindVanillaSymbol(']', 'right bracket');\n    //various symbols\n    LatexCmds.slash = bindVanillaSymbol('/', 'slash');\n    LatexCmds.vert = bindVanillaSymbol('|', 'vertical bar');\n    LatexCmds.perp = LatexCmds.perpendicular = bindVanillaSymbol('\\\\perp ', '&perp;', 'perpendicular');\n    LatexCmds.nabla = LatexCmds.del = bindVanillaSymbol('\\\\nabla ', '&nabla;');\n    LatexCmds.hbar = bindVanillaSymbol('\\\\hbar ', '&#8463;', 'horizontal bar');\n    LatexCmds.AA =\n        LatexCmds.Angstrom =\n            LatexCmds.angstrom =\n                bindVanillaSymbol('\\\\text\\\\AA ', '&#8491;', 'AA');\n    LatexCmds.ring =\n        LatexCmds.circ =\n            LatexCmds.circle =\n                bindVanillaSymbol('\\\\circ ', '&#8728;', 'circle');\n    LatexCmds.bull = LatexCmds.bullet = bindVanillaSymbol('\\\\bullet ', '&bull;', 'bullet');\n    LatexCmds.setminus = LatexCmds.smallsetminus = bindVanillaSymbol('\\\\setminus ', '&#8726;', 'set minus');\n    LatexCmds.not = //bind(MQSymbol,'\\\\not ','<span class=\"not\">/</span>', 'not');\n        LatexCmds['\\u00ac'] =\n            LatexCmds.neg =\n                bindVanillaSymbol('\\\\neg ', '&not;', 'not');\n    LatexCmds['\\u2026'] =\n        LatexCmds.dots =\n            LatexCmds.ellip =\n                LatexCmds.hellip =\n                    LatexCmds.ellipsis =\n                        LatexCmds.hellipsis =\n                            bindVanillaSymbol('\\\\dots ', '&hellip;', 'ellipsis');\n    LatexCmds.converges =\n        LatexCmds.darr =\n            LatexCmds.dnarr =\n                LatexCmds.dnarrow =\n                    LatexCmds.downarrow =\n                        bindVanillaSymbol('\\\\downarrow ', '&darr;', 'converges with');\n    LatexCmds.dArr =\n        LatexCmds.dnArr =\n            LatexCmds.dnArrow =\n                LatexCmds.Downarrow =\n                    bindVanillaSymbol('\\\\Downarrow ', '&dArr;', 'down arrow');\n    LatexCmds.diverges =\n        LatexCmds.uarr =\n            LatexCmds.uparrow =\n                bindVanillaSymbol('\\\\uparrow ', '&uarr;', 'diverges from');\n    LatexCmds.uArr = LatexCmds.Uparrow = bindVanillaSymbol('\\\\Uparrow ', '&uArr;', 'up arrow');\n    LatexCmds.rarr = LatexCmds.rightarrow = bindVanillaSymbol('\\\\rightarrow ', '&rarr;', 'right arrow');\n    LatexCmds.implies = bindBinaryOperator('\\\\Rightarrow ', '&rArr;', 'implies');\n    LatexCmds.rArr = LatexCmds.Rightarrow = bindVanillaSymbol('\\\\Rightarrow ', '&rArr;', 'right arrow');\n    LatexCmds.gets = bindBinaryOperator('\\\\gets ', '&larr;', 'gets');\n    LatexCmds.larr = LatexCmds.leftarrow = bindVanillaSymbol('\\\\leftarrow ', '&larr;', 'left arrow');\n    LatexCmds.impliedby = bindBinaryOperator('\\\\Leftarrow ', '&lArr;', 'implied by');\n    LatexCmds.lArr = LatexCmds.Leftarrow = bindVanillaSymbol('\\\\Leftarrow ', '&lArr;', 'left arrow');\n    LatexCmds.harr =\n        LatexCmds.lrarr =\n            LatexCmds.leftrightarrow =\n                bindVanillaSymbol('\\\\leftrightarrow ', '&harr;', 'left and right arrow');\n    LatexCmds.iff = bindBinaryOperator('\\\\Leftrightarrow ', '&hArr;', 'if and only if');\n    LatexCmds.hArr =\n        LatexCmds.lrArr =\n            LatexCmds.Leftrightarrow =\n                bindVanillaSymbol('\\\\Leftrightarrow ', '&hArr;', 'left and right arrow');\n    LatexCmds.Re =\n        LatexCmds.Real =\n            LatexCmds.real =\n                bindVanillaSymbol('\\\\Re ', '&real;', 'real');\n    LatexCmds.Im =\n        LatexCmds.imag =\n            LatexCmds.image =\n                LatexCmds.imagin =\n                    LatexCmds.imaginary =\n                        LatexCmds.Imaginary =\n                            bindVanillaSymbol('\\\\Im ', '&image;', 'imaginary');\n    LatexCmds.part = LatexCmds.partial = bindVanillaSymbol('\\\\partial ', '&part;', 'partial');\n    LatexCmds.pounds = bindVanillaSymbol('\\\\pounds ', '&pound;');\n    LatexCmds.alef =\n        LatexCmds.alefsym =\n            LatexCmds.aleph =\n                LatexCmds.alephsym =\n                    bindVanillaSymbol('\\\\aleph ', '&alefsym;', 'alef sym');\n    LatexCmds.xist = //LOL\n        LatexCmds.xists =\n            LatexCmds.exist =\n                LatexCmds.exists =\n                    bindVanillaSymbol('\\\\exists ', '&exist;', 'there exists at least 1');\n    LatexCmds.nexists = LatexCmds.nexist = bindVanillaSymbol('\\\\nexists ', '&#8708;', 'there is no');\n    LatexCmds.and =\n        LatexCmds.land =\n            LatexCmds.wedge =\n                bindBinaryOperator('\\\\wedge ', '&and;', 'and');\n    LatexCmds.or =\n        LatexCmds.lor =\n            LatexCmds.vee =\n                bindBinaryOperator('\\\\vee ', '&or;', 'or');\n    LatexCmds.o =\n        LatexCmds.O =\n            LatexCmds.empty =\n                LatexCmds.emptyset =\n                    LatexCmds.oslash =\n                        LatexCmds.Oslash =\n                            LatexCmds.nothing =\n                                LatexCmds.varnothing =\n                                    bindBinaryOperator('\\\\varnothing ', '&empty;', 'nothing');\n    LatexCmds.cup = LatexCmds.union = bindBinaryOperator('\\\\cup ', '&cup;', 'union');\n    LatexCmds.cap =\n        LatexCmds.intersect =\n            LatexCmds.intersection =\n                bindBinaryOperator('\\\\cap ', '&cap;', 'intersection');\n    // FIXME: the correct LaTeX would be ^\\circ but we can't parse that\n    LatexCmds.deg = LatexCmds.degree = bindVanillaSymbol('\\\\degree ', '&deg;', 'degrees');\n    LatexCmds.ang = LatexCmds.angle = bindVanillaSymbol('\\\\angle ', '&ang;', 'angle');\n    LatexCmds.measuredangle = bindVanillaSymbol('\\\\measuredangle ', '&#8737;', 'measured angle');\n    /*********************************\n     * Symbols for Basic Mathematics\n     ********************************/\n    var DigitGroupingChar = /** @class */ (function (_super) {\n        __extends(DigitGroupingChar, _super);\n        function DigitGroupingChar() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DigitGroupingChar.prototype.finalizeTree = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        DigitGroupingChar.prototype.siblingDeleted = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        DigitGroupingChar.prototype.siblingCreated = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        DigitGroupingChar.prototype.sharedSiblingMethod = function (opts, dir) {\n            // don't try to fix digit grouping if the sibling to my right changed (dir === R or\n            // undefined) and it's now a DigitGroupingChar, it will try to fix grouping\n            if (dir !== L && this[R] instanceof DigitGroupingChar)\n                return;\n            this.fixDigitGrouping(opts);\n        };\n        DigitGroupingChar.prototype.fixDigitGrouping = function (opts) {\n            if (!opts.enableDigitGrouping)\n                return;\n            var left = this;\n            var right = this;\n            var spacesFound = 0;\n            var dots = [];\n            var SPACE = '\\\\ ';\n            var DOT = '.';\n            // traverse left as far as possible (starting at this char)\n            var node = left;\n            do {\n                if (/^[0-9]$/.test(node.ctrlSeq)) {\n                    left = node;\n                }\n                else if (node.ctrlSeq === SPACE) {\n                    left = node;\n                    spacesFound += 1;\n                }\n                else if (node.ctrlSeq === DOT) {\n                    left = node;\n                    dots.push(node);\n                }\n                else {\n                    break;\n                }\n            } while ((node = left[L]));\n            // traverse right as far as possible (starting to right of this char)\n            while ((node = right[R])) {\n                if (/^[0-9]$/.test(node.ctrlSeq)) {\n                    right = node;\n                }\n                else if (node.ctrlSeq === SPACE) {\n                    right = node;\n                    spacesFound += 1;\n                }\n                else if (node.ctrlSeq === DOT) {\n                    right = node;\n                    dots.push(node);\n                }\n                else {\n                    break;\n                }\n            }\n            // trim the leading spaces\n            while (right !== left && left && left.ctrlSeq === SPACE) {\n                left = left[R];\n                spacesFound -= 1;\n            }\n            // trim the trailing spaces\n            while (right !== left && right && right.ctrlSeq === SPACE) {\n                right = right[L];\n                spacesFound -= 1;\n            }\n            // happens when you only have a space\n            if (left === right && left && left.ctrlSeq === SPACE)\n                return;\n            var disableFormatting = spacesFound > 0 || dots.length > 1;\n            if (disableFormatting) {\n                this.removeGroupingBetween(left, right);\n            }\n            else if (dots[0]) {\n                if (dots[0] !== left) {\n                    this.addGroupingBetween(dots[0][L], left);\n                }\n                if (dots[0] !== right) {\n                    // we do not show grouping to the right of a decimal place #yet\n                    this.removeGroupingBetween(dots[0][R], right);\n                }\n            }\n            else {\n                this.addGroupingBetween(right, left);\n            }\n        };\n        DigitGroupingChar.prototype.removeGroupingBetween = function (left, right) {\n            var node = left;\n            do {\n                if (node instanceof DigitGroupingChar) {\n                    node.setGroupingClass(undefined);\n                }\n                if (!node || node === right)\n                    break;\n            } while ((node = node[R]));\n        };\n        DigitGroupingChar.prototype.addGroupingBetween = function (start, end) {\n            var node = start;\n            var count = 0;\n            var totalDigits = 0;\n            var node = start;\n            while (node) {\n                totalDigits += 1;\n                if (node === end)\n                    break;\n                node = node[L];\n            }\n            var numDigitsInFirstGroup = totalDigits % 3;\n            if (numDigitsInFirstGroup === 0)\n                numDigitsInFirstGroup = 3;\n            var node = start;\n            while (node) {\n                count += 1;\n                var cls = undefined;\n                // only do grouping if we have at least 4 numbers\n                if (totalDigits >= 4) {\n                    if (count === totalDigits) {\n                        cls = 'mq-group-leading-' + numDigitsInFirstGroup;\n                    }\n                    else if (count % 3 === 0) {\n                        if (count !== totalDigits) {\n                            cls = 'mq-group-start';\n                        }\n                    }\n                    if (!cls) {\n                        cls = 'mq-group-other';\n                    }\n                }\n                if (node instanceof DigitGroupingChar) {\n                    node.setGroupingClass(cls);\n                }\n                if (node === end)\n                    break;\n                node = node[L];\n            }\n        };\n        DigitGroupingChar.prototype.setGroupingClass = function (cls) {\n            // nothing changed (either class is the same or it's still undefined)\n            if (this._groupingClass === cls)\n                return;\n            // remove existing class\n            if (this._groupingClass)\n                this.domFrag().removeClass(this._groupingClass);\n            // add new class\n            if (cls)\n                this.domFrag().addClass(cls);\n            // cache the groupingClass\n            this._groupingClass = cls;\n        };\n        return DigitGroupingChar;\n    }(MQSymbol));\n    var Digit = /** @class */ (function (_super) {\n        __extends(Digit, _super);\n        function Digit(ch, mathspeak) {\n            return _super.call(this, ch, h('span', { class: 'mq-digit' }, [h.text(ch)]), undefined, mathspeak) || this;\n        }\n        Digit.prototype.createLeftOf = function (cursor) {\n            var cursorL = cursor[L];\n            var cursorLL = cursorL && cursorL[L];\n            var cursorParentParentSub = cursor.parent.parent instanceof SupSub\n                ? cursor.parent.parent.sub\n                : undefined;\n            if (cursor.options.autoSubscriptNumerals &&\n                cursor.parent !== cursorParentParentSub &&\n                ((cursorL instanceof Variable && cursorL.isItalic !== false) ||\n                    (cursorL instanceof SupSub &&\n                        cursorLL instanceof Variable &&\n                        cursorLL.isItalic !== false))) {\n                new SubscriptCommand().createLeftOf(cursor);\n                _super.prototype.createLeftOf.call(this, cursor);\n                cursor.insRightOf(cursor.parent.parent);\n            }\n            else\n                _super.prototype.createLeftOf.call(this, cursor);\n        };\n        Digit.prototype.mathspeak = function (opts) {\n            if (opts && opts.createdLeftOf) {\n                var cursor = opts.createdLeftOf;\n                var cursorL = cursor[L];\n                var cursorLL = cursorL && cursorL[L];\n                var cursorParentParentSub = cursor.parent.parent instanceof SupSub\n                    ? cursor.parent.parent.sub\n                    : undefined;\n                if (cursor.options.autoSubscriptNumerals &&\n                    cursor.parent !== cursorParentParentSub &&\n                    ((cursorL instanceof Variable && cursorL.isItalic !== false) ||\n                        (cursor[L] instanceof SupSub &&\n                            cursorLL instanceof Variable &&\n                            cursorLL.isItalic !== false))) {\n                    return 'Subscript ' + _super.prototype.mathspeak.call(this) + ' Baseline';\n                }\n            }\n            return _super.prototype.mathspeak.call(this);\n        };\n        return Digit;\n    }(DigitGroupingChar));\n    var Variable = /** @class */ (function (_super) {\n        __extends(Variable, _super);\n        function Variable(chOrCtrlSeq, html) {\n            return _super.call(this, chOrCtrlSeq, h('var', {}, [html || h.text(chOrCtrlSeq)])) || this;\n        }\n        Variable.prototype.text = function () {\n            var text = this.ctrlSeq || '';\n            if (this.isPartOfOperator) {\n                if (text[0] == '\\\\') {\n                    text = text.slice(1, text.length);\n                }\n                else if (text[text.length - 1] == ' ') {\n                    text = text.slice(0, -1);\n                }\n            }\n            else {\n                if (this[L] &&\n                    !(this[L] instanceof Variable) &&\n                    !(this[L] instanceof BinaryOperator) &&\n                    this[L].ctrlSeq !== '\\\\ ')\n                    text = '*' + text;\n                if (this[R] &&\n                    !(this[R] instanceof BinaryOperator) &&\n                    !(this[R] instanceof SupSub))\n                    text += '*';\n            }\n            return text;\n        };\n        Variable.prototype.mathspeak = function () {\n            var text = this.ctrlSeq || '';\n            if (this.isPartOfOperator ||\n                text.length > 1 ||\n                (this.parent && this.parent.parent && this.parent.parent.isTextBlock())) {\n                return _super.prototype.mathspeak.call(this);\n            }\n            else {\n                // Apple voices in VoiceOver (such as Alex, Bruce, and Victoria) do\n                // some strange pronunciation given certain expressions,\n                // e.g. \"y-2\" is spoken as \"ee minus 2\" (as if the y is short).\n                // Not an ideal solution, but surrounding non-numeric text blocks with quotation marks works.\n                // This bug has been acknowledged by Apple.\n                return '\"' + text + '\"';\n            }\n        };\n        return Variable;\n    }(MQSymbol));\n    function bindVariable(ch, htmlEntity, _unusedMathspeak) {\n        return function () { return new Variable(ch, h.entityText(htmlEntity)); };\n    }\n    Options.prototype.autoCommands = {\n        _maxLength: 0,\n    };\n    baseOptionProcessors.autoCommands = function (cmds) {\n        if (typeof cmds !== 'string' || !/^[a-z]+(?: [a-z]+)*$/i.test(cmds)) {\n            throw '\"' + cmds + '\" not a space-delimited list of only letters';\n        }\n        var list = cmds.split(' ');\n        var dict = {};\n        var maxLength = 0;\n        for (var i = 0; i < list.length; i += 1) {\n            var cmd = list[i];\n            if (cmd.length < 2) {\n                throw 'autocommand \"' + cmd + '\" not minimum length of 2';\n            }\n            if (LatexCmds[cmd] === OperatorName) {\n                throw '\"' + cmd + '\" is a built-in operator name';\n            }\n            dict[cmd] = 1;\n            maxLength = max(maxLength, cmd.length);\n        }\n        dict._maxLength = maxLength;\n        return dict;\n    };\n    Options.prototype.quietEmptyDelimiters = {};\n    baseOptionProcessors.quietEmptyDelimiters = function (dlms) {\n        if (dlms === void 0) { dlms = ''; }\n        var list = dlms.split(' ');\n        var dict = {};\n        for (var i = 0; i < list.length; i += 1) {\n            var dlm = list[i];\n            dict[dlm] = 1;\n        }\n        return dict;\n    };\n    Options.prototype.autoParenthesizedFunctions = { _maxLength: 0 };\n    baseOptionProcessors.autoParenthesizedFunctions = function (cmds) {\n        if (typeof cmds !== 'string' || !/^[a-z]+(?: [a-z]+)*$/i.test(cmds)) {\n            throw '\"' + cmds + '\" not a space-delimited list of only letters';\n        }\n        var list = cmds.split(' ');\n        var dict = {};\n        var maxLength = 0;\n        for (var i = 0; i < list.length; i += 1) {\n            var cmd = list[i];\n            if (cmd.length < 2) {\n                throw 'autocommand \"' + cmd + '\" not minimum length of 2';\n            }\n            dict[cmd] = 1;\n            maxLength = max(maxLength, cmd.length);\n        }\n        dict._maxLength = maxLength;\n        return dict;\n    };\n    var Letter = /** @class */ (function (_super) {\n        __extends(Letter, _super);\n        function Letter(ch) {\n            var _this_1 = _super.call(this, ch) || this;\n            _this_1.letter = ch;\n            return _this_1;\n        }\n        Letter.prototype.checkAutoCmds = function (cursor) {\n            //exit early if in simple subscript and disableAutoSubstitutionInSubscripts is set.\n            if (this.shouldIgnoreSubstitutionInSimpleSubscript(cursor.options)) {\n                return;\n            }\n            //handle autoCommands\n            var autoCmds = cursor.options.autoCommands;\n            var maxLength = autoCmds._maxLength || 0;\n            if (maxLength > 0) {\n                // want longest possible autocommand, so join together longest\n                // sequence of letters\n                var str = '';\n                var l = this;\n                var i = 0;\n                // FIXME: l.ctrlSeq === l.letter checks if first or last in an operator name\n                while (l instanceof Letter && l.ctrlSeq === l.letter && i < maxLength) {\n                    str = l.letter + str;\n                    l = l[L];\n                    i += 1;\n                }\n                // check for an autocommand, going thru substrings longest to shortest\n                while (str.length) {\n                    if (autoCmds.hasOwnProperty(str)) {\n                        l = this;\n                        for (i = 1; l && i < str.length; i += 1, l = l[L])\n                            ;\n                        new Fragment(l, this).remove();\n                        cursor[L] = l[L];\n                        var cmd = LatexCmds[str];\n                        var node;\n                        if (isMQNodeClass(cmd)) {\n                            node = new cmd(str); // TODO - How do we know that this class expects a single str input?\n                        }\n                        else {\n                            node = cmd(str);\n                        }\n                        return node.createLeftOf(cursor);\n                    }\n                    str = str.slice(1);\n                }\n            }\n        };\n        Letter.prototype.autoParenthesize = function (cursor) {\n            //exit early if already parenthesized\n            var right = cursor.parent.getEnd(R);\n            if (right && right instanceof Bracket && right.ctrlSeq === '\\\\left(') {\n                return;\n            }\n            //exit early if in simple subscript and disableAutoSubstitutionInSubscripts is set.\n            if (this.shouldIgnoreSubstitutionInSimpleSubscript(cursor.options)) {\n                return;\n            }\n            //handle autoParenthesized functions\n            var str = '';\n            var l = this;\n            var i = 0;\n            var autoParenthesizedFunctions = cursor.options.autoParenthesizedFunctions;\n            var maxLength = autoParenthesizedFunctions._maxLength || 0;\n            var autoOperatorNames = cursor.options.autoOperatorNames;\n            while (l instanceof Letter && i < maxLength) {\n                (str = l.letter + str), (l = l[L]), (i += 1);\n            }\n            // check for an autoParenthesized functions, going thru substrings longest to shortest\n            // only allow autoParenthesized functions that are also autoOperatorNames\n            while (str.length) {\n                if (autoParenthesizedFunctions.hasOwnProperty(str) &&\n                    autoOperatorNames.hasOwnProperty(str)) {\n                    return cursor.parent.write(cursor, '(');\n                }\n                str = str.slice(1);\n            }\n        };\n        Letter.prototype.createLeftOf = function (cursor) {\n            _super.prototype.createLeftOf.call(this, cursor);\n            this.checkAutoCmds(cursor);\n            this.autoParenthesize(cursor);\n        };\n        Letter.prototype.italicize = function (bool) {\n            this.isItalic = bool;\n            this.isPartOfOperator = !bool;\n            this.domFrag().toggleClass('mq-operator-name', !bool);\n            return this;\n        };\n        Letter.prototype.finalizeTree = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        Letter.prototype.siblingDeleted = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        Letter.prototype.siblingCreated = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        Letter.prototype.sharedSiblingMethod = function (opts, dir) {\n            // don't auto-un-italicize if the sibling to my right changed (dir === R or\n            // undefined) and it's now a Letter, it will un-italicize everyone\n            if (dir !== L && this[R] instanceof Letter)\n                return;\n            this.autoUnItalicize(opts);\n        };\n        Letter.prototype.autoUnItalicize = function (opts) {\n            var autoOps = opts.autoOperatorNames;\n            if (autoOps._maxLength === 0)\n                return;\n            //exit early if in simple subscript and disableAutoSubstitutionInSubscripts is set.\n            if (this.shouldIgnoreSubstitutionInSimpleSubscript(opts)) {\n                return;\n            }\n            // want longest possible operator names, so join together entire contiguous\n            // sequence of letters\n            var str = this.letter;\n            for (var l = this[L]; l instanceof Letter; l = l[L])\n                str = l.letter + str;\n            for (var r = this[R]; r instanceof Letter; r = r[R])\n                str += r.letter;\n            // removeClass and delete flags from all letters before figuring out\n            // which, if any, are part of an operator name\n            var lR = l && l[R];\n            var rL = r && r[L];\n            new Fragment(lR || this.parent.getEnd(L), rL || this.parent.getEnd(R)).each(function (el) {\n                if (el instanceof Letter) {\n                    el.italicize(true)\n                        .domFrag()\n                        .removeClass('mq-first mq-last mq-followed-by-supsub');\n                    el.ctrlSeq = el.letter;\n                }\n                return undefined;\n            });\n            var autoOpsLength = autoOps._maxLength || 0;\n            // check for operator names: at each position from left to right, check\n            // substrings from longest to shortest\n            outer: for (var i = 0, first = l[R] || this.parent.getEnd(L); first && i < str.length; i += 1, first = first[R]) {\n                for (var len = min(autoOpsLength, str.length - i); len > 0; len -= 1) {\n                    var word = str.slice(i, i + len);\n                    var last = undefined; // TODO - TS complaining that we use last before assigning to it\n                    if (autoOps.hasOwnProperty(word)) {\n                        for (var j = 0, letter = first; j < len; j += 1, letter = letter[R]) {\n                            if (letter instanceof Letter) {\n                                letter.italicize(false);\n                                last = letter;\n                            }\n                        }\n                        var isBuiltIn = BuiltInOpNames.hasOwnProperty(word);\n                        first.ctrlSeq =\n                            (isBuiltIn ? '\\\\' : '\\\\operatorname{') + first.ctrlSeq;\n                        last.ctrlSeq += isBuiltIn ? ' ' : '}';\n                        if (TwoWordOpNames.hasOwnProperty(word)) {\n                            var lastL = last[L];\n                            var lastLL = lastL && lastL[L];\n                            var lastLLL = (lastLL && lastLL[L]);\n                            lastLLL.domFrag().addClass('mq-last');\n                        }\n                        if (!this.shouldOmitPadding(first[L]))\n                            first.domFrag().addClass('mq-first');\n                        if (!this.shouldOmitPadding(last[R])) {\n                            if (last[R] instanceof SupSub) {\n                                var supsub = last[R]; // XXX monkey-patching, but what's the right thing here?\n                                // Have operatorname-specific code in SupSub? A CSS-like language to style the\n                                // math tree, but which ignores cursor and selection (which CSS can't)?\n                                var respace = (supsub.siblingCreated =\n                                    supsub.siblingDeleted =\n                                        function () {\n                                            supsub\n                                                .domFrag()\n                                                .toggleClass('mq-after-operator-name', !(supsub[R] instanceof Bracket));\n                                        });\n                                respace();\n                            }\n                            else {\n                                last\n                                    .domFrag()\n                                    .toggleClass('mq-last', !(last[R] instanceof Bracket));\n                            }\n                        }\n                        i += len - 1;\n                        first = last;\n                        continue outer;\n                    }\n                }\n            }\n        };\n        Letter.prototype.shouldOmitPadding = function (node) {\n            // omit padding if no node\n            if (!node)\n                return true;\n            // do not add padding between letter and '.'\n            if (node.ctrlSeq === '.')\n                return true;\n            // do not add padding between letter and binary operator. The\n            // binary operator already has padding\n            if (node instanceof BinaryOperator)\n                return true;\n            if (node instanceof SummationNotation)\n                return true;\n            return false;\n        };\n        return Letter;\n    }(Variable));\n    var BuiltInOpNames = {}; // the set of operator names like \\sin, \\cos, etc that\n    // are built-into LaTeX, see Section 3.17 of the Short Math Guide: http://tinyurl.com/jm9okjc\n    // MathQuill auto-unitalicizes some operator names not in that set, like 'hcf'\n    // and 'arsinh', which must be exported as \\operatorname{hcf} and\n    // \\operatorname{arsinh}. Note: over/under line/arrow \\lim variants like\n    // \\varlimsup are not supported\n    // the set of operator names that MathQuill auto-unitalicizes by default; overridable\n    Options.prototype.autoOperatorNames = defaultAutoOpNames();\n    var TwoWordOpNames = { limsup: 1, liminf: 1, projlim: 1, injlim: 1 };\n    function defaultAutoOpNames() {\n        var AutoOpNames = {\n            _maxLength: 9,\n        };\n        var mostOps = ('arg deg det dim exp gcd hom inf ker lg lim ln log max min sup' +\n            ' limsup liminf injlim projlim Pr').split(' ');\n        for (var i = 0; i < mostOps.length; i += 1) {\n            BuiltInOpNames[mostOps[i]] = AutoOpNames[mostOps[i]] = 1;\n        }\n        var builtInTrigs = 'sin cos tan arcsin arccos arctan sinh cosh tanh sec csc cot coth'.split(\n        // why coth but not sech and csch, LaTeX?\n        ' ');\n        for (var i = 0; i < builtInTrigs.length; i += 1) {\n            BuiltInOpNames[builtInTrigs[i]] = 1;\n        }\n        var autoTrigs = 'sin cos tan sec cosec csc cotan cot ctg'.split(' ');\n        for (var i = 0; i < autoTrigs.length; i += 1) {\n            AutoOpNames[autoTrigs[i]] =\n                AutoOpNames['arc' + autoTrigs[i]] =\n                    AutoOpNames[autoTrigs[i] + 'h'] =\n                        AutoOpNames['ar' + autoTrigs[i] + 'h'] =\n                            AutoOpNames['arc' + autoTrigs[i] + 'h'] =\n                                1;\n        }\n        // compat with some of the nonstandard LaTeX exported by MathQuill\n        // before #247. None of these are real LaTeX commands so, seems safe\n        var moreNonstandardOps = 'gcf hcf lcm proj span'.split(' ');\n        for (var i = 0; i < moreNonstandardOps.length; i += 1) {\n            AutoOpNames[moreNonstandardOps[i]] = 1;\n        }\n        return AutoOpNames;\n    }\n    baseOptionProcessors.autoOperatorNames = function (cmds) {\n        if (typeof cmds !== 'string') {\n            throw '\"' + cmds + '\" not a space-delimited list';\n        }\n        if (!/^[a-z\\|\\-]+(?: [a-z\\|\\-]+)*$/i.test(cmds)) {\n            throw '\"' + cmds + '\" not a space-delimited list of letters or \"|\"';\n        }\n        var list = cmds.split(' ');\n        var dict = {};\n        var maxLength = 0;\n        for (var i = 0; i < list.length; i += 1) {\n            var cmd = list[i];\n            if (cmd.length < 2) {\n                throw '\"' + cmd + '\" not minimum length of 2';\n            }\n            if (cmd.indexOf('|') < 0) {\n                // normal auto operator\n                dict[cmd] = cmd;\n                maxLength = max(maxLength, cmd.length);\n            }\n            else {\n                // this item has a speech-friendly alternative\n                var cmdArray = cmd.split('|');\n                if (cmdArray.length > 2) {\n                    throw '\"' + cmd + '\" has more than 1 mathspeak delimiter';\n                }\n                if (cmdArray[0].length < 2) {\n                    throw '\"' + cmd[0] + '\" not minimum length of 2';\n                }\n                dict[cmdArray[0]] = cmdArray[1].replace(/-/g, ' '); // convert dashes to spaces for the sake of speech\n                maxLength = max(maxLength, cmdArray[0].length);\n            }\n        }\n        dict._maxLength = maxLength;\n        return dict;\n    };\n    var OperatorName = /** @class */ (function (_super) {\n        __extends(OperatorName, _super);\n        function OperatorName(fn) {\n            return _super.call(this, fn || '') || this;\n        }\n        OperatorName.prototype.createLeftOf = function (cursor) {\n            var fn = this.ctrlSeq;\n            for (var i = 0; i < fn.length; i += 1) {\n                new Letter(fn.charAt(i)).createLeftOf(cursor);\n            }\n        };\n        OperatorName.prototype.parser = function () {\n            var fn = this.ctrlSeq;\n            var block = new MathBlock();\n            for (var i = 0; i < fn.length; i += 1) {\n                new Letter(fn.charAt(i)).adopt(block, block.getEnd(R), 0);\n            }\n            return Parser.succeed(block.children());\n        };\n        return OperatorName;\n    }(MQSymbol));\n    for (var fn in Options.prototype.autoOperatorNames)\n        if (Options.prototype.autoOperatorNames.hasOwnProperty(fn)) {\n            LatexCmds[fn] = OperatorName;\n        }\n    LatexCmds.operatorname = /** @class */ (function (_super) {\n        __extends(class_4, _super);\n        function class_4() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_4.prototype.createLeftOf = function () { };\n        class_4.prototype.numBlocks = function () {\n            return 1;\n        };\n        class_4.prototype.parser = function () {\n            return latexMathParser.block.map(function (b) {\n                // Check for the special case of \\operatorname{ans}, which has\n                // a special html representation\n                var isAllLetters = true;\n                var str = '';\n                var children = b.children();\n                children.each(function (child) {\n                    if (child instanceof Letter) {\n                        str += child.letter;\n                    }\n                    else {\n                        isAllLetters = false;\n                    }\n                    return undefined;\n                });\n                if (isAllLetters && str === 'ans') {\n                    return AnsBuilder();\n                }\n                // In cases other than `ans`, just return the children directly\n                return children;\n            });\n        };\n        return class_4;\n    }(MathCommand));\n    LatexCmds.f = /** @class */ (function (_super) {\n        __extends(class_5, _super);\n        function class_5() {\n            var _this_1 = this;\n            var letter = 'f';\n            _this_1 = _super.call(this, letter) || this;\n            _this_1.letter = letter;\n            _this_1.domView = new DOMView(0, function () {\n                return h('var', { class: 'mq-f' }, [h.text('f')]);\n            });\n            return _this_1;\n        }\n        class_5.prototype.italicize = function (bool) {\n            // Why is this necesssary? Does someone replace the `f` at some\n            // point?\n            this.domFrag().eachElement(function (el) { return (el.textContent = 'f'); });\n            this.domFrag().toggleClass('mq-f', bool);\n            return _super.prototype.italicize.call(this, bool);\n        };\n        return class_5;\n    }(Letter));\n    // VanillaSymbol's\n    LatexCmds[' '] = LatexCmds.space = function () {\n        return new DigitGroupingChar('\\\\ ', h('span', {}, [h.text(U_NO_BREAK_SPACE)]), ' ');\n    };\n    LatexCmds['.'] = function () {\n        return new DigitGroupingChar('.', h('span', { class: 'mq-digit' }, [h.text('.')]), '.');\n    };\n    LatexCmds[\"'\"] = LatexCmds.prime = bindVanillaSymbol(\"'\", '&prime;', 'prime');\n    LatexCmds['\\u2033'] = LatexCmds.dprime = bindVanillaSymbol('\\u2033', '&Prime;', 'double prime');\n    LatexCmds.backslash = bindVanillaSymbol('\\\\backslash ', '\\\\', 'backslash');\n    if (!CharCmds['\\\\'])\n        CharCmds['\\\\'] = LatexCmds.backslash;\n    LatexCmds.$ = bindVanillaSymbol('\\\\$', '$', 'dollar');\n    LatexCmds.square = bindVanillaSymbol('\\\\square ', '\\u25A1', 'square');\n    LatexCmds.mid = bindVanillaSymbol('\\\\mid ', '\\u2223', 'mid');\n    // does not use Symbola font\n    var NonSymbolaSymbol = /** @class */ (function (_super) {\n        __extends(NonSymbolaSymbol, _super);\n        function NonSymbolaSymbol(ch, html, _unusedMathspeak) {\n            return _super.call(this, ch, h('span', { class: 'mq-nonSymbola' }, [html || h.text(ch)])) || this;\n        }\n        return NonSymbolaSymbol;\n    }(MQSymbol));\n    LatexCmds['@'] = function () { return new NonSymbolaSymbol('@'); };\n    LatexCmds['&'] = function () {\n        return new NonSymbolaSymbol('\\\\&', h.entityText('&amp;'), 'and');\n    };\n    LatexCmds['%'] = /** @class */ (function (_super) {\n        __extends(class_6, _super);\n        function class_6() {\n            return _super.call(this, '\\\\%', h.text('%'), 'percent') || this;\n        }\n        class_6.prototype.parser = function () {\n            var optWhitespace = Parser.optWhitespace;\n            var string = Parser.string;\n            // Parse `\\%\\operatorname{of}` as special `percentof` node so that\n            // it will be serialized properly and deleted as a unit.\n            return optWhitespace\n                .then(string('\\\\operatorname{of}').map(function () {\n                return PercentOfBuilder();\n            }))\n                .or(_super.prototype.parser.call(this));\n        };\n        return class_6;\n    }(NonSymbolaSymbol));\n    LatexCmds['\\u2225'] = LatexCmds.parallel = bindVanillaSymbol('\\\\parallel ', '&#x2225;', 'parallel');\n    LatexCmds['\\u2226'] = LatexCmds.nparallel = bindVanillaSymbol('\\\\nparallel ', '&#x2226;', 'not parallel');\n    LatexCmds['\\u27c2'] = LatexCmds.perp = bindVanillaSymbol('\\\\perp ', '&#x27C2;', 'perpendicular');\n    //the following are all Greek to me, but this helped a lot: http://www.ams.org/STIX/ion/stixsig03.html\n    //lowercase Greek letter variables\n    LatexCmds.alpha =\n        LatexCmds.beta =\n            LatexCmds.gamma =\n                LatexCmds.delta =\n                    LatexCmds.zeta =\n                        LatexCmds.eta =\n                            LatexCmds.theta =\n                                LatexCmds.iota =\n                                    LatexCmds.kappa =\n                                        LatexCmds.mu =\n                                            LatexCmds.nu =\n                                                LatexCmds.xi =\n                                                    LatexCmds.rho =\n                                                        LatexCmds.sigma =\n                                                            LatexCmds.tau =\n                                                                LatexCmds.chi =\n                                                                    LatexCmds.psi =\n                                                                        LatexCmds.omega =\n                                                                            function (latex) {\n                                                                                return new Variable('\\\\' + latex + ' ', h.entityText('&' + latex + ';'));\n                                                                            };\n    //why can't anybody FUCKING agree on these\n    LatexCmds.phi = bindVariable('\\\\phi ', '&#981;', 'phi'); //W3C or Unicode?\n    LatexCmds.phiv = LatexCmds.varphi = bindVariable('\\\\varphi ', '&phi;', 'phi'); //Elsevier and 9573-13 //AMS and LaTeX\n    LatexCmds.epsilon = bindVariable('\\\\epsilon ', '&#1013;', 'epsilon'); //W3C or Unicode?\n    LatexCmds.epsiv = LatexCmds.varepsilon = bindVariable(\n    //Elsevier and 9573-13 //AMS and LaTeX\n    '\\\\varepsilon ', '&epsilon;', 'epsilon');\n    LatexCmds.piv = LatexCmds.varpi = bindVariable('\\\\varpi ', '&piv;', 'piv'); //W3C/Unicode and Elsevier and 9573-13 //AMS and LaTeX\n    LatexCmds.sigmaf = //W3C/Unicode\n        LatexCmds.sigmav = //Elsevier\n            LatexCmds.varsigma = //LaTeX\n                bindVariable('\\\\varsigma ', '&sigmaf;', 'sigma');\n    LatexCmds.thetav = //Elsevier and 9573-13\n        LatexCmds.vartheta = //AMS and LaTeX\n            LatexCmds.thetasym = //W3C/Unicode\n                bindVariable('\\\\vartheta ', '&thetasym;', 'theta');\n    LatexCmds.upsilon = LatexCmds.upsi = bindVariable(\n    //AMS and LaTeX and W3C/Unicode //Elsevier and 9573-13\n    '\\\\upsilon ', '&upsilon;', 'upsilon');\n    //these aren't even mentioned in the HTML character entity references\n    LatexCmds.gammad = //Elsevier\n        LatexCmds.Gammad = //9573-13 -- WTF, right? I dunno if this was a typo in the reference (see above)\n            LatexCmds.digamma = //LaTeX\n                bindVariable('\\\\digamma ', '&#989;', 'gamma');\n    LatexCmds.kappav = LatexCmds.varkappa = bindVariable(\n    //Elsevier //AMS and LaTeX\n    '\\\\varkappa ', '&#1008;', 'kappa');\n    LatexCmds.rhov = LatexCmds.varrho = bindVariable('\\\\varrho ', '&#1009;', 'rho'); //Elsevier and 9573-13 //AMS and LaTeX\n    //Greek constants, look best in non-italicized Times New Roman\n    LatexCmds.pi = LatexCmds['\\u03c0'] = function () {\n        return new NonSymbolaSymbol('\\\\pi ', h.entityText('&pi;'), 'pi');\n    };\n    LatexCmds.lambda = function () {\n        return new NonSymbolaSymbol('\\\\lambda ', h.entityText('&lambda;'), 'lambda');\n    };\n    //uppercase greek letters\n    LatexCmds.Upsilon = //LaTeX\n        LatexCmds.Upsi = //Elsevier and 9573-13\n            LatexCmds.upsih = //W3C/Unicode \"upsilon with hook\"\n                LatexCmds.Upsih = //'cos it makes sense to me\n                    function () {\n                        return new MQSymbol('\\\\Upsilon ', h('var', { style: 'font-family: serif' }, [h.entityText('&upsih;')]), 'capital upsilon');\n                    }; //Symbola's 'upsilon with a hook' is a capital Y without hooks :(\n    //other symbols with the same LaTeX command and HTML character entity reference\n    LatexCmds.Gamma =\n        LatexCmds.Delta =\n            LatexCmds.Theta =\n                LatexCmds.Lambda =\n                    LatexCmds.Xi =\n                        LatexCmds.Pi =\n                            LatexCmds.Sigma =\n                                LatexCmds.Phi =\n                                    LatexCmds.Psi =\n                                        LatexCmds.Omega =\n                                            LatexCmds.forall =\n                                                function (latex) {\n                                                    return new VanillaSymbol('\\\\' + latex + ' ', h.entityText('&' + latex + ';'));\n                                                };\n    // symbols that aren't a single MathCommand, but are instead a whole\n    // Fragment. Creates the Fragment from a LaTeX string\n    var LatexFragment = /** @class */ (function (_super) {\n        __extends(LatexFragment, _super);\n        function LatexFragment(latex) {\n            var _this_1 = _super.call(this) || this;\n            _this_1.latexStr = latex;\n            return _this_1;\n        }\n        LatexFragment.prototype.createLeftOf = function (cursor) {\n            var block = latexMathParser.parse(this.latexStr);\n            block\n                .children()\n                .adopt(cursor.parent, cursor[L], cursor[R]);\n            cursor[L] = block.getEnd(R);\n            domFrag(block.html()).insertBefore(cursor.domFrag());\n            block.finalizeInsert(cursor.options, cursor);\n            var blockEndsR = block.getEnd(R);\n            var blockEndsRR = blockEndsR && blockEndsR[R];\n            if (blockEndsRR)\n                blockEndsRR.siblingCreated(cursor.options, L);\n            var blockEndsL = block.getEnd(L);\n            var blockEndsLL = blockEndsL && blockEndsL[L];\n            if (blockEndsLL)\n                blockEndsLL.siblingCreated(cursor.options, R);\n            cursor.parent.bubble(function (node) {\n                node.reflow();\n                return undefined;\n            });\n        };\n        LatexFragment.prototype.mathspeak = function () {\n            return latexMathParser.parse(this.latexStr).mathspeak();\n        };\n        LatexFragment.prototype.parser = function () {\n            var frag = latexMathParser.parse(this.latexStr).children();\n            return Parser.succeed(frag);\n        };\n        return LatexFragment;\n    }(MathCommand));\n    // for what seems to me like [stupid reasons][1], Unicode provides\n    // subscripted and superscripted versions of all ten Arabic numerals,\n    // as well as [so-called \"vulgar fractions\"][2].\n    // Nobody really cares about most of them, but some of them actually\n    // predate Unicode, dating back to [ISO-8859-1][3], apparently also\n    // known as \"Latin-1\", which among other things [Windows-1252][4]\n    // largely coincides with, so Microsoft Word sometimes inserts them\n    // and they get copy-pasted into MathQuill.\n    //\n    // (Irrelevant but funny story: though not a superset of Latin-1 aka\n    // ISO-8859-1, Windows-1252 **is** a strict superset of the \"closely\n    // related but distinct\"[3] \"ISO 8859-1\" -- see the lack of a dash\n    // after \"ISO\"? Completely different character set, like elephants vs\n    // elephant seals, or \"Zombies\" vs \"Zombie Redneck Torture Family\".\n    // What kind of idiot would get them confused.\n    // People in fact got them confused so much, it was so common to\n    // mislabel Windows-1252 text as ISO-8859-1, that most modern web\n    // browsers and email clients treat the MIME charset of ISO-8859-1\n    // as actually Windows-1252, behavior now standard in the HTML5 spec.)\n    //\n    // [1]: http://en.wikipedia.org/wiki/Unicode_subscripts_andsuper_scripts\n    // [2]: http://en.wikipedia.org/wiki/Number_Forms\n    // [3]: http://en.wikipedia.org/wiki/ISO/IEC_8859-1\n    // [4]: http://en.wikipedia.org/wiki/Windows-1252\n    LatexCmds['\\u2070'] = function () { return new LatexFragment('^0'); };\n    LatexCmds['\\u00b9'] = function () { return new LatexFragment('^1'); };\n    LatexCmds['\\u00b2'] = function () { return new LatexFragment('^2'); };\n    LatexCmds['\\u00b3'] = function () { return new LatexFragment('^3'); };\n    LatexCmds['\\u2074'] = function () { return new LatexFragment('^4'); };\n    LatexCmds['\\u2075'] = function () { return new LatexFragment('^5'); };\n    LatexCmds['\\u2076'] = function () { return new LatexFragment('^6'); };\n    LatexCmds['\\u2077'] = function () { return new LatexFragment('^7'); };\n    LatexCmds['\\u2078'] = function () { return new LatexFragment('^8'); };\n    LatexCmds['\\u2079'] = function () { return new LatexFragment('^9'); };\n    LatexCmds['\\u00bc'] = function () { return new LatexFragment('\\\\frac14'); };\n    LatexCmds['\\u00bd'] = function () { return new LatexFragment('\\\\frac12'); };\n    LatexCmds['\\u00be'] = function () { return new LatexFragment('\\\\frac34'); };\n    // this is a hack to make pasting the \\u221a symbol\n    // actually insert a sqrt command. This isn't ideal,\n    // but it's way better than what we have now. I think\n    // before we invest any more time into this single character\n    // we should consider how to make the pipe (|) automatically\n    // insert absolute value. We also will want the percent (%)\n    // to expand to '% of'. I've always just thought mathquill's\n    // ability to handle pasted latex magical until I started actually\n    // testing it. It's a lot more buggy that I previously thought.\n    //\n    // KNOWN ISSUES:\n    // 1) pasting \\u221a does not put focus in side the sqrt symbol\n    // 2) pasting \\u221a2 puts the 2 outside of the sqrt symbol.\n    //\n    // The first issue seems like we could invest more time into this to\n    // fix it, but doesn't feel worth special casing. I think we'd want\n    // to address it by addressing ALL pasting issues.\n    //\n    // The second issue seems like it might go away too if you fix paste to\n    // act more like simply typing the characters out. I'd be scared to try\n    // to make that change because I'm fairly confident I'd break something\n    // around handling valid latex as latex rather than treating it as keystrokes.\n    LatexCmds['\\u221a'] = function () { return new LatexFragment('\\\\sqrt{}'); };\n    // Binary operator determination is used in several contexts for PlusMinus nodes and their descendants.\n    // For instance, we set the item's class name based on this factor, and also assign different mathspeak values (plus vs positive, negative vs minus).\n    function isBinaryOperator(node) {\n        if (!node)\n            return false;\n        var nodeL = node[L];\n        if (nodeL) {\n            // If the left sibling is a binary operator or a separator (comma, semicolon, colon, space)\n            // or an open bracket (open parenthesis, open square bracket)\n            // consider the operator to be unary\n            if (nodeL instanceof BinaryOperator ||\n                /^(\\\\ )|[,;:\\(\\[]$/.test(nodeL.ctrlSeq)) {\n                return false;\n            }\n        }\n        else if (node.parent &&\n            node.parent.parent &&\n            node.parent.parent.isStyleBlock()) {\n            //if we are in a style block at the leftmost edge, determine unary/binary based on\n            //the style block\n            //this allows style blocks to be transparent for unary/binary purposes\n            return isBinaryOperator(node.parent.parent);\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    var PlusMinus = /** @class */ (function (_super) {\n        __extends(class_7, _super);\n        function class_7(ch, html, mathspeak) {\n            return _super.call(this, ch, html, undefined, mathspeak, true) || this;\n        }\n        class_7.prototype.contactWeld = function (cursor, dir) {\n            this.sharedSiblingMethod(cursor.options, dir);\n        };\n        class_7.prototype.siblingCreated = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        class_7.prototype.siblingDeleted = function (opts, dir) {\n            this.sharedSiblingMethod(opts, dir);\n        };\n        class_7.prototype.sharedSiblingMethod = function (_opts, dir) {\n            if (dir === R)\n                return; // ignore if sibling only changed on the right\n            this.domFrag().oneElement().className = isBinaryOperator(this)\n                ? 'mq-binary-operator'\n                : '';\n            return this;\n        };\n        return class_7;\n    }(BinaryOperator));\n    LatexCmds['+'] = /** @class */ (function (_super) {\n        __extends(class_8, _super);\n        function class_8() {\n            return _super.call(this, '+', h.text('+')) || this;\n        }\n        class_8.prototype.mathspeak = function () {\n            return isBinaryOperator(this) ? 'plus' : 'positive';\n        };\n        return class_8;\n    }(PlusMinus));\n    //yes, these are different dashes, en-dash, em-dash, unicode minus, actual dash\n    var MinusNode = /** @class */ (function (_super) {\n        __extends(MinusNode, _super);\n        function MinusNode() {\n            return _super.call(this, '-', h.entityText('&minus;')) || this;\n        }\n        MinusNode.prototype.mathspeak = function () {\n            return isBinaryOperator(this) ? 'minus' : 'negative';\n        };\n        return MinusNode;\n    }(PlusMinus));\n    LatexCmds['\\u2212'] = LatexCmds['\\u2014'] = LatexCmds['\\u2013'] = LatexCmds['-'] = MinusNode;\n    LatexCmds['\\u00b1'] =\n        LatexCmds.pm =\n            LatexCmds.plusmn =\n                LatexCmds.plusminus =\n                    function () { return new PlusMinus('\\\\pm ', h.entityText('&plusmn;'), 'plus-or-minus'); };\n    LatexCmds.mp =\n        LatexCmds.mnplus =\n            LatexCmds.minusplus =\n                function () { return new PlusMinus('\\\\mp ', h.entityText('&#8723;'), 'minus-or-plus'); };\n    CharCmds['*'] =\n        LatexCmds.sdot =\n            LatexCmds.cdot =\n                bindBinaryOperator('\\\\cdot ', '&middot;', '*', 'times'); //semantically should be &sdot;, but &middot; looks better\n    var To = /** @class */ (function (_super) {\n        __extends(To, _super);\n        function To() {\n            return _super.call(this, '\\\\to ', h.entityText('&rarr;'), 'to') || this;\n        }\n        To.prototype.deleteTowards = function (dir, cursor) {\n            if (dir === L) {\n                var l = cursor[L];\n                new Fragment(l, this).remove();\n                cursor[L] = l[L];\n                new MinusNode().createLeftOf(cursor);\n                cursor[L].bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.deleteTowards.call(this, dir, cursor);\n        };\n        return To;\n    }(BinaryOperator));\n    LatexCmds['\\u2192'] = LatexCmds.to = To;\n    var Inequality = /** @class */ (function (_super) {\n        __extends(Inequality, _super);\n        function Inequality(data, strict) {\n            var _this_1 = this;\n            var strictness = strict ? 'Strict' : '';\n            _this_1 = _super.call(this, data[\"ctrlSeq\".concat(strictness)], h.entityText(data[\"htmlEntity\".concat(strictness)]), data[\"text\".concat(strictness)], data[\"mathspeak\".concat(strictness)]) || this;\n            _this_1.data = data;\n            _this_1.strict = strict;\n            return _this_1;\n        }\n        Inequality.prototype.swap = function (strict) {\n            this.strict = strict;\n            var strictness = strict ? 'Strict' : '';\n            this.ctrlSeq = this.data[\"ctrlSeq\".concat(strictness)];\n            this.domFrag()\n                .children()\n                .replaceWith(domFrag(h.entityText(this.data[\"htmlEntity\".concat(strictness)])));\n            this.textTemplate = [this.data[\"text\".concat(strictness)]];\n            this.mathspeakName = this.data[\"mathspeak\".concat(strictness)];\n        };\n        Inequality.prototype.deleteTowards = function (dir, cursor) {\n            if (dir === L && !this.strict) {\n                this.swap(true);\n                this.bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.deleteTowards.call(this, dir, cursor);\n        };\n        return Inequality;\n    }(BinaryOperator));\n    var less = {\n        ctrlSeq: '\\\\le ',\n        htmlEntity: '&le;',\n        text: '\\u2264',\n        mathspeak: 'less than or equal to',\n        ctrlSeqStrict: '<',\n        htmlEntityStrict: '&lt;',\n        textStrict: '<',\n        mathspeakStrict: 'less than',\n    };\n    var greater = {\n        ctrlSeq: '\\\\ge ',\n        htmlEntity: '&ge;',\n        text: '\\u2265',\n        mathspeak: 'greater than or equal to',\n        ctrlSeqStrict: '>',\n        htmlEntityStrict: '&gt;',\n        textStrict: '>',\n        mathspeakStrict: 'greater than',\n    };\n    var Greater = /** @class */ (function (_super) {\n        __extends(Greater, _super);\n        function Greater() {\n            return _super.call(this, greater, true) || this;\n        }\n        Greater.prototype.createLeftOf = function (cursor) {\n            var cursorL = cursor[L];\n            if (cursorL instanceof BinaryOperator && cursorL.ctrlSeq === '-') {\n                var l = cursorL;\n                cursor[L] = l[L];\n                l.remove();\n                new To().createLeftOf(cursor);\n                cursor[L].bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.createLeftOf.call(this, cursor);\n        };\n        return Greater;\n    }(Inequality));\n    LatexCmds['<'] = LatexCmds.lt = function () { return new Inequality(less, true); };\n    LatexCmds['>'] = LatexCmds.gt = Greater;\n    LatexCmds['\\u2264'] =\n        LatexCmds.le =\n            LatexCmds.leq =\n                function () { return new Inequality(less, false); };\n    LatexCmds['\\u2265'] =\n        LatexCmds.ge =\n            LatexCmds.geq =\n                function () { return new Inequality(greater, false); };\n    LatexCmds.infty =\n        LatexCmds.infin =\n            LatexCmds.infinity =\n                bindVanillaSymbol('\\\\infty ', '&infin;', 'infinity');\n    LatexCmds['\\u2260'] =\n        LatexCmds.ne =\n            LatexCmds.neq =\n                bindBinaryOperator('\\\\ne ', '&ne;', 'not equal');\n    var Equality = /** @class */ (function (_super) {\n        __extends(Equality, _super);\n        function Equality() {\n            return _super.call(this, '=', h.text('='), '=', 'equals') || this;\n        }\n        Equality.prototype.createLeftOf = function (cursor) {\n            var cursorL = cursor[L];\n            if (cursorL instanceof Inequality && cursorL.strict) {\n                cursorL.swap(false);\n                cursorL.bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.createLeftOf.call(this, cursor);\n        };\n        return Equality;\n    }(BinaryOperator));\n    LatexCmds['='] = Equality;\n    LatexCmds['\\u00d7'] = LatexCmds.times = bindBinaryOperator('\\\\times ', '&times;', '[x]', 'times');\n    LatexCmds['\\u00f7'] =\n        LatexCmds.div =\n            LatexCmds.divide =\n                LatexCmds.divides =\n                    bindBinaryOperator('\\\\div ', '&divide;', '[/]', 'over');\n    var Sim = /** @class */ (function (_super) {\n        __extends(Sim, _super);\n        function Sim() {\n            return _super.call(this, '\\\\sim ', h.text('~'), '~', 'tilde') || this;\n        }\n        Sim.prototype.createLeftOf = function (cursor) {\n            if (cursor[L] instanceof Sim) {\n                var l = cursor[L];\n                cursor[L] = l[L];\n                l.remove();\n                new Approx().createLeftOf(cursor);\n                cursor[L].bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.createLeftOf.call(this, cursor);\n        };\n        return Sim;\n    }(BinaryOperator));\n    var Approx = /** @class */ (function (_super) {\n        __extends(Approx, _super);\n        function Approx() {\n            return _super.call(this, '\\\\approx ', h.entityText('&approx;'), '\\u2248', 'approximately equal') || this;\n        }\n        Approx.prototype.deleteTowards = function (dir, cursor) {\n            if (dir === L) {\n                var l = cursor[L];\n                new Fragment(l, this).remove();\n                cursor[L] = l[L];\n                new Sim().createLeftOf(cursor);\n                cursor[L].bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n                return;\n            }\n            _super.prototype.deleteTowards.call(this, dir, cursor);\n        };\n        return Approx;\n    }(BinaryOperator));\n    LatexCmds.tildeNbsp = bindVanillaSymbol('~', U_NO_BREAK_SPACE, ' ');\n    LatexCmds.sim = Sim;\n    LatexCmds['\\u2248'] = LatexCmds.approx = Approx;\n    // When interpreting raw LaTeX, we can either evaluate the tilde as its standard nonbreaking space\n    // or transform it to the \\sim operator depending on whether the \"interpretTildeAsSim\" configuration option is set.\n    // Tilde symbols input from a keyboard will always be transformed to \\sim.\n    CharCmds['~'] = LatexCmds.sim;\n    LatexCmds['~'] = LatexCmds.tildeNbsp;\n    baseOptionProcessors.interpretTildeAsSim = function (val) {\n        var interpretAsSim = !!val;\n        if (interpretAsSim) {\n            LatexCmds['~'] = LatexCmds.sim;\n        }\n        else {\n            LatexCmds['~'] = LatexCmds.tildeNbsp;\n        }\n        return interpretAsSim;\n    };\n    /***************************\n     * Commands and Operators.\n     **************************/\n    var SVG_SYMBOLS = {\n        sqrt: {\n            width: '',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 32 54' }, [\n                    h('path', {\n                        d: 'M0 33 L7 27 L12.5 47 L13 47 L30 0 L32 0 L13 54 L11 54 L4.5 31 L0 33',\n                    }),\n                ]);\n            },\n        },\n        '|': {\n            width: '.4em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 10 54' }, [\n                    h('path', { d: 'M4.4 0 L4.4 54 L5.6 54 L5.6 0' }),\n                ]);\n            },\n        },\n        '[': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 11 24' }, [\n                    h('path', { d: 'M8 0 L3 0 L3 24 L8 24 L8 23 L4 23 L4 1 L8 1' }),\n                ]);\n            },\n        },\n        ']': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 11 24' }, [\n                    h('path', { d: 'M3 0 L8 0 L8 24 L3 24 L3 23 L7 23 L7 1 L3 1' }),\n                ]);\n            },\n        },\n        '(': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '3 0 106 186' }, [\n                    h('path', {\n                        d: 'M85 0 A61 101 0 0 0 85 186 L75 186 A75 101 0 0 1 75 0',\n                    }),\n                ]);\n            },\n        },\n        ')': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '3 0 106 186' }, [\n                    h('path', {\n                        d: 'M24 0 A61 101 0 0 1 24 186 L34 186 A75 101 0 0 0 34 0',\n                    }),\n                ]);\n            },\n        },\n        '{': {\n            width: '.7em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '10 0 210 350' }, [\n                    h('path', {\n                        d: 'M170 0 L170 6 A47 52 0 0 0 123 60 L123 127 A35 48 0 0 1 88 175 A35 48 0 0 1 123 223 L123 290 A47 52 0 0 0 170 344 L170 350 L160 350 A58 49 0 0 1 102 301 L103 220 A45 40 0 0 0 58 180 L58 170 A45 40 0 0 0 103 130 L103 49 A58 49 0 0 1 161 0',\n                    }),\n                ]);\n            },\n        },\n        '}': {\n            width: '.7em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '10 0 210 350' }, [\n                    h('path', {\n                        d: 'M60 0 L60 6 A47 52 0 0 1 107 60 L107 127 A35 48 0 0 0 142 175 A35 48 0 0 0 107 223 L107 290 A47 52 0 0 1 60 344 L60 350 L70 350 A58 49 0 0 0 128 301 L127 220 A45 40 0 0 1 172 180 L172 170 A45 40 0 0 1 127 130 L127 49 A58 49 0 0 0 70 0',\n                    }),\n                ]);\n            },\n        },\n        '&#8741;': {\n            width: '.7em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 10 54' }, [\n                    h('path', { d: 'M3.2 0 L3.2 54 L4 54 L4 0 M6.8 0 L6.8 54 L6 54 L6 0' }),\n                ]);\n            },\n        },\n        '&lang;': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 10 54' }, [\n                    h('path', { d: 'M6.8 0 L3.2 27 L6.8 54 L7.8 54 L4.2 27 L7.8 0' }),\n                ]);\n            },\n        },\n        '&rang;': {\n            width: '.55em',\n            html: function () {\n                return h('svg', { preserveAspectRatio: 'none', viewBox: '0 0 10 54' }, [\n                    h('path', { d: 'M3.2 0 L6.8 27 L3.2 54 L2.2 54 L5.8 27 L2.2 0' }),\n                ]);\n            },\n        },\n    };\n    var Style = /** @class */ (function (_super) {\n        __extends(Style, _super);\n        function Style(ctrlSeq, tagName, attrs, ariaLabel, opts) {\n            var _this_1 = _super.call(this, ctrlSeq, new DOMView(1, function (blocks) { return h.block(tagName, attrs, blocks[0]); })) || this;\n            _this_1.ariaLabel = ariaLabel || ctrlSeq.replace(/^\\\\/, '');\n            _this_1.mathspeakTemplate = [\n                'Start' + _this_1.ariaLabel + ',',\n                'End' + _this_1.ariaLabel,\n            ];\n            // In most cases, mathspeak should announce the start and end of style blocks.\n            // There is one exception currently (mathrm).\n            _this_1.shouldNotSpeakDelimiters = opts && opts.shouldNotSpeakDelimiters;\n            return _this_1;\n        }\n        Style.prototype.mathspeak = function (opts) {\n            if (!this.shouldNotSpeakDelimiters || (opts && opts.ignoreShorthand)) {\n                return _super.prototype.mathspeak.call(this);\n            }\n            return this.foldChildren('', function (speech, block) {\n                return speech + ' ' + block.mathspeak(opts);\n            }).trim();\n        };\n        return Style;\n    }(MathCommand));\n    //fonts\n    LatexCmds.mathrm = /** @class */ (function (_super) {\n        __extends(mathrm, _super);\n        function mathrm() {\n            return _super.call(this, '\\\\mathrm', 'span', { class: 'mq-roman mq-font' }, 'Roman Font', {\n                shouldNotSpeakDelimiters: true,\n            }) || this;\n        }\n        mathrm.prototype.isTextBlock = function () {\n            return true;\n        };\n        return mathrm;\n    }(Style));\n    LatexCmds.mathit = function () {\n        return new Style('\\\\mathit', 'i', { class: 'mq-font' }, 'Italic Font');\n    };\n    LatexCmds.mathbf = function () {\n        return new Style('\\\\mathbf', 'b', { class: 'mq-font' }, 'Bold Font');\n    };\n    LatexCmds.mathsf = function () {\n        return new Style('\\\\mathsf', 'span', { class: 'mq-sans-serif mq-font' }, 'Serif Font');\n    };\n    LatexCmds.mathtt = function () {\n        return new Style('\\\\mathtt', 'span', { class: 'mq-monospace mq-font' }, 'Math Text');\n    };\n    //text-decoration\n    LatexCmds.underline = function () {\n        return new Style('\\\\underline', 'span', { class: 'mq-non-leaf mq-underline' }, 'Underline');\n    };\n    LatexCmds.overline = LatexCmds.bar = function () {\n        return new Style('\\\\overline', 'span', { class: 'mq-non-leaf mq-overline' }, 'Overline');\n    };\n    LatexCmds.overrightarrow = function () {\n        return new Style('\\\\overrightarrow', 'span', { class: 'mq-non-leaf mq-overarrow mq-arrow-right' }, 'Over Right Arrow');\n    };\n    LatexCmds.overleftarrow = function () {\n        return new Style('\\\\overleftarrow', 'span', { class: 'mq-non-leaf mq-overarrow mq-arrow-left' }, 'Over Left Arrow');\n    };\n    LatexCmds.overleftrightarrow = function () {\n        return new Style('\\\\overleftrightarrow ', 'span', { class: 'mq-non-leaf mq-overarrow mq-arrow-leftright' }, 'Over Left and Right Arrow');\n    };\n    LatexCmds.overarc = function () {\n        return new Style('\\\\overarc', 'span', { class: 'mq-non-leaf mq-overarc' }, 'Over Arc');\n    };\n    LatexCmds.dot = function () {\n        return new MathCommand('\\\\dot', new DOMView(1, function (blocks) {\n            return h('span', { class: 'mq-non-leaf' }, [\n                h('span', { class: 'mq-dot-recurring-inner' }, [\n                    h('span', { class: 'mq-dot-recurring' }, [h.text(U_DOT_ABOVE)]),\n                    h.block('span', { class: 'mq-empty-box' }, blocks[0]),\n                ]),\n            ]);\n        }));\n    };\n    // `\\textcolor{color}{math}` will apply a color to the given math content, where\n    // `color` is any valid CSS Color Value (see [SitePoint docs][] (recommended),\n    // [Mozilla docs][], or [W3C spec][]).\n    //\n    // [SitePoint docs]: http://reference.sitepoint.com/css/colorvalues\n    // [Mozilla docs]: https://developer.mozilla.org/en-US/docs/CSS/color_value#Values\n    // [W3C spec]: http://dev.w3.org/csswg/css3-color/#colorunits\n    LatexCmds.textcolor = /** @class */ (function (_super) {\n        __extends(class_9, _super);\n        function class_9() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_9.prototype.setColor = function (color) {\n            this.color = color;\n            this.domView = new DOMView(1, function (blocks) {\n                return h.block('span', { class: 'mq-textcolor', style: 'color:' + color }, blocks[0]);\n            });\n            this.ariaLabel = color.replace(/^\\\\/, '');\n            this.mathspeakTemplate = [\n                'Start ' + this.ariaLabel + ',',\n                'End ' + this.ariaLabel,\n            ];\n        };\n        class_9.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            var blocks0 = this.blocks[0];\n            ctx.latex += '\\\\textcolor{' + this.color + '}{';\n            blocks0.latexRecursive(ctx);\n            ctx.latex += '}';\n            this.checkCursorContextClose(ctx);\n        };\n        class_9.prototype.parser = function () {\n            var _this_1 = this;\n            var optWhitespace = Parser.optWhitespace;\n            var string = Parser.string;\n            var regex = Parser.regex;\n            return optWhitespace\n                .then(string('{'))\n                .then(regex(/^[#\\w\\s.,()%-]*/))\n                .skip(string('}'))\n                .then(function (color) {\n                _this_1.setColor(color);\n                return _super.prototype.parser.call(_this_1);\n            });\n        };\n        class_9.prototype.isStyleBlock = function () {\n            return true;\n        };\n        return class_9;\n    }(MathCommand));\n    // Very similar to the \\textcolor command, but will add the given CSS class.\n    // Usage: \\class{classname}{math}\n    // Note regex that whitelists valid CSS classname characters:\n    // https://github.com/mathquill/mathquill/pull/191#discussion_r4327442\n    var Class = (LatexCmds['class'] = /** @class */ (function (_super) {\n        __extends(class_10, _super);\n        function class_10() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_10.prototype.parser = function () {\n            var _this_1 = this;\n            var string = Parser.string, regex = Parser.regex;\n            return Parser.optWhitespace\n                .then(string('{'))\n                .then(regex(/^[-\\w\\s\\\\\\xA0-\\xFF]*/))\n                .skip(string('}'))\n                .then(function (cls) {\n                _this_1.cls = cls || '';\n                _this_1.domView = new DOMView(1, function (blocks) {\n                    return h.block('span', { class: \"mq-class \".concat(cls) }, blocks[0]);\n                });\n                _this_1.ariaLabel = cls + ' class';\n                _this_1.mathspeakTemplate = [\n                    'Start ' + _this_1.ariaLabel + ',',\n                    'End ' + _this_1.ariaLabel,\n                ];\n                return _super.prototype.parser.call(_this_1);\n            });\n        };\n        class_10.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            var blocks0 = this.blocks[0];\n            ctx.latex += '\\\\class{' + this.cls + '}{';\n            blocks0.latexRecursive(ctx);\n            ctx.latex += '}';\n            this.checkCursorContextClose(ctx);\n        };\n        class_10.prototype.isStyleBlock = function () {\n            return true;\n        };\n        return class_10;\n    }(MathCommand)));\n    // This test is used to determine whether an item may be treated as a whole number\n    // for shortening the verbalized (mathspeak) forms of some fractions and superscripts.\n    var intRgx = /^[\\+\\-]?[\\d]+$/;\n    // Traverses the top level of the passed block's children and returns the concatenation of their ctrlSeq properties.\n    // Used in shortened mathspeak computations as a block's .text() method can be potentially expensive.\n    //\n    function getCtrlSeqsFromBlock(block) {\n        if (!block)\n            return '';\n        var chars = '';\n        block.eachChild(function (child) {\n            if (child.ctrlSeq !== undefined)\n                chars += child.ctrlSeq;\n        });\n        return chars;\n    }\n    Options.prototype.charsThatBreakOutOfSupSub = '';\n    var SupSub = /** @class */ (function (_super) {\n        __extends(SupSub, _super);\n        function SupSub() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '_{...}^{...}';\n            return _this_1;\n        }\n        SupSub.prototype.setEnds = function (ends) {\n            pray('SupSub ends must be MathBlocks', ends[L] instanceof MathBlock && ends[R] instanceof MathBlock);\n            this.ends = ends;\n        };\n        SupSub.prototype.getEnd = function (dir) {\n            return this.ends[dir];\n        };\n        SupSub.prototype.createLeftOf = function (cursor) {\n            if (!this.replacedFragment &&\n                !cursor[L] &&\n                cursor.options.supSubsRequireOperand)\n                return;\n            return _super.prototype.createLeftOf.call(this, cursor);\n        };\n        SupSub.prototype.contactWeld = function (cursor) {\n            // Look on either side for a SupSub, if one is found compare my\n            // .sub, .sup with its .sub, .sup. If I have one that it doesn't,\n            // then call .addBlock() on it with my block; if I have one that\n            // it also has, then insert my block's children into its block,\n            // unless my block has none, in which case insert the cursor into\n            // its block (and not mine, I'm about to remove myself) in the case\n            // I was just typed.\n            // TODO: simplify\n            // equiv. to [L, R].forEach(function(dir) { ... });\n            for (var dir = L; dir; dir = dir === L ? R : false) {\n                var thisDir = this[dir];\n                var pt = void 0;\n                if (thisDir instanceof SupSub) {\n                    // equiv. to 'sub sup'.split(' ').forEach(function(supsub) { ... });\n                    for (var supsub = 'sub'; supsub; supsub = supsub === 'sub' ? 'sup' : false) {\n                        var src = this[supsub], dest = thisDir[supsub];\n                        if (!src)\n                            continue;\n                        if (!dest)\n                            thisDir.addBlock(src.disown());\n                        else if (!src.isEmpty()) {\n                            // ins src children at -dir end of dest\n                            src\n                                .domFrag()\n                                .children()\n                                .insAtDirEnd(-dir, dest.domFrag().oneElement());\n                            var children = src.children().disown();\n                            pt = new Point(dest, children.getEnd(R), dest.getEnd(L));\n                            if (dir === L)\n                                children.adopt(dest, dest.getEnd(R), 0);\n                            else\n                                children.adopt(dest, 0, dest.getEnd(L));\n                        }\n                        else {\n                            pt = new Point(dest, 0, dest.getEnd(L));\n                        }\n                        this.placeCursor = (function (dest, src) {\n                            // TODO: don't monkey-patch\n                            return function (cursor) {\n                                cursor.insAtDirEnd(-dir, dest || src);\n                            };\n                        })(dest, src);\n                    }\n                    this.remove();\n                    if (cursor && cursor[L] === this) {\n                        if (dir === R && pt) {\n                            if (pt[L]) {\n                                cursor.insRightOf(pt[L]);\n                            }\n                            else {\n                                cursor.insAtLeftEnd(pt.parent);\n                            }\n                        }\n                        else\n                            cursor.insRightOf(thisDir);\n                    }\n                    break;\n                }\n            }\n        };\n        SupSub.prototype.finalizeTree = function () {\n            var endsL = this.getEnd(L);\n            endsL.write = function (cursor, ch) {\n                if (cursor.options.autoSubscriptNumerals &&\n                    this === this.parent.sub) {\n                    if (ch === '_')\n                        return;\n                    var cmd = this.chToCmd(ch, cursor.options);\n                    if (cmd instanceof MQSymbol)\n                        cursor.deleteSelection();\n                    else\n                        cursor.clearSelection().insRightOf(this.parent);\n                    cmd.createLeftOf(cursor.show());\n                    cursor.controller.aria\n                        .queue('Baseline')\n                        .alert(cmd.mathspeak({ createdLeftOf: cursor }));\n                    return;\n                }\n                if (cursor[L] &&\n                    !cursor[R] &&\n                    !cursor.selection &&\n                    cursor.options.charsThatBreakOutOfSupSub.indexOf(ch) > -1) {\n                    cursor.insRightOf(this.parent);\n                    cursor.controller.aria.queue('Baseline');\n                }\n                MathBlock.prototype.write.call(this, cursor, ch);\n            };\n        };\n        SupSub.prototype.moveTowards = function (dir, cursor, updown) {\n            if (cursor.options.autoSubscriptNumerals && !this.sup) {\n                cursor.insDirOf(dir, this);\n            }\n            else\n                _super.prototype.moveTowards.call(this, dir, cursor, updown);\n        };\n        SupSub.prototype.deleteTowards = function (dir, cursor) {\n            if (cursor.options.autoSubscriptNumerals && this.sub) {\n                var cmd = this.sub.getEnd(-dir);\n                if (cmd instanceof MQSymbol)\n                    cmd.remove();\n                else if (cmd)\n                    cmd.deleteTowards(dir, cursor.insAtDirEnd(-dir, this.sub));\n                // TODO: factor out a .removeBlock() or something\n                if (this.sub.isEmpty()) {\n                    this.sub.deleteOutOf(L, cursor.insAtLeftEnd(this.sub));\n                    if (this.sup)\n                        cursor.insDirOf(-dir, this);\n                    // Note `-dir` because in e.g. x_1^2| want backspacing (leftward)\n                    // to delete the 1 but to end up rightward of x^2; with non-negated\n                    // `dir` (try it), the cursor appears to have gone \"through\" the ^2.\n                }\n            }\n            else\n                _super.prototype.deleteTowards.call(this, dir, cursor);\n        };\n        SupSub.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            if (this.sub) {\n                ctx.latex += '_{';\n                var beforeLength = ctx.latex.length;\n                this.sub.latexRecursive(ctx);\n                var afterLength = ctx.latex.length;\n                if (beforeLength === afterLength) {\n                    // nothing was written. so we write a space\n                    ctx.latex += ' ';\n                }\n                ctx.latex += '}';\n            }\n            if (this.sup) {\n                ctx.latex += '^{';\n                var beforeLength = ctx.latex.length;\n                this.sup.latexRecursive(ctx);\n                var afterLength = ctx.latex.length;\n                if (beforeLength === afterLength) {\n                    // nothing was written. so we write a space\n                    ctx.latex += ' ';\n                }\n                ctx.latex += '}';\n            }\n            this.checkCursorContextClose(ctx);\n        };\n        SupSub.prototype.text = function () {\n            function text(prefix, block) {\n                var l = (block && block.text()) || '';\n                return block\n                    ? prefix + (l.length === 1 ? l : '(' + (l || ' ') + ')')\n                    : '';\n            }\n            return text('_', this.sub) + text('^', this.sup);\n        };\n        SupSub.prototype.addBlock = function (block) {\n            if (this.supsub === 'sub') {\n                this.sup = this.upInto = this.sub.upOutOf = block;\n                block.adopt(this, this.sub, 0).downOutOf = this.sub;\n                block.setDOM(domFrag(h('span', { class: 'mq-sup' }))\n                    .append(block.domFrag().children())\n                    .prependTo(this.domFrag().oneElement())\n                    .oneElement());\n                NodeBase.linkElementByBlockNode(block.domFrag().oneElement(), block);\n            }\n            else {\n                this.sub = this.downInto = this.sup.downOutOf = block;\n                block.adopt(this, 0, this.sup).upOutOf = this.sup;\n                this.domFrag().removeClass('mq-sup-only');\n                block.setDOM(domFrag(h('span', { class: 'mq-sub' }))\n                    .append(block.domFrag().children())\n                    .appendTo(this.domFrag().oneElement())\n                    .oneElement());\n                NodeBase.linkElementByBlockNode(block.domFrag().oneElement(), block);\n                this.domFrag().append(domFrag(h('span', { style: 'display:inline-block;width:0' }, [\n                    h.text(U_ZERO_WIDTH_SPACE),\n                ])));\n            }\n            // like 'sub sup'.split(' ').forEach(function(supsub) { ... });\n            for (var i = 0; i < 2; i += 1)\n                (function (cmd, supsub, oppositeSupsub, updown) {\n                    var cmdSubSub = cmd[supsub];\n                    cmdSubSub.deleteOutOf = function (dir, cursor) {\n                        cursor.insDirOf(this[dir] ? -dir : dir, this.parent);\n                        if (!this.isEmpty()) {\n                            var end = this.getEnd(dir);\n                            this.children()\n                                .disown()\n                                .withDirAdopt(dir, cursor.parent, cursor[dir], cursor[-dir])\n                                .domFrag()\n                                .insDirOf(-dir, cursor.domFrag());\n                            cursor[-dir] = end;\n                        }\n                        cmd.supsub = oppositeSupsub;\n                        delete cmd[supsub];\n                        delete cmd[\"\".concat(updown, \"Into\")];\n                        var cmdOppositeSupsub = cmd[oppositeSupsub];\n                        cmdOppositeSupsub[\"\".concat(updown, \"OutOf\")] = insLeftOfMeUnlessAtEnd;\n                        delete cmdOppositeSupsub.deleteOutOf; // TODO - refactor so this method can be optional\n                        if (supsub === 'sub') {\n                            cmd.domFrag().addClass('mq-sup-only').children().last().remove();\n                        }\n                        this.remove();\n                    };\n                })(this, 'sub sup'.split(' ')[i], 'sup sub'.split(' ')[i], 'down up'.split(' ')[i]);\n        };\n        return SupSub;\n    }(MathCommand));\n    function insLeftOfMeUnlessAtEnd(cursor) {\n        // cursor.insLeftOf(cmd), unless cursor at the end of block, and every\n        // ancestor cmd is at the end of every ancestor block\n        var cmd = this.parent;\n        var ancestorCmd = cursor;\n        do {\n            if (ancestorCmd[R])\n                return cursor.insLeftOf(cmd);\n            ancestorCmd = ancestorCmd.parent.parent;\n        } while (ancestorCmd !== cmd);\n        cursor.insRightOf(cmd);\n        return undefined;\n    }\n    var SubscriptCommand = /** @class */ (function (_super) {\n        __extends(SubscriptCommand, _super);\n        function SubscriptCommand() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.supsub = 'sub';\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-supsub mq-non-leaf' }, [\n                    h.block('span', { class: 'mq-sub' }, blocks[0]),\n                    h('span', { style: 'display:inline-block;width:0' }, [\n                        h.text(U_ZERO_WIDTH_SPACE),\n                    ]),\n                ]);\n            });\n            _this_1.textTemplate = ['_'];\n            _this_1.mathspeakTemplate = ['Subscript,', ', Baseline'];\n            _this_1.ariaLabel = 'subscript';\n            return _this_1;\n        }\n        SubscriptCommand.prototype.finalizeTree = function () {\n            this.downInto = this.sub = this.getEnd(L);\n            this.sub.upOutOf = insLeftOfMeUnlessAtEnd;\n            _super.prototype.finalizeTree.call(this);\n        };\n        return SubscriptCommand;\n    }(SupSub));\n    LatexCmds.subscript = LatexCmds._ = SubscriptCommand;\n    LatexCmds.superscript =\n        LatexCmds.supscript =\n            LatexCmds['^'] = /** @class */ (function (_super) {\n                __extends(SuperscriptCommand, _super);\n                function SuperscriptCommand() {\n                    var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n                    _this_1.supsub = 'sup';\n                    _this_1.domView = new DOMView(1, function (blocks) {\n                        return h('span', { class: 'mq-supsub mq-non-leaf mq-sup-only' }, [\n                            h.block('span', { class: 'mq-sup' }, blocks[0]),\n                        ]);\n                    });\n                    _this_1.textTemplate = ['^(', ')'];\n                    _this_1.ariaLabel = 'superscript';\n                    _this_1.mathspeakTemplate = ['Superscript,', ', Baseline'];\n                    return _this_1;\n                }\n                SuperscriptCommand.prototype.mathspeak = function (opts) {\n                    // Simplify basic exponent speech for common whole numbers.\n                    var child = this.upInto;\n                    if (child !== undefined) {\n                        // Calculate this item's inner text to determine whether to shorten the returned speech.\n                        // Do not calculate its inner mathspeak now until we know that the speech is to be truncated.\n                        // Since the mathspeak computation is recursive, we want to call it only once in this function to avoid performance bottlenecks.\n                        var innerText = getCtrlSeqsFromBlock(child);\n                        // If the superscript is a whole number, shorten the speech that is returned.\n                        if ((!opts || !opts.ignoreShorthand) && intRgx.test(innerText)) {\n                            // Simple cases\n                            if (innerText === '0') {\n                                return 'to the 0 power';\n                            }\n                            else if (innerText === '2') {\n                                return 'squared';\n                            }\n                            else if (innerText === '3') {\n                                return 'cubed';\n                            }\n                            // More complex cases.\n                            var suffix = '';\n                            // Limit suffix addition to exponents < 1000.\n                            if (/^[+-]?\\d{1,3}$/.test(innerText)) {\n                                if (/(11|12|13|4|5|6|7|8|9|0)$/.test(innerText)) {\n                                    suffix = 'th';\n                                }\n                                else if (/1$/.test(innerText)) {\n                                    suffix = 'st';\n                                }\n                                else if (/2$/.test(innerText)) {\n                                    suffix = 'nd';\n                                }\n                                else if (/3$/.test(innerText)) {\n                                    suffix = 'rd';\n                                }\n                            }\n                            var innerMathspeak = typeof child === 'object' ? child.mathspeak() : innerText;\n                            return 'to the ' + innerMathspeak + suffix + ' power';\n                        }\n                    }\n                    return _super.prototype.mathspeak.call(this);\n                };\n                SuperscriptCommand.prototype.finalizeTree = function () {\n                    this.upInto = this.sup = this.getEnd(R);\n                    this.sup.downOutOf = insLeftOfMeUnlessAtEnd;\n                    _super.prototype.finalizeTree.call(this);\n                };\n                return SuperscriptCommand;\n            }(SupSub));\n    var SummationNotation = /** @class */ (function (_super) {\n        __extends(SummationNotation, _super);\n        function SummationNotation(ch, symbol, ariaLabel) {\n            var _this_1 = _super.call(this) || this;\n            _this_1.ariaLabel = ariaLabel || ch.replace(/^\\\\/, '');\n            var domView = new DOMView(2, function (blocks) {\n                return h('span', { class: 'mq-large-operator mq-non-leaf' }, [\n                    h('span', { class: 'mq-to' }, [h.block('span', {}, blocks[1])]),\n                    h('big', {}, [h.text(symbol)]),\n                    h('span', { class: 'mq-from' }, [h.block('span', {}, blocks[0])]),\n                ]);\n            });\n            MQSymbol.prototype.setCtrlSeqHtmlTextAndMathspeak.call(_this_1, ch, domView);\n            return _this_1;\n        }\n        SummationNotation.prototype.createLeftOf = function (cursor) {\n            _super.prototype.createLeftOf.call(this, cursor);\n            if (cursor.options.sumStartsWithNEquals) {\n                new Letter('n').createLeftOf(cursor);\n                new Equality().createLeftOf(cursor);\n            }\n        };\n        SummationNotation.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += this.ctrlSeq + '_{';\n            var beforeLength = ctx.latex.length;\n            this.getEnd(L).latexRecursive(ctx);\n            var afterLength = ctx.latex.length;\n            if (afterLength === beforeLength) {\n                // nothing was written so we write a space\n                ctx.latex += ' ';\n            }\n            ctx.latex += '}^{';\n            beforeLength = ctx.latex.length;\n            this.getEnd(R).latexRecursive(ctx);\n            afterLength = ctx.latex.length;\n            if (beforeLength === afterLength) {\n                // nothing was written so we write a space\n                ctx.latex += ' ';\n            }\n            ctx.latex += '}';\n            this.checkCursorContextClose(ctx);\n        };\n        SummationNotation.prototype.mathspeak = function () {\n            return ('Start ' +\n                this.ariaLabel +\n                ' from ' +\n                this.getEnd(L).mathspeak() +\n                ' to ' +\n                this.getEnd(R).mathspeak() +\n                ', end ' +\n                this.ariaLabel +\n                ', ');\n        };\n        SummationNotation.prototype.parser = function () {\n            var string = Parser.string;\n            var optWhitespace = Parser.optWhitespace;\n            var succeed = Parser.succeed;\n            var block = latexMathParser.block;\n            var self = this;\n            var blocks = (self.blocks = [new MathBlock(), new MathBlock()]);\n            for (var i = 0; i < blocks.length; i += 1) {\n                blocks[i].adopt(self, self.getEnd(R), 0);\n            }\n            return optWhitespace\n                .then(string('_').or(string('^')))\n                .then(function (supOrSub) {\n                var child = blocks[supOrSub === '_' ? 0 : 1];\n                return block.then(function (block) {\n                    block.children().adopt(child, child.getEnd(R), 0);\n                    return succeed(self);\n                });\n            })\n                .many()\n                .result(self);\n        };\n        SummationNotation.prototype.finalizeTree = function () {\n            var endsL = this.getEnd(L);\n            var endsR = this.getEnd(R);\n            endsL.ariaLabel = 'lower bound';\n            endsR.ariaLabel = 'upper bound';\n            this.downInto = endsL;\n            this.upInto = endsR;\n            endsL.upOutOf = endsR;\n            endsR.downOutOf = endsL;\n        };\n        return SummationNotation;\n    }(MathCommand));\n    LatexCmds['\\u2211'] =\n        LatexCmds.sum =\n            LatexCmds.summation =\n                function () { return new SummationNotation('\\\\sum ', U_NARY_SUMMATION, 'sum'); };\n    LatexCmds['\\u220f'] =\n        LatexCmds.prod =\n            LatexCmds.product =\n                function () { return new SummationNotation('\\\\prod ', U_NARY_PRODUCT, 'product'); };\n    LatexCmds.coprod = LatexCmds.coproduct = function () {\n        return new SummationNotation('\\\\coprod ', U_NARY_COPRODUCT, 'co product');\n    };\n    LatexCmds['\\u222b'] =\n        LatexCmds['int'] =\n            LatexCmds.integral = /** @class */ (function (_super) {\n                __extends(class_11, _super);\n                function class_11() {\n                    var _this_1 = _super.call(this, '\\\\int ', '', 'integral') || this;\n                    _this_1.ariaLabel = 'integral';\n                    _this_1.domView = new DOMView(2, function (blocks) {\n                        return h('span', { class: 'mq-int mq-non-leaf' }, [\n                            h('big', {}, [h.text(U_INTEGRAL)]),\n                            h('span', { class: 'mq-supsub mq-non-leaf' }, [\n                                h('span', { class: 'mq-sup' }, [\n                                    h.block('span', { class: 'mq-sup-inner' }, blocks[1]),\n                                ]),\n                                h.block('span', { class: 'mq-sub' }, blocks[0]),\n                                h('span', { style: 'display:inline-block;width:0' }, [\n                                    h.text(U_ZERO_WIDTH_SPACE),\n                                ]),\n                            ]),\n                        ]);\n                    });\n                    return _this_1;\n                }\n                class_11.prototype.createLeftOf = function (cursor) {\n                    // FIXME: refactor rather than overriding\n                    MathCommand.prototype.createLeftOf.call(this, cursor);\n                };\n                return class_11;\n            }(SummationNotation));\n    var Fraction = (LatexCmds.frac =\n        LatexCmds.dfrac =\n            LatexCmds.cfrac =\n                LatexCmds.fraction = /** @class */ (function (_super) {\n                    __extends(FracNode, _super);\n                    function FracNode() {\n                        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n                        _this_1.ctrlSeq = '\\\\frac';\n                        _this_1.domView = new DOMView(2, function (blocks) {\n                            return h('span', { class: 'mq-fraction mq-non-leaf' }, [\n                                h.block('span', { class: 'mq-numerator' }, blocks[0]),\n                                h.block('span', { class: 'mq-denominator' }, blocks[1]),\n                                h('span', { style: 'display:inline-block;width:0' }, [\n                                    h.text(U_ZERO_WIDTH_SPACE),\n                                ]),\n                            ]);\n                        });\n                        _this_1.textTemplate = ['(', ')/(', ')'];\n                        return _this_1;\n                    }\n                    FracNode.prototype.finalizeTree = function () {\n                        var endsL = this.getEnd(L);\n                        var endsR = this.getEnd(R);\n                        this.upInto = endsR.upOutOf = endsL;\n                        this.downInto = endsL.downOutOf = endsR;\n                        endsL.ariaLabel = 'numerator';\n                        endsR.ariaLabel = 'denominator';\n                        if (this.getFracDepth() > 1) {\n                            this.mathspeakTemplate = [\n                                'StartNestedFraction,',\n                                'NestedOver',\n                                ', EndNestedFraction',\n                            ];\n                        }\n                        else {\n                            this.mathspeakTemplate = ['StartFraction,', 'Over', ', EndFraction'];\n                        }\n                    };\n                    FracNode.prototype.mathspeak = function (opts) {\n                        if (opts && opts.createdLeftOf) {\n                            var cursor = opts.createdLeftOf;\n                            return cursor.parent.mathspeak();\n                        }\n                        var numText = getCtrlSeqsFromBlock(this.getEnd(L));\n                        var denText = getCtrlSeqsFromBlock(this.getEnd(R));\n                        // Shorten mathspeak value for whole number fractions whose denominator is less than 10.\n                        if ((!opts || !opts.ignoreShorthand) &&\n                            intRgx.test(numText) &&\n                            intRgx.test(denText)) {\n                            var isSingular = numText === '1' || numText === '-1';\n                            var newDenSpeech = '';\n                            if (denText === '2') {\n                                newDenSpeech = isSingular ? 'half' : 'halves';\n                            }\n                            else if (denText === '3') {\n                                newDenSpeech = isSingular ? 'third' : 'thirds';\n                            }\n                            else if (denText === '4') {\n                                newDenSpeech = isSingular ? 'quarter' : 'quarters';\n                            }\n                            else if (denText === '5') {\n                                newDenSpeech = isSingular ? 'fifth' : 'fifths';\n                            }\n                            else if (denText === '6') {\n                                newDenSpeech = isSingular ? 'sixth' : 'sixths';\n                            }\n                            else if (denText === '7') {\n                                newDenSpeech = isSingular ? 'seventh' : 'sevenths';\n                            }\n                            else if (denText === '8') {\n                                newDenSpeech = isSingular ? 'eighth' : 'eighths';\n                            }\n                            else if (denText === '9') {\n                                newDenSpeech = isSingular ? 'ninth' : 'ninths';\n                            }\n                            if (newDenSpeech !== '') {\n                                var output = '';\n                                // Handle the case of an integer followed by a simplified fraction such as 1\\frac{1}{2}.\n                                // Such combinations should be spoken aloud as \"1 and 1 half.\"\n                                // Start at the left sibling of the fraction and continue leftward until something other than a digit or whitespace is found.\n                                var precededByInteger = false;\n                                for (var sibling = this[L]; sibling && sibling[L] !== undefined; sibling = sibling[L]) {\n                                    // Ignore whitespace\n                                    if (sibling.ctrlSeq === '\\\\ ') {\n                                        continue;\n                                    }\n                                    else if (intRgx.test(sibling.ctrlSeq || '')) {\n                                        precededByInteger = true;\n                                    }\n                                    else {\n                                        precededByInteger = false;\n                                        break;\n                                    }\n                                }\n                                if (precededByInteger) {\n                                    output += 'and ';\n                                }\n                                output += this.getEnd(L).mathspeak() + ' ' + newDenSpeech;\n                                return output;\n                            }\n                        }\n                        return _super.prototype.mathspeak.call(this);\n                    };\n                    FracNode.prototype.getFracDepth = function () {\n                        var level = 0;\n                        var walkUp = function (item, level) {\n                            if (item instanceof MQNode &&\n                                item.ctrlSeq &&\n                                item.ctrlSeq.toLowerCase().search('frac') >= 0)\n                                level += 1;\n                            if (item && item.parent)\n                                return walkUp(item.parent, level);\n                            else\n                                return level;\n                        };\n                        return walkUp(this, level);\n                    };\n                    return FracNode;\n                }(MathCommand)));\n    var LiveFraction = (LatexCmds.over =\n        CharCmds['/'] = /** @class */ (function (_super) {\n            __extends(class_12, _super);\n            function class_12() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_12.prototype.createLeftOf = function (cursor) {\n                if (!this.replacedFragment) {\n                    var leftward = cursor[L];\n                    if (!cursor.options.typingSlashCreatesNewFraction) {\n                        while (leftward &&\n                            !(leftward instanceof BinaryOperator ||\n                                leftward instanceof (LatexCmds.text || noop) ||\n                                leftward instanceof SummationNotation ||\n                                leftward.ctrlSeq === '\\\\ ' ||\n                                /^[,;:]$/.test(leftward.ctrlSeq)) //lookbehind for operator\n                        )\n                            leftward = leftward[L];\n                    }\n                    if (leftward instanceof SummationNotation &&\n                        leftward[R] instanceof SupSub) {\n                        leftward = leftward[R];\n                        var leftwardR = leftward[R];\n                        if (leftwardR instanceof SupSub &&\n                            leftwardR.ctrlSeq != leftward.ctrlSeq)\n                            leftward = leftward[R];\n                    }\n                    if (leftward !== cursor[L] && !cursor.isTooDeep(1)) {\n                        var leftwardR = leftward[R];\n                        var cursorL = cursor[L];\n                        this.replaces(new Fragment(leftwardR || cursor.parent.getEnd(L), cursorL));\n                        cursor[L] = leftward;\n                    }\n                }\n                _super.prototype.createLeftOf.call(this, cursor);\n            };\n            return class_12;\n        }(Fraction)));\n    var AnsBuilder = function () {\n        return new MQSymbol('\\\\operatorname{ans}', h('span', { class: 'mq-ans' }, [h.text('ans')]), 'ans');\n    };\n    LatexCmds.ans = AnsBuilder;\n    var PercentOfBuilder = function () {\n        return new MQSymbol('\\\\%\\\\operatorname{of}', h('span', { class: 'mq-nonSymbola mq-operator-name' }, [h.text('% of ')]), 'percent of');\n    };\n    LatexCmds.percent = LatexCmds.percentof = PercentOfBuilder;\n    /** A Token represents a region in typeset math that is designed to be\n     * externally styled and which delegates mousedown events to external\n     * handlers.\n     *\n     * LaTeX syntax: `\\token{id}`.\n     *\n     * Token is designed for similar use cases as EmbedNode. Differences:\n     *     * Mousedown events on a Token are not handled by MathQuill (they\n     *       are expected to be handled externally).\n     *     * The API for Tokens is simpler: they don't require registering\n     *       handlers with MathQuill.\n     *     * The current syntax for embed (`\\embed{name}[id]`) gets the order\n     *       of optional and required arguments backwards compared to normal\n     *       LaTeX syntax. The syntax of Token is simpler and more in line\n     *       with LaTeX\n     */\n    var Token = /** @class */ (function (_super) {\n        __extends(Token, _super);\n        function Token() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.tokenId = '';\n            _this_1.ctrlSeq = '\\\\token';\n            _this_1.textTemplate = ['token(', ')'];\n            _this_1.mathspeakTemplate = ['StartToken,', ', EndToken'];\n            _this_1.ariaLabel = 'token';\n            return _this_1;\n        }\n        Token.prototype.html = function () {\n            var out = h('span', {\n                class: 'mq-token mq-ignore-mousedown',\n                'data-mq-token': this.tokenId,\n            });\n            this.setDOM(out);\n            NodeBase.linkElementByCmdNode(out, this);\n            return out;\n        };\n        Token.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += '\\\\token{' + this.tokenId + '}';\n            this.checkCursorContextClose(ctx);\n        };\n        Token.prototype.parser = function () {\n            var self = this;\n            return latexMathParser.block.map(function (block) {\n                var digit = block.getEnd(L);\n                if (digit) {\n                    self.tokenId += digit.ctrlSeq;\n                    while ((digit = digit[R])) {\n                        self.tokenId += digit.ctrlSeq;\n                    }\n                }\n                return self;\n            });\n        };\n        return Token;\n    }(MQSymbol));\n    LatexCmds.token = Token;\n    var SquareRoot = /** @class */ (function (_super) {\n        __extends(SquareRoot, _super);\n        function SquareRoot() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\sqrt';\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-non-leaf mq-sqrt-container' }, [\n                    h('span', { class: 'mq-scaled mq-sqrt-prefix' }, [\n                        SVG_SYMBOLS.sqrt.html(),\n                    ]),\n                    h.block('span', { class: 'mq-non-leaf mq-sqrt-stem' }, blocks[0]),\n                ]);\n            });\n            _this_1.textTemplate = ['sqrt(', ')'];\n            _this_1.mathspeakTemplate = ['StartRoot,', ', EndRoot'];\n            _this_1.ariaLabel = 'root';\n            return _this_1;\n        }\n        SquareRoot.prototype.parser = function () {\n            return latexMathParser.optBlock\n                .then(function (optBlock) {\n                return latexMathParser.block.map(function (block) {\n                    var nthroot = new NthRoot();\n                    nthroot.blocks = [optBlock, block];\n                    optBlock.adopt(nthroot, 0, 0);\n                    block.adopt(nthroot, optBlock, 0);\n                    return nthroot;\n                });\n            })\n                .or(_super.prototype.parser.call(this));\n        };\n        return SquareRoot;\n    }(MathCommand));\n    LatexCmds.sqrt = SquareRoot;\n    LatexCmds.hat = /** @class */ (function (_super) {\n        __extends(Hat, _super);\n        function Hat() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\hat';\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-non-leaf' }, [\n                    h('span', { class: 'mq-hat-prefix' }, [h.text('^')]),\n                    h.block('span', { class: 'mq-hat-stem' }, blocks[0]),\n                ]);\n            });\n            _this_1.textTemplate = ['hat(', ')'];\n            return _this_1;\n        }\n        return Hat;\n    }(MathCommand));\n    var NthRoot = /** @class */ (function (_super) {\n        __extends(NthRoot, _super);\n        function NthRoot() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.domView = new DOMView(2, function (blocks) {\n                return h('span', { class: 'mq-nthroot-container mq-non-leaf' }, [\n                    h.block('sup', { class: 'mq-nthroot mq-non-leaf' }, blocks[0]),\n                    h('span', { class: 'mq-scaled mq-sqrt-container' }, [\n                        h('span', { class: 'mq-sqrt-prefix mq-scaled' }, [\n                            SVG_SYMBOLS.sqrt.html(),\n                        ]),\n                        h.block('span', { class: 'mq-sqrt-stem mq-non-leaf' }, blocks[1]),\n                    ]),\n                ]);\n            });\n            _this_1.textTemplate = ['sqrt[', '](', ')'];\n            return _this_1;\n        }\n        NthRoot.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += '\\\\sqrt[';\n            this.getEnd(L).latexRecursive(ctx);\n            ctx.latex += ']{';\n            this.getEnd(R).latexRecursive(ctx);\n            ctx.latex += '}';\n            this.checkCursorContextClose(ctx);\n        };\n        NthRoot.prototype.mathspeak = function () {\n            var indexMathspeak = this.getEnd(L).mathspeak();\n            var radicandMathspeak = this.getEnd(R).mathspeak();\n            this.getEnd(L).ariaLabel = 'Index';\n            this.getEnd(R).ariaLabel = 'Radicand';\n            if (indexMathspeak === '3') {\n                // cube root\n                return 'Start Cube Root, ' + radicandMathspeak + ', End Cube Root';\n            }\n            else {\n                return ('Root Index ' +\n                    indexMathspeak +\n                    ', Start Root, ' +\n                    radicandMathspeak +\n                    ', End Root');\n            }\n        };\n        return NthRoot;\n    }(SquareRoot));\n    LatexCmds.nthroot = NthRoot;\n    LatexCmds.cbrt = /** @class */ (function (_super) {\n        __extends(class_13, _super);\n        function class_13() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_13.prototype.createLeftOf = function (cursor) {\n            _super.prototype.createLeftOf.call(this, cursor);\n            new Digit('3').createLeftOf(cursor);\n            cursor.controller.moveRight();\n        };\n        return class_13;\n    }(NthRoot));\n    var DiacriticAbove = /** @class */ (function (_super) {\n        __extends(DiacriticAbove, _super);\n        function DiacriticAbove(ctrlSeq, html, textTemplate) {\n            var _this_1 = this;\n            var domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-non-leaf' }, [\n                    h('span', { class: 'mq-diacritic-above' }, [html]),\n                    h.block('span', { class: 'mq-diacritic-stem' }, blocks[0]),\n                ]);\n            });\n            _this_1 = _super.call(this, ctrlSeq, domView, textTemplate) || this;\n            return _this_1;\n        }\n        return DiacriticAbove;\n    }(MathCommand));\n    LatexCmds.vec = function () {\n        return new DiacriticAbove('\\\\vec', h.entityText('&rarr;'), ['vec(', ')']);\n    };\n    LatexCmds.tilde = function () {\n        return new DiacriticAbove('\\\\tilde', h.text('~'), ['tilde(', ')']);\n    };\n    var DelimsNode = /** @class */ (function (_super) {\n        __extends(DelimsNode, _super);\n        function DelimsNode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DelimsNode.prototype.setDOM = function (el) {\n            var _c;\n            _super.prototype.setDOM.call(this, el);\n            var children = this.domFrag().children();\n            if (!children.isEmpty()) {\n                this.delimFrags = (_c = {},\n                    _c[L] = children.first(),\n                    _c[R] = children.last(),\n                    _c);\n            }\n            return this;\n        };\n        return DelimsNode;\n    }(MathCommand));\n    // Round/Square/Curly/Angle Brackets (aka Parens/Brackets/Braces)\n    //   first typed as one-sided bracket with matching \"ghost\" bracket at\n    //   far end of current block, until you type an opposing one\n    var Bracket = /** @class */ (function (_super) {\n        __extends(Bracket, _super);\n        function Bracket(side, open, close, ctrlSeq, end) {\n            var _c;\n            var _this_1 = _super.call(this, '\\\\left' + ctrlSeq, undefined, [open, close]) || this;\n            _this_1.side = side;\n            _this_1.sides = (_c = {},\n                _c[L] = { ch: open, ctrlSeq: ctrlSeq },\n                _c[R] = { ch: close, ctrlSeq: end },\n                _c);\n            return _this_1;\n        }\n        Bracket.prototype.numBlocks = function () {\n            return 1;\n        };\n        Bracket.prototype.html = function () {\n            var _this_1 = this;\n            var leftSymbol = this.getSymbol(L);\n            var rightSymbol = this.getSymbol(R);\n            // wait until now so that .side may\n            this.domView = new DOMView(1, function (blocks) {\n                return h(\n                // be set by createLeftOf or parser\n                'span', { class: 'mq-non-leaf mq-bracket-container' }, [\n                    h('span', {\n                        style: 'width:' + leftSymbol.width,\n                        class: 'mq-scaled mq-bracket-l mq-paren' +\n                            (_this_1.side === R ? ' mq-ghost' : ''),\n                    }, [leftSymbol.html()]),\n                    h.block('span', {\n                        style: 'margin-left:' +\n                            leftSymbol.width +\n                            ';margin-right:' +\n                            rightSymbol.width,\n                        class: 'mq-bracket-middle mq-non-leaf',\n                    }, blocks[0]),\n                    h('span', {\n                        style: 'width:' + rightSymbol.width,\n                        class: 'mq-scaled mq-bracket-r mq-paren' +\n                            (_this_1.side === L ? ' mq-ghost' : ''),\n                    }, [rightSymbol.html()]),\n                ]);\n            });\n            return _super.prototype.html.call(this);\n        };\n        Bracket.prototype.getSymbol = function (side) {\n            var ch = this.sides[side || R].ch;\n            return SVG_SYMBOLS[ch] || { width: '0', html: '' };\n        };\n        Bracket.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += '\\\\left' + this.sides[L].ctrlSeq;\n            this.getEnd(L).latexRecursive(ctx);\n            ctx.latex += '\\\\right' + this.sides[R].ctrlSeq;\n            this.checkCursorContextClose(ctx);\n        };\n        Bracket.prototype.mathspeak = function (opts) {\n            var open = this.sides[L].ch, close = this.sides[R].ch;\n            if (open === '|' && close === '|') {\n                this.mathspeakTemplate = ['StartAbsoluteValue,', ', EndAbsoluteValue'];\n                this.ariaLabel = 'absolute value';\n            }\n            else if (opts && opts.createdLeftOf && this.side) {\n                var ch = '';\n                if (this.side === L)\n                    ch = this.textTemplate[0];\n                else if (this.side === R)\n                    ch = this.textTemplate[1];\n                return ((this.side === L ? 'left ' : 'right ') +\n                    BRACKET_NAMES[ch]);\n            }\n            else {\n                this.mathspeakTemplate = [\n                    'left ' + BRACKET_NAMES[open] + ',',\n                    ', right ' + BRACKET_NAMES[close],\n                ];\n                this.ariaLabel =\n                    BRACKET_NAMES[open] + ' block';\n            }\n            return _super.prototype.mathspeak.call(this);\n        };\n        Bracket.prototype.matchBrack = function (opts, expectedSide, node) {\n            // return node iff it's a matching 1-sided bracket of expected side (if any)\n            return (node instanceof Bracket &&\n                node.side &&\n                node.side !== -expectedSide &&\n                (!opts.restrictMismatchedBrackets ||\n                    OPP_BRACKS[this.sides[this.side].ch] === node.sides[node.side].ch ||\n                    { '(': ']', '[': ')' }[this.sides[L].ch] === node.sides[R].ch) &&\n                node);\n        };\n        Bracket.prototype.closeOpposing = function (brack) {\n            brack.side = 0;\n            brack.sides[this.side] = this.sides[this.side]; // copy over my info (may be\n            var brackFrag = brack.delimFrags[this.side === L ? L : R] // mismatched, like [a, b))\n                .removeClass('mq-ghost');\n            this.replaceBracket(brackFrag, this.side);\n        };\n        Bracket.prototype.createLeftOf = function (cursor) {\n            var brack;\n            if (!this.replacedFragment) {\n                // unless wrapping seln in brackets,\n                // check if next to or inside an opposing one-sided bracket\n                var opts = cursor.options;\n                if (this.sides[L].ch === '|') {\n                    // check both sides if I'm a pipe\n                    brack =\n                        this.matchBrack(opts, R, cursor[R]) ||\n                            this.matchBrack(opts, L, cursor[L]) ||\n                            this.matchBrack(opts, 0, cursor.parent.parent);\n                }\n                else {\n                    brack =\n                        this.matchBrack(opts, -this.side, cursor[-this.side]) ||\n                            this.matchBrack(opts, -this.side, cursor.parent.parent);\n                }\n            }\n            if (brack) {\n                var side = (this.side = -brack.side); // may be pipe with .side not yet set\n                this.closeOpposing(brack);\n                if (brack === cursor.parent.parent && cursor[side]) {\n                    // move the stuff between\n                    new Fragment(cursor[side], cursor.parent.getEnd(side), -side) // me and ghost outside\n                        .disown()\n                        .withDirAdopt(-side, brack.parent, brack, brack[side])\n                        .domFrag()\n                        .insDirOf(side, brack.domFrag());\n                }\n                brack.bubble(function (node) {\n                    node.reflow();\n                    return undefined;\n                });\n            }\n            else {\n                (brack = this), (side = brack.side);\n                if (brack.replacedFragment)\n                    brack.side = 0;\n                // wrapping seln, don't be one-sided\n                else if (cursor[-side]) {\n                    // elsewise, auto-expand so ghost is at far end\n                    brack.replaces(new Fragment(cursor[-side], cursor.parent.getEnd(-side), side));\n                    cursor[-side] = 0;\n                }\n                _super.prototype.createLeftOf.call(this, cursor);\n            }\n            if (side === L)\n                cursor.insAtLeftEnd(brack.getEnd(L));\n            else\n                cursor.insRightOf(brack);\n        };\n        Bracket.prototype.placeCursor = function () { };\n        Bracket.prototype.unwrap = function () {\n            this.getEnd(L)\n                .children()\n                .disown()\n                .adopt(this.parent, this, this[R])\n                .domFrag()\n                .insertAfter(this.domFrag());\n            this.remove();\n        };\n        Bracket.prototype.deleteSide = function (side, outward, cursor) {\n            var parent = this.parent, sib = this[side], farEnd = parent.getEnd(side);\n            if (side === this.side) {\n                // deleting non-ghost of one-sided bracket, unwrap\n                this.unwrap();\n                sib\n                    ? cursor.insDirOf(-side, sib)\n                    : cursor.insAtDirEnd(side, parent);\n                return;\n            }\n            var opts = cursor.options, wasSolid = !this.side;\n            this.side = -side;\n            // if deleting like, outer close-brace of [(1+2)+3} where inner open-paren\n            if (this.matchBrack(opts, side, this.getEnd(L).getEnd(this.side))) {\n                // is ghost,\n                this.closeOpposing(this.getEnd(L).getEnd(this.side)); // then become [1+2)+3\n                var origEnd = this.getEnd(L).getEnd(side);\n                this.unwrap();\n                if (origEnd)\n                    origEnd.siblingCreated(cursor.options, side);\n                if (sib) {\n                    cursor.insDirOf(-side, sib);\n                }\n                else {\n                    cursor.insAtDirEnd(side, parent);\n                }\n            }\n            else {\n                // if deleting like, inner close-brace of ([1+2}+3) where outer\n                if (this.matchBrack(opts, side, this.parent.parent)) {\n                    // open-paren is\n                    this.parent.parent.closeOpposing(this); // ghost, then become [1+2+3)\n                    this.parent.parent.unwrap();\n                } // else if deleting outward from a solid pair, unwrap\n                else if (outward && wasSolid) {\n                    this.unwrap();\n                    sib\n                        ? cursor.insDirOf(-side, sib)\n                        : cursor.insAtDirEnd(side, parent);\n                    return;\n                }\n                else {\n                    // else deleting just one of a pair of brackets, become one-sided\n                    this.sides[side] = getOppBracketSide(this);\n                    this.delimFrags[L].removeClass('mq-ghost');\n                    this.delimFrags[R].removeClass('mq-ghost');\n                    var brackFrag = this.delimFrags[side].addClass('mq-ghost');\n                    this.replaceBracket(brackFrag, side);\n                }\n                if (sib) {\n                    // auto-expand so ghost is at far end\n                    var leftEnd = this.getEnd(L);\n                    var origEnd = leftEnd.getEnd(side);\n                    leftEnd.domFrag().removeClass('mq-empty');\n                    new Fragment(sib, farEnd, -side)\n                        .disown()\n                        .withDirAdopt(-side, leftEnd, origEnd, 0)\n                        .domFrag()\n                        .insAtDirEnd(side, leftEnd.domFrag().oneElement());\n                    if (origEnd)\n                        origEnd.siblingCreated(cursor.options, side);\n                    cursor.insDirOf(-side, sib);\n                } // didn't auto-expand, cursor goes just outside or just inside parens\n                else\n                    outward\n                        ? cursor.insDirOf(side, this)\n                        : cursor.insAtDirEnd(side, this.getEnd(L));\n            }\n        };\n        Bracket.prototype.replaceBracket = function (brackFrag, side) {\n            var symbol = this.getSymbol(side);\n            brackFrag.children().replaceWith(domFrag(symbol.html()));\n            brackFrag.oneElement().style.width = symbol.width;\n            if (side === L) {\n                var next = brackFrag.next();\n                if (!next.isEmpty()) {\n                    next.oneElement().style.marginLeft = symbol.width;\n                }\n            }\n            else {\n                var prev = brackFrag.prev();\n                if (!prev.isEmpty()) {\n                    prev.oneElement().style.marginRight = symbol.width;\n                }\n            }\n        };\n        Bracket.prototype.deleteTowards = function (dir, cursor) {\n            this.deleteSide(-dir, false, cursor);\n        };\n        Bracket.prototype.finalizeTree = function () {\n            this.getEnd(L).deleteOutOf = function (dir, cursor) {\n                this.parent.deleteSide(dir, true, cursor);\n            };\n            // FIXME HACK: after initial creation/insertion, finalizeTree would only be\n            // called if the paren is selected and replaced, e.g. by LiveFraction\n            this.finalizeTree = this.intentionalBlur = function () {\n                this.delimFrags[this.side === L ? R : L].removeClass('mq-ghost');\n                this.side = 0;\n            };\n        };\n        Bracket.prototype.siblingCreated = function (_opts, dir) {\n            // if something typed between ghost and far\n            if (dir === -this.side)\n                this.finalizeTree(); // end of its block, solidify\n        };\n        return Bracket;\n    }(DelimsNode));\n    function getOppBracketSide(bracket) {\n        var side = bracket.side;\n        var data = bracket.sides[side];\n        return {\n            ch: OPP_BRACKS[data.ch],\n            ctrlSeq: OPP_BRACKS[data.ctrlSeq],\n        };\n    }\n    var OPP_BRACKS = {\n        '(': ')',\n        ')': '(',\n        '[': ']',\n        ']': '[',\n        '{': '}',\n        '}': '{',\n        '\\\\{': '\\\\}',\n        '\\\\}': '\\\\{',\n        '&lang;': '&rang;',\n        '&rang;': '&lang;',\n        '\\\\langle ': '\\\\rangle ',\n        '\\\\rangle ': '\\\\langle ',\n        '|': '|',\n        '\\\\lVert ': '\\\\rVert ',\n        '\\\\rVert ': '\\\\lVert ',\n    };\n    var BRACKET_NAMES = {\n        '&lang;': 'angle-bracket',\n        '&rang;': 'angle-bracket',\n        '|': 'pipe',\n    };\n    function bindCharBracketPair(open, ctrlSeq, name) {\n        var ctrlSeq = ctrlSeq || open;\n        var close = OPP_BRACKS[open];\n        var end = OPP_BRACKS[ctrlSeq];\n        CharCmds[open] = function () { return new Bracket(L, open, close, ctrlSeq, end); };\n        CharCmds[close] = function () { return new Bracket(R, open, close, ctrlSeq, end); };\n        BRACKET_NAMES[open] = BRACKET_NAMES[close] = name;\n    }\n    bindCharBracketPair('(', '', 'parenthesis');\n    bindCharBracketPair('[', '', 'bracket');\n    bindCharBracketPair('{', '\\\\{', 'brace');\n    LatexCmds.langle = function () {\n        return new Bracket(L, '&lang;', '&rang;', '\\\\langle ', '\\\\rangle ');\n    };\n    LatexCmds.rangle = function () {\n        return new Bracket(R, '&lang;', '&rang;', '\\\\langle ', '\\\\rangle ');\n    };\n    CharCmds['|'] = function () { return new Bracket(L, '|', '|', '|', '|'); };\n    LatexCmds.lVert = function () {\n        return new Bracket(L, '&#8741;', '&#8741;', '\\\\lVert ', '\\\\rVert ');\n    };\n    LatexCmds.rVert = function () {\n        return new Bracket(R, '&#8741;', '&#8741;', '\\\\lVert ', '\\\\rVert ');\n    };\n    LatexCmds.left = /** @class */ (function (_super) {\n        __extends(left, _super);\n        function left() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        left.prototype.parser = function () {\n            var regex = Parser.regex;\n            var string = Parser.string;\n            var optWhitespace = Parser.optWhitespace;\n            return optWhitespace\n                .then(regex(/^(?:[([|]|\\\\\\{|\\\\langle(?![a-zA-Z])|\\\\lVert(?![a-zA-Z]))/))\n                .then(function (ctrlSeq) {\n                var open = ctrlSeq.replace(/^\\\\/, '');\n                if (ctrlSeq == '\\\\langle') {\n                    open = '&lang;';\n                    ctrlSeq = ctrlSeq + ' ';\n                }\n                if (ctrlSeq == '\\\\lVert') {\n                    open = '&#8741;';\n                    ctrlSeq = ctrlSeq + ' ';\n                }\n                return latexMathParser.then(function (block) {\n                    return string('\\\\right')\n                        .skip(optWhitespace)\n                        .then(regex(/^(?:[\\])|]|\\\\\\}|\\\\rangle(?![a-zA-Z])|\\\\rVert(?![a-zA-Z]))/))\n                        .map(function (end) {\n                        var close = end.replace(/^\\\\/, '');\n                        if (end == '\\\\rangle') {\n                            close = '&rang;';\n                            end = end + ' ';\n                        }\n                        if (end == '\\\\rVert') {\n                            close = '&#8741;';\n                            end = end + ' ';\n                        }\n                        var cmd = new Bracket(0, open, close, ctrlSeq, end);\n                        cmd.blocks = [block];\n                        block.adopt(cmd, 0, 0);\n                        return cmd;\n                    });\n                });\n            });\n        };\n        return left;\n    }(MathCommand));\n    LatexCmds.right = /** @class */ (function (_super) {\n        __extends(right, _super);\n        function right() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        right.prototype.parser = function () {\n            return Parser.fail('unmatched \\\\right');\n        };\n        return right;\n    }(MathCommand));\n    var leftBinomialSymbol = SVG_SYMBOLS['('];\n    var rightBinomialSymbol = SVG_SYMBOLS[')'];\n    var Binomial = /** @class */ (function (_super) {\n        __extends(Binomial, _super);\n        function Binomial() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\binom';\n            _this_1.domView = new DOMView(2, function (blocks) {\n                return h('span', { class: 'mq-non-leaf mq-bracket-container' }, [\n                    h('span', {\n                        style: 'width:' + leftBinomialSymbol.width,\n                        class: 'mq-paren mq-bracket-l mq-scaled',\n                    }, [leftBinomialSymbol.html()]),\n                    h('span', {\n                        style: 'margin-left:' +\n                            leftBinomialSymbol.width +\n                            '; margin-right:' +\n                            rightBinomialSymbol.width,\n                        class: 'mq-non-leaf mq-bracket-middle',\n                    }, [\n                        h('span', { class: 'mq-array mq-non-leaf' }, [\n                            h.block('span', {}, blocks[0]),\n                            h.block('span', {}, blocks[1]),\n                        ]),\n                    ]),\n                    h('span', {\n                        style: 'width:' + rightBinomialSymbol.width,\n                        class: 'mq-paren mq-bracket-r mq-scaled',\n                    }, [rightBinomialSymbol.html()]),\n                ]);\n            });\n            _this_1.textTemplate = ['choose(', ',', ')'];\n            _this_1.mathspeakTemplate = ['StartBinomial,', 'Choose', ', EndBinomial'];\n            _this_1.ariaLabel = 'binomial';\n            return _this_1;\n        }\n        return Binomial;\n    }(DelimsNode));\n    LatexCmds.binom = LatexCmds.binomial = Binomial;\n    LatexCmds.choose = /** @class */ (function (_super) {\n        __extends(class_14, _super);\n        function class_14() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_14.prototype.createLeftOf = function (cursor) {\n            LiveFraction.prototype.createLeftOf(cursor);\n        };\n        return class_14;\n    }(Binomial));\n    var MathFieldNode = /** @class */ (function (_super) {\n        __extends(MathFieldNode, _super);\n        function MathFieldNode() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\MathQuillMathField';\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-editable-field' }, [\n                    h.block('span', { class: 'mq-root-block', 'aria-hidden': 'true' }, blocks[0]),\n                ]);\n            });\n            return _this_1;\n        }\n        MathFieldNode.prototype.parser = function () {\n            var self = this, string = Parser.string, regex = Parser.regex, succeed = Parser.succeed;\n            return string('[')\n                .then(regex(/^[a-z][a-z0-9]*/i))\n                .skip(string(']'))\n                .map(function (name) {\n                self.name = name;\n            })\n                .or(succeed(undefined))\n                .then(_super.prototype.parser.call(this));\n        };\n        MathFieldNode.prototype.finalizeTree = function (options) {\n            var ctrlr = new Controller(this.getEnd(L), this.domFrag().oneElement(), options);\n            ctrlr.KIND_OF_MQ = 'MathField';\n            ctrlr.editable = true;\n            ctrlr.createTextarea();\n            ctrlr.editablesTextareaEvents();\n            ctrlr.cursor.insAtRightEnd(ctrlr.root);\n            RootBlockMixin(ctrlr.root);\n            // MathQuill applies aria-hidden to .mq-root-block containers\n            // because these contain math notation that screen readers can't\n            // interpret directly. MathQuill use an aria-live region as a\n            // sibling of these block containers to provide an alternative\n            // representation for screen readers\n            //\n            // MathFieldNodes have their own focusable text aria and aria live\n            // region, so it is incorrect for any parent of the editable field\n            // to have an aria-hidden property\n            //\n            // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden\n            //\n            // Handle this by recursively walking the parents of this element\n            // until we hit a root block, and if we hit any parent with\n            // aria-hidden=\"true\", removing the property from the parent and\n            // pushing it down to each of the parents children. This should\n            // result in no parent of this node having aria-hidden=\"true\", but\n            // should keep as much of what was previously hidden hidden as\n            // possible while obeying this constraint\n            function pushDownAriaHidden(node) {\n                if (node.parentNode && !domFrag(node).hasClass('mq-root-block')) {\n                    pushDownAriaHidden(node.parentNode);\n                }\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    var element = node;\n                    if (element.getAttribute('aria-hidden') === 'true') {\n                        element.removeAttribute('aria-hidden');\n                        domFrag(node)\n                            .children()\n                            .eachElement(function (child) {\n                            child.setAttribute('aria-hidden', 'true');\n                        });\n                    }\n                }\n            }\n            pushDownAriaHidden(this.domFrag().parent().oneElement());\n            this.domFrag().oneElement().removeAttribute('aria-hidden');\n        };\n        MathFieldNode.prototype.registerInnerField = function (innerFields, MathField) {\n            var controller = this.getEnd(L).controller;\n            var newField = new MathField(controller);\n            innerFields[this.name] = newField;\n            innerFields.push(newField);\n        };\n        MathFieldNode.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            this.getEnd(L).latexRecursive(ctx);\n            this.checkCursorContextClose(ctx);\n        };\n        MathFieldNode.prototype.text = function () {\n            return this.getEnd(L).text();\n        };\n        return MathFieldNode;\n    }(MathCommand));\n    LatexCmds.editable = LatexCmds.MathQuillMathField = MathFieldNode; // backcompat with before cfd3620 on #233\n    // Embed arbitrary things\n    // Probably the closest DOM analogue would be an iframe?\n    // From MathQuill's perspective, it's a MQSymbol, it can be\n    // anywhere and the cursor can go around it but never in it.\n    // Create by calling public API method .dropEmbedded(),\n    // or by calling the global public API method .registerEmbed()\n    // and rendering LaTeX like \\embed{registeredName} (see test).\n    var EmbedNode = /** @class */ (function (_super) {\n        __extends(EmbedNode, _super);\n        function EmbedNode() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EmbedNode.prototype.setOptions = function (options) {\n            function noop() {\n                return '';\n            }\n            this.text = options.text || noop;\n            this.domView = new DOMView(0, function () {\n                return h('span', {}, [parseHTML(options.htmlString || '')]);\n            });\n            this.latex = options.latex || noop;\n            return this;\n        };\n        EmbedNode.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += this.latex();\n            this.checkCursorContextClose(ctx);\n        };\n        EmbedNode.prototype.parser = function () {\n            var self = this, string = Parser.string, regex = Parser.regex, succeed = Parser.succeed;\n            return string('{')\n                .then(regex(/^[a-z][a-z0-9]*/i))\n                .skip(string('}'))\n                .then(function (name) {\n                // the chars allowed in the optional data block are arbitrary other than\n                // excluding curly braces and square brackets (which'd be too confusing)\n                return string('[')\n                    .then(regex(/^[-\\w\\s]*/))\n                    .skip(string(']'))\n                    .or(succeed(undefined))\n                    .map(function (data) {\n                    return self.setOptions(EMBEDS[name](data));\n                });\n            });\n        };\n        return EmbedNode;\n    }(MQSymbol));\n    LatexCmds.embed = EmbedNode;\n    /****************************************\n     * Input box to type backslash commands\n     ***************************************/\n    CharCmds['\\\\'] = /** @class */ (function (_super) {\n        __extends(LatexCommandInput, _super);\n        function LatexCommandInput() {\n            var _this_1 = _super !== null && _super.apply(this, arguments) || this;\n            _this_1.ctrlSeq = '\\\\';\n            _this_1.domView = new DOMView(1, function (blocks) {\n                return h('span', { class: 'mq-latex-command-input-wrapper mq-non-leaf' }, [\n                    h('span', { class: 'mq-latex-command-input mq-non-leaf' }, [\n                        h.text('\\\\'),\n                        h.block('span', {}, blocks[0]),\n                    ]),\n                ]);\n            });\n            _this_1.textTemplate = ['\\\\'];\n            return _this_1;\n        }\n        LatexCommandInput.prototype.replaces = function (replacedFragment) {\n            this._replacedFragment = replacedFragment.disown();\n            this.isEmpty = function () {\n                return false;\n            };\n        };\n        LatexCommandInput.prototype.createBlocks = function () {\n            _super.prototype.createBlocks.call(this);\n            var endsL = this.getEnd(L);\n            endsL.focus = function () {\n                this.parent.domFrag().addClass('mq-hasCursor');\n                if (this.isEmpty())\n                    this.parent.domFrag().removeClass('mq-empty');\n                return this;\n            };\n            endsL.blur = function () {\n                this.parent.domFrag().removeClass('mq-hasCursor');\n                if (this.isEmpty())\n                    this.parent.domFrag().addClass('mq-empty');\n                return this;\n            };\n            endsL.write = function (cursor, ch) {\n                cursor.show().deleteSelection();\n                if (ch.match(/[a-z]/i)) {\n                    new VanillaSymbol(ch).createLeftOf(cursor);\n                    // TODO needs tests\n                    cursor.controller.aria.alert(ch);\n                }\n                else {\n                    var cmd = this.parent.renderCommand(cursor);\n                    // TODO needs tests\n                    cursor.controller.aria.queue(cmd.mathspeak({ createdLeftOf: cursor }));\n                    if (ch !== '\\\\' || !this.isEmpty())\n                        cursor.parent.write(cursor, ch);\n                    else\n                        cursor.controller.aria.alert();\n                }\n            };\n            var originalKeystroke = endsL.keystroke;\n            endsL.keystroke = function (key, e, ctrlr) {\n                if (key === 'Tab' || key === 'Enter' || key === 'Spacebar') {\n                    var cmd = this.parent.renderCommand(ctrlr.cursor);\n                    // TODO needs tests\n                    ctrlr.aria.alert(cmd.mathspeak({ createdLeftOf: ctrlr.cursor }));\n                    e === null || e === void 0 ? void 0 : e.preventDefault();\n                    return;\n                }\n                return originalKeystroke.call(this, key, e, ctrlr);\n            };\n        };\n        LatexCommandInput.prototype.createLeftOf = function (cursor) {\n            _super.prototype.createLeftOf.call(this, cursor);\n            if (this._replacedFragment) {\n                var frag = this.domFrag();\n                var el_1 = frag.oneElement();\n                this._replacedFragment.domFrag().addClass('mq-blur');\n                //FIXME: is monkey-patching the mousedown and mousemove handlers the right way to do this?\n                var rewriteMousedownEventTarget = function (e) {\n                    {\n                        // TODO - overwritting e.target\n                        e.target = el_1;\n                        el_1.dispatchEvent(e);\n                        return false;\n                    }\n                };\n                el_1.addEventListener('mousedown', rewriteMousedownEventTarget);\n                el_1.addEventListener('mouseup', rewriteMousedownEventTarget);\n                this._replacedFragment.domFrag().insertBefore(frag.children().first());\n            }\n        };\n        LatexCommandInput.prototype.latexRecursive = function (ctx) {\n            this.checkCursorContextOpen(ctx);\n            ctx.latex += '\\\\';\n            this.getEnd(L).latexRecursive(ctx);\n            ctx.latex += ' ';\n            this.checkCursorContextClose(ctx);\n        };\n        LatexCommandInput.prototype.renderCommand = function (cursor) {\n            this.setDOM(this.domFrag().children().lastElement());\n            this.remove();\n            if (this[R]) {\n                cursor.insLeftOf(this[R]);\n            }\n            else {\n                cursor.insAtRightEnd(this.parent);\n            }\n            var latex = this.getEnd(L).latex();\n            if (!latex)\n                latex = ' ';\n            var cmd = LatexCmds[latex];\n            if (cmd) {\n                var node = void 0;\n                if (isMQNodeClass(cmd)) {\n                    node = new cmd(latex);\n                }\n                else {\n                    node = cmd(latex);\n                }\n                if (this._replacedFragment)\n                    node.replaces(this._replacedFragment);\n                node.createLeftOf(cursor);\n                return node;\n            }\n            else {\n                var node = new TextBlock();\n                node.replaces(latex);\n                node.createLeftOf(cursor);\n                cursor.insRightOf(node);\n                if (this._replacedFragment) {\n                    this._replacedFragment.remove();\n                }\n                return node;\n            }\n        };\n        return LatexCommandInput;\n    }(MathCommand));\n    // For backwards compatibility, set up the global MathQuill object as an instance of API interface v1\n    if (window.jQuery) {\n        MQ1 = getInterface(1);\n        for (var key in MQ1)\n            (function (key, val) {\n                if (typeof val === 'function') {\n                    MathQuill[key] = function () {\n                        insistOnInterVer();\n                        return val.apply(this, arguments);\n                    };\n                    MathQuill[key].prototype = val.prototype;\n                }\n                else\n                    MathQuill[key] = val;\n            })(key, MQ1[key]);\n    }\n}());\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = window.MathQuill;\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/mathquill/build/mathquill.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.6.3\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2022-12-20T21:28Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket trac-14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.3\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.9\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2022-12-19\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// `qSA` may not throw for unrecognized parts using forgiving parsing:\n\t\t\t\t\t// https://drafts.csswg.org/selectors/#forgiving-selector\n\t\t\t\t\t// like the `:has()` pseudo-class:\n\t\t\t\t\t// https://drafts.csswg.org/selectors/#relational\n\t\t\t\t\t// `CSS.supports` is still expected to return `false` then:\n\t\t\t\t\t// https://drafts.csswg.org/css-conditional-4/#typedef-supports-selector-fn\n\t\t\t\t\t// https://drafts.csswg.org/css-conditional-4/#dfn-support-selector\n\t\t\t\t\tif ( support.cssSupportsSelector &&\n\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t!CSS.supports( \"selector(:is(\" + newSelector + \"))\" ) ) {\n\n\t\t\t\t\t\t// Support: IE 11+\n\t\t\t\t\t\t// Throw to get to the same code path as an error directly in qSA.\n\t\t\t\t\t\t// Note: once we only support browser supporting\n\t\t\t\t\t\t// `CSS.supports('selector(...)')`, we can most likely drop\n\t\t\t\t\t\t// the `try-catch`. IE doesn't implement the API.\n\t\t\t\t\t\tthrow new Error();\n\t\t\t\t\t}\n\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t// Support: Chrome 105+, Firefox 104+, Safari 15.4+\n\t// Make sure forgiving mode is not used in `CSS.supports( \"selector(...)\" )`.\n\t//\n\t// `:is()` uses a forgiving selector list as an argument and is widely\n\t// implemented, so it's a good one to test against.\n\tsupport.cssSupportsSelector = assert( function() {\n\t\t/* eslint-disable no-undef */\n\n\t\treturn CSS.supports( \"selector(*)\" ) &&\n\n\t\t\t// Support: Firefox 78-81 only\n\t\t\t// In old Firefox, `:is()` didn't use forgiving parsing. In that case,\n\t\t\t// fail this test as there's no selector to test against that.\n\t\t\t// `CSS.supports` uses unforgiving parsing\n\t\t\tdocument.querySelectorAll( \":is(:jqfake)\" ) &&\n\n\t\t\t// `*` is needed as Safari & newer Chrome implemented something in between\n\t\t\t// for `:has()` - it throws in `qSA` if it only contains an unsupported\n\t\t\t// argument but multiple ones, one of which is supported, are fine.\n\t\t\t// We want to play safe in case `:is()` gets the same treatment.\n\t\t\t!CSS.supports( \"selector(:is(*,:jqfake))\" );\n\n\t\t/* eslint-enable */\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\tif ( !support.cssSupportsSelector ) {\n\n\t\t// Support: Chrome 105+, Safari 15.4+\n\t\t// `:has()` uses a forgiving selector list as an argument so our regular\n\t\t// `try-catch` mechanism fails to catch `:has()` with arguments not supported\n\t\t// natively like `:has(:contains(\"Foo\"))`. Where supported & spec-compliant,\n\t\t// we now use `CSS.supports(\"selector(:is(SELECTOR_TO_BE_TESTED))\")`, but\n\t\t// outside that we mark `:has` as buggy.\n\t\trbuggyQSA.push( \":has\" );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\n\t\t\t// Support: IE <9 only\n\t\t\t// IE doesn't have `contains` on `document` so we need to check for\n\t\t\t// `documentElement` presence.\n\t\t\t// We need to fall back to `a` when `documentElement` is missing\n\t\t\t// as `ownerDocument` of elements within `<template/>` may have\n\t\t\t// a null one - a default behavior of all modern browsers.\n\t\t\tvar adown = a.nodeType === 9 && a.documentElement || a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE <10 only\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n\t// Strict HTML recognition (trac-11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See trac-6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (trac-9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see trac-8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (trac-14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (trac-11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (trac-14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (trac-13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (trac-12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (trac-13208)\n\t\t\t\t// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (trac-13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (trac-504, trac-13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur if we're currently inside\n\t\t// a leveraged native-event stack\n\t\t_default: function( event ) {\n\t\t\treturn dataPriv.get( event.target, type );\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\n\trcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (trac-8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Unwrap a CDATA section containing script contents. This shouldn't be\n\t\t\t\t\t\t\t// needed as in XML documents they're already not visible when\n\t\t\t\t\t\t\t// inspecting element contents and in HTML documents they have no\n\t\t\t\t\t\t\t// meaning but we're preserving that logic for backwards compatibility.\n\t\t\t\t\t\t\t// This will be removed completely in 4.0. See gh-4904.\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar rcustomProp = /^--/;\n\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\nvar whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n\n\nvar rtrimCSS = new RegExp(\n\t\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\n\t\"g\"\n);\n\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (trac-8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tisCustomProp = rcustomProp.test( name ),\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, trac-12537)\n\t//   .css('--customProperty) (gh-3144)\n\tif ( computed ) {\n\n\t\t// Support: IE <=9 - 11+\n\t\t// IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n\t\t// it's only available as `\"cssFloat\"`. We no longer modify properties\n\t\t// sent to `.css()` apart from camelCasing, so we need to check both.\n\t\t// Normally, this would create difference in behavior: if\n\t\t// `getPropertyValue` returns an empty string, the value returned\n\t\t// by `.css()` would be `undefined`. This is usually the case for\n\t\t// disconnected elements. However, in IE even disconnected elements\n\t\t// with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( isCustomProp && ret ) {\n\n\t\t\t// Support: Firefox 105+, Chrome <=105+\n\t\t\t// Spec requires trimming whitespace for custom properties (gh-4926).\n\t\t\t// Firefox only trims leading whitespace. Chrome just collapses\n\t\t\t// both leading & trailing whitespace to a single space.\n\t\t\t//\n\t\t\t// Fall back to `undefined` if empty string returned.\n\t\t\t// This collapses a missing definition with property defined\n\t\t\t// and set to an empty string but there's no standard API\n\t\t\t// allowing us to differentiate them without a performance penalty\n\t\t\t// and returning `undefined` aligns with older jQuery.\n\t\t\t//\n\t\t\t// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n\t\t\t// as whitespace while CSS does not, but this is not a problem\n\t\t\t// because CSS preprocessing replaces them with U+000A LINE FEED\n\t\t\t// (which *is* CSS whitespace)\n\t\t\t// https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n\t\t\tret = ret.replace( rtrimCSS, \"$1\" ) || undefined;\n\t\t}\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug trac-9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (trac-7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// Use proper attribute retrieval (trac-12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += className + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar classNames, className, i, self,\n\t\t\ttype = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\treturn this.each( function() {\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\tself = jQuery( this );\n\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (trac-14686, trac-14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (trac-2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (trac-9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (trac-6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// trac-7653, trac-8125, trac-8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes trac-9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (trac-10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket trac-12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// trac-9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (trac-11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// trac-1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see trac-8605, trac-14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// trac-14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\n// Require that the \"whitespace run\" starts from a non-whitespace\n// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"$1\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (trac-13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = __webpack_require__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/prop-types/checkPropTypes.js?");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar has = __webpack_require__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/prop-types/factoryWithTypeCheckers.js?");

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/prop-types/index.js?");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/prop-types/lib/ReactPropTypesSecret.js?");

/***/ }),

/***/ "./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/prop-types/lib/has.js?");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/react-is/cjs/react-is.development.js?");

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n\n\n//# sourceURL=webpack://MathquillComponent/./node_modules/react-is/index.js?");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});